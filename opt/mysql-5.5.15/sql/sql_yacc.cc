/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 0

/* Substitute the variable and function names.  */
#define yyparse MYSQLparse
#define yylex   MYSQLlex
#define yyerror MYSQLerror
#define yylval  MYSQLlval
#define yychar  MYSQLchar
#define yydebug MYSQLdebug
#define yynerrs MYSQLnerrs


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACTION = 260,
     ADD = 261,
     ADDDATE_SYM = 262,
     AFTER_SYM = 263,
     AGAINST = 264,
     AGGREGATE_SYM = 265,
     ALGORITHM_SYM = 266,
     ALL = 267,
     ALTER = 268,
     ANALYZE_SYM = 269,
     AND_AND_SYM = 270,
     AND_SYM = 271,
     ANY_SYM = 272,
     AS = 273,
     ASC = 274,
     ASCII_SYM = 275,
     ASENSITIVE_SYM = 276,
     AT_SYM = 277,
     AUTHORS_SYM = 278,
     AUTOEXTEND_SIZE_SYM = 279,
     AUTO_INC = 280,
     AVG_ROW_LENGTH = 281,
     AVG_SYM = 282,
     BACKUP_SYM = 283,
     BEFORE_SYM = 284,
     BEGIN_SYM = 285,
     BETWEEN_SYM = 286,
     BIGINT = 287,
     BINARY = 288,
     BINLOG_SYM = 289,
     BIN_NUM = 290,
     BIT_AND = 291,
     BIT_OR = 292,
     BIT_SYM = 293,
     BIT_XOR = 294,
     BLOB_SYM = 295,
     BLOCK_SYM = 296,
     BOOLEAN_SYM = 297,
     BOOL_SYM = 298,
     BOTH = 299,
     BTREE_SYM = 300,
     BY = 301,
     BYTE_SYM = 302,
     CACHE_SYM = 303,
     CALL_SYM = 304,
     CASCADE = 305,
     CASCADED = 306,
     CASE_SYM = 307,
     CAST_SYM = 308,
     CATALOG_NAME_SYM = 309,
     CHAIN_SYM = 310,
     CHANGE = 311,
     CHANGED = 312,
     CHARSET = 313,
     CHAR_SYM = 314,
     CHECKSUM_SYM = 315,
     CHECK_SYM = 316,
     CIPHER_SYM = 317,
     CLASS_ORIGIN_SYM = 318,
     CLIENT_SYM = 319,
     CLOSE_SYM = 320,
     COALESCE = 321,
     CODE_SYM = 322,
     COLLATE_SYM = 323,
     COLLATION_SYM = 324,
     COLUMNS = 325,
     COLUMN_SYM = 326,
     COLUMN_NAME_SYM = 327,
     COMMENT_SYM = 328,
     COMMITTED_SYM = 329,
     COMMIT_SYM = 330,
     COMPACT_SYM = 331,
     COMPLETION_SYM = 332,
     COMPRESSED_SYM = 333,
     CONCURRENT = 334,
     CONDITION_SYM = 335,
     CONNECTION_SYM = 336,
     CONSISTENT_SYM = 337,
     CONSTRAINT = 338,
     CONSTRAINT_CATALOG_SYM = 339,
     CONSTRAINT_NAME_SYM = 340,
     CONSTRAINT_SCHEMA_SYM = 341,
     CONTAINS_SYM = 342,
     CONTEXT_SYM = 343,
     CONTINUE_SYM = 344,
     CONTRIBUTORS_SYM = 345,
     CONVERT_SYM = 346,
     COUNT_SYM = 347,
     CPU_SYM = 348,
     CREATE = 349,
     CROSS = 350,
     CUBE_SYM = 351,
     CURDATE = 352,
     CURRENT_USER = 353,
     CURSOR_SYM = 354,
     CURSOR_NAME_SYM = 355,
     CURTIME = 356,
     DATABASE = 357,
     DATABASES = 358,
     DATAFILE_SYM = 359,
     DATA_SYM = 360,
     DATETIME = 361,
     DATE_ADD_INTERVAL = 362,
     DATE_SUB_INTERVAL = 363,
     DATE_SYM = 364,
     DAY_HOUR_SYM = 365,
     DAY_MICROSECOND_SYM = 366,
     DAY_MINUTE_SYM = 367,
     DAY_SECOND_SYM = 368,
     DAY_SYM = 369,
     DEALLOCATE_SYM = 370,
     DECIMAL_NUM = 371,
     DECIMAL_SYM = 372,
     DECLARE_SYM = 373,
     DEFAULT = 374,
     DEFINER_SYM = 375,
     DELAYED_SYM = 376,
     DELAY_KEY_WRITE_SYM = 377,
     DELETE_SYM = 378,
     DESC = 379,
     DESCRIBE = 380,
     DES_KEY_FILE = 381,
     DETERMINISTIC_SYM = 382,
     DIRECTORY_SYM = 383,
     DISABLE_SYM = 384,
     DISCARD = 385,
     DISK_SYM = 386,
     DISTINCT = 387,
     DIV_SYM = 388,
     DOUBLE_SYM = 389,
     DO_SYM = 390,
     DROP = 391,
     DUAL_SYM = 392,
     DUMPFILE = 393,
     DUPLICATE_SYM = 394,
     DYNAMIC_SYM = 395,
     EACH_SYM = 396,
     ELSE = 397,
     ELSEIF_SYM = 398,
     ENABLE_SYM = 399,
     ENCLOSED = 400,
     END = 401,
     ENDS_SYM = 402,
     END_OF_INPUT = 403,
     ENGINES_SYM = 404,
     ENGINE_SYM = 405,
     ENUM = 406,
     EQ = 407,
     EQUAL_SYM = 408,
     ERROR_SYM = 409,
     ERRORS = 410,
     ESCAPED = 411,
     ESCAPE_SYM = 412,
     EVENTS_SYM = 413,
     EVENT_SYM = 414,
     EVERY_SYM = 415,
     EXECUTE_SYM = 416,
     EXISTS = 417,
     EXIT_SYM = 418,
     EXPANSION_SYM = 419,
     EXTENDED_SYM = 420,
     EXTENT_SIZE_SYM = 421,
     EXTRACT_SYM = 422,
     FALSE_SYM = 423,
     FAST_SYM = 424,
     FAULTS_SYM = 425,
     FETCH_SYM = 426,
     FILE_SYM = 427,
     FIRST_SYM = 428,
     FIXED_SYM = 429,
     FLOAT_NUM = 430,
     FLOAT_SYM = 431,
     FLUSH_SYM = 432,
     FORCE_SYM = 433,
     FOREIGN = 434,
     FOR_SYM = 435,
     FOUND_SYM = 436,
     FROM = 437,
     FULL = 438,
     FULLTEXT_SYM = 439,
     FUNCTION_SYM = 440,
     GE = 441,
     GENERAL = 442,
     GEOMETRYCOLLECTION = 443,
     GEOMETRY_SYM = 444,
     GET_FORMAT = 445,
     GLOBAL_SYM = 446,
     GRANT = 447,
     GRANTS = 448,
     GROUP_SYM = 449,
     GROUP_CONCAT_SYM = 450,
     GT_SYM = 451,
     HANDLER_SYM = 452,
     HASH_SYM = 453,
     HAVING = 454,
     HELP_SYM = 455,
     HEX_NUM = 456,
     HIGH_PRIORITY = 457,
     HOST_SYM = 458,
     HOSTS_SYM = 459,
     HOUR_MICROSECOND_SYM = 460,
     HOUR_MINUTE_SYM = 461,
     HOUR_SECOND_SYM = 462,
     HOUR_SYM = 463,
     IDENT = 464,
     IDENTIFIED_SYM = 465,
     IDENT_QUOTED = 466,
     IF = 467,
     IGNORE_SYM = 468,
     IGNORE_SERVER_IDS_SYM = 469,
     IMPORT = 470,
     INDEXES = 471,
     INDEX_SYM = 472,
     INFILE = 473,
     INITIAL_SIZE_SYM = 474,
     INNER_SYM = 475,
     INOUT_SYM = 476,
     INSENSITIVE_SYM = 477,
     INSERT = 478,
     INSERT_METHOD = 479,
     INSTALL_SYM = 480,
     INTERVAL_SYM = 481,
     INTO = 482,
     INT_SYM = 483,
     INVOKER_SYM = 484,
     IN_SYM = 485,
     IO_SYM = 486,
     IPC_SYM = 487,
     IS = 488,
     ISOLATION = 489,
     ISSUER_SYM = 490,
     ITERATE_SYM = 491,
     JOIN_SYM = 492,
     KEYS = 493,
     KEY_BLOCK_SIZE = 494,
     KEY_SYM = 495,
     KILL_SYM = 496,
     LANGUAGE_SYM = 497,
     LAST_SYM = 498,
     LE = 499,
     LEADING = 500,
     LEAVES = 501,
     LEAVE_SYM = 502,
     LEFT = 503,
     LESS_SYM = 504,
     LEVEL_SYM = 505,
     LEX_HOSTNAME = 506,
     LIKE = 507,
     LIMIT = 508,
     LINEAR_SYM = 509,
     LINES = 510,
     LINESTRING = 511,
     LIST_SYM = 512,
     LOAD = 513,
     LOCAL_SYM = 514,
     LOCATOR_SYM = 515,
     LOCKS_SYM = 516,
     LOCK_SYM = 517,
     LOGFILE_SYM = 518,
     LOGS_SYM = 519,
     LONGBLOB = 520,
     LONGTEXT = 521,
     LONG_NUM = 522,
     LONG_SYM = 523,
     LOOP_SYM = 524,
     LOW_PRIORITY = 525,
     LT = 526,
     MASTER_CONNECT_RETRY_SYM = 527,
     MASTER_HOST_SYM = 528,
     MASTER_LOG_FILE_SYM = 529,
     MASTER_LOG_POS_SYM = 530,
     MASTER_PASSWORD_SYM = 531,
     MASTER_PORT_SYM = 532,
     MASTER_SERVER_ID_SYM = 533,
     MASTER_SSL_CAPATH_SYM = 534,
     MASTER_SSL_CA_SYM = 535,
     MASTER_SSL_CERT_SYM = 536,
     MASTER_SSL_CIPHER_SYM = 537,
     MASTER_SSL_KEY_SYM = 538,
     MASTER_SSL_SYM = 539,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 540,
     MASTER_SYM = 541,
     MASTER_USER_SYM = 542,
     MASTER_HEARTBEAT_PERIOD_SYM = 543,
     MATCH = 544,
     MAX_CONNECTIONS_PER_HOUR = 545,
     MAX_QUERIES_PER_HOUR = 546,
     MAX_ROWS = 547,
     MAX_SIZE_SYM = 548,
     MAX_SYM = 549,
     MAX_UPDATES_PER_HOUR = 550,
     MAX_USER_CONNECTIONS_SYM = 551,
     MAX_VALUE_SYM = 552,
     MEDIUMBLOB = 553,
     MEDIUMINT = 554,
     MEDIUMTEXT = 555,
     MEDIUM_SYM = 556,
     MEMORY_SYM = 557,
     MERGE_SYM = 558,
     MESSAGE_TEXT_SYM = 559,
     MICROSECOND_SYM = 560,
     MIGRATE_SYM = 561,
     MINUTE_MICROSECOND_SYM = 562,
     MINUTE_SECOND_SYM = 563,
     MINUTE_SYM = 564,
     MIN_ROWS = 565,
     MIN_SYM = 566,
     MODE_SYM = 567,
     MODIFIES_SYM = 568,
     MODIFY_SYM = 569,
     MOD_SYM = 570,
     MONTH_SYM = 571,
     MULTILINESTRING = 572,
     MULTIPOINT = 573,
     MULTIPOLYGON = 574,
     MUTEX_SYM = 575,
     MYSQL_ERRNO_SYM = 576,
     NAMES_SYM = 577,
     NAME_SYM = 578,
     NATIONAL_SYM = 579,
     NATURAL = 580,
     NCHAR_STRING = 581,
     NCHAR_SYM = 582,
     NDBCLUSTER_SYM = 583,
     NE = 584,
     NEG = 585,
     NEW_SYM = 586,
     NEXT_SYM = 587,
     NODEGROUP_SYM = 588,
     NONE_SYM = 589,
     NOT2_SYM = 590,
     NOT_SYM = 591,
     NOW_SYM = 592,
     NO_SYM = 593,
     NO_WAIT_SYM = 594,
     NO_WRITE_TO_BINLOG = 595,
     NULL_SYM = 596,
     NUM = 597,
     NUMERIC_SYM = 598,
     NVARCHAR_SYM = 599,
     OFFSET_SYM = 600,
     OLD_PASSWORD = 601,
     ON = 602,
     ONE_SHOT_SYM = 603,
     ONE_SYM = 604,
     OPEN_SYM = 605,
     OPTIMIZE = 606,
     OPTIONS_SYM = 607,
     OPTION = 608,
     OPTIONALLY = 609,
     OR2_SYM = 610,
     ORDER_SYM = 611,
     OR_OR_SYM = 612,
     OR_SYM = 613,
     OUTER = 614,
     OUTFILE = 615,
     OUT_SYM = 616,
     OWNER_SYM = 617,
     PACK_KEYS_SYM = 618,
     PAGE_SYM = 619,
     PARAM_MARKER = 620,
     PARSER_SYM = 621,
     PARTIAL = 622,
     PARTITIONING_SYM = 623,
     PARTITIONS_SYM = 624,
     PARTITION_SYM = 625,
     PASSWORD = 626,
     PHASE_SYM = 627,
     PLUGINS_SYM = 628,
     PLUGIN_SYM = 629,
     POINT_SYM = 630,
     POLYGON = 631,
     PORT_SYM = 632,
     POSITION_SYM = 633,
     PRECISION = 634,
     PREPARE_SYM = 635,
     PRESERVE_SYM = 636,
     PREV_SYM = 637,
     PRIMARY_SYM = 638,
     PRIVILEGES = 639,
     PROCEDURE_SYM = 640,
     PROCESS = 641,
     PROCESSLIST_SYM = 642,
     PROFILE_SYM = 643,
     PROFILES_SYM = 644,
     PROXY_SYM = 645,
     PURGE = 646,
     QUARTER_SYM = 647,
     QUERY_SYM = 648,
     QUICK = 649,
     RANGE_SYM = 650,
     READS_SYM = 651,
     READ_ONLY_SYM = 652,
     READ_SYM = 653,
     READ_WRITE_SYM = 654,
     REAL = 655,
     REBUILD_SYM = 656,
     RECOVER_SYM = 657,
     REDOFILE_SYM = 658,
     REDO_BUFFER_SIZE_SYM = 659,
     REDUNDANT_SYM = 660,
     REFERENCES = 661,
     REGEXP = 662,
     RELAY = 663,
     RELAYLOG_SYM = 664,
     RELAY_LOG_FILE_SYM = 665,
     RELAY_LOG_POS_SYM = 666,
     RELAY_THREAD = 667,
     RELEASE_SYM = 668,
     RELOAD = 669,
     REMOVE_SYM = 670,
     RENAME = 671,
     REORGANIZE_SYM = 672,
     REPAIR = 673,
     REPEATABLE_SYM = 674,
     REPEAT_SYM = 675,
     REPLACE = 676,
     REPLICATION = 677,
     REQUIRE_SYM = 678,
     RESET_SYM = 679,
     RESIGNAL_SYM = 680,
     RESOURCES = 681,
     RESTORE_SYM = 682,
     RESTRICT = 683,
     RESUME_SYM = 684,
     RETURNS_SYM = 685,
     RETURN_SYM = 686,
     REVOKE = 687,
     RIGHT = 688,
     ROLLBACK_SYM = 689,
     ROLLUP_SYM = 690,
     ROUTINE_SYM = 691,
     ROWS_SYM = 692,
     ROW_FORMAT_SYM = 693,
     ROW_SYM = 694,
     RTREE_SYM = 695,
     SAVEPOINT_SYM = 696,
     SCHEDULE_SYM = 697,
     SCHEMA_NAME_SYM = 698,
     SECOND_MICROSECOND_SYM = 699,
     SECOND_SYM = 700,
     SECURITY_SYM = 701,
     SELECT_SYM = 702,
     SENSITIVE_SYM = 703,
     SEPARATOR_SYM = 704,
     SERIALIZABLE_SYM = 705,
     SERIAL_SYM = 706,
     SESSION_SYM = 707,
     SERVER_SYM = 708,
     SERVER_OPTIONS = 709,
     SET = 710,
     SET_VAR = 711,
     SHARE_SYM = 712,
     SHIFT_LEFT = 713,
     SHIFT_RIGHT = 714,
     SHOW = 715,
     SHUTDOWN = 716,
     SIGNAL_SYM = 717,
     SIGNED_SYM = 718,
     SIMPLE_SYM = 719,
     SLAVE = 720,
     SLOW = 721,
     SMALLINT = 722,
     SNAPSHOT_SYM = 723,
     SOCKET_SYM = 724,
     SONAME_SYM = 725,
     SOUNDS_SYM = 726,
     SOURCE_SYM = 727,
     SPATIAL_SYM = 728,
     SPECIFIC_SYM = 729,
     SQLEXCEPTION_SYM = 730,
     SQLSTATE_SYM = 731,
     SQLWARNING_SYM = 732,
     SQL_BIG_RESULT = 733,
     SQL_BUFFER_RESULT = 734,
     SQL_CACHE_SYM = 735,
     SQL_CALC_FOUND_ROWS = 736,
     SQL_NO_CACHE_SYM = 737,
     SQL_SMALL_RESULT = 738,
     SQL_SYM = 739,
     SQL_THREAD = 740,
     SSL_SYM = 741,
     STARTING = 742,
     STARTS_SYM = 743,
     START_SYM = 744,
     STATUS_SYM = 745,
     STDDEV_SAMP_SYM = 746,
     STD_SYM = 747,
     STOP_SYM = 748,
     STORAGE_SYM = 749,
     STRAIGHT_JOIN = 750,
     STRING_SYM = 751,
     SUBCLASS_ORIGIN_SYM = 752,
     SUBDATE_SYM = 753,
     SUBJECT_SYM = 754,
     SUBPARTITIONS_SYM = 755,
     SUBPARTITION_SYM = 756,
     SUBSTRING = 757,
     SUM_SYM = 758,
     SUPER_SYM = 759,
     SUSPEND_SYM = 760,
     SWAPS_SYM = 761,
     SWITCHES_SYM = 762,
     SYSDATE = 763,
     TABLES = 764,
     TABLESPACE = 765,
     TABLE_REF_PRIORITY = 766,
     TABLE_SYM = 767,
     TABLE_CHECKSUM_SYM = 768,
     TABLE_NAME_SYM = 769,
     TEMPORARY = 770,
     TEMPTABLE_SYM = 771,
     TERMINATED = 772,
     TEXT_STRING = 773,
     TEXT_SYM = 774,
     THAN_SYM = 775,
     THEN_SYM = 776,
     TIMESTAMP = 777,
     TIMESTAMP_ADD = 778,
     TIMESTAMP_DIFF = 779,
     TIME_SYM = 780,
     TINYBLOB = 781,
     TINYINT = 782,
     TINYTEXT = 783,
     TO_SYM = 784,
     TRAILING = 785,
     TRANSACTION_SYM = 786,
     TRIGGERS_SYM = 787,
     TRIGGER_SYM = 788,
     TRIM = 789,
     TRUE_SYM = 790,
     TRUNCATE_SYM = 791,
     TYPES_SYM = 792,
     TYPE_SYM = 793,
     UDF_RETURNS_SYM = 794,
     ULONGLONG_NUM = 795,
     UNCOMMITTED_SYM = 796,
     UNDEFINED_SYM = 797,
     UNDERSCORE_CHARSET = 798,
     UNDOFILE_SYM = 799,
     UNDO_BUFFER_SIZE_SYM = 800,
     UNDO_SYM = 801,
     UNICODE_SYM = 802,
     UNINSTALL_SYM = 803,
     UNION_SYM = 804,
     UNIQUE_SYM = 805,
     UNKNOWN_SYM = 806,
     UNLOCK_SYM = 807,
     UNSIGNED = 808,
     UNTIL_SYM = 809,
     UPDATE_SYM = 810,
     UPGRADE_SYM = 811,
     USAGE = 812,
     USER = 813,
     USE_FRM = 814,
     USE_SYM = 815,
     USING = 816,
     UTC_DATE_SYM = 817,
     UTC_TIMESTAMP_SYM = 818,
     UTC_TIME_SYM = 819,
     VALUES = 820,
     VALUE_SYM = 821,
     VARBINARY = 822,
     VARCHAR = 823,
     VARIABLES = 824,
     VARIANCE_SYM = 825,
     VARYING = 826,
     VAR_SAMP_SYM = 827,
     VIEW_SYM = 828,
     WAIT_SYM = 829,
     WARNINGS = 830,
     WEEK_SYM = 831,
     WHEN_SYM = 832,
     WHERE = 833,
     WHILE_SYM = 834,
     WITH = 835,
     WITH_CUBE_SYM = 836,
     WITH_ROLLUP_SYM = 837,
     WORK_SYM = 838,
     WRAPPER_SYM = 839,
     WRITE_SYM = 840,
     X509_SYM = 841,
     XA_SYM = 842,
     XML_SYM = 843,
     XOR = 844,
     YEAR_MONTH_SYM = 845,
     YEAR_SYM = 846,
     ZEROFILL = 847
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYZE_SYM 269
#define AND_AND_SYM 270
#define AND_SYM 271
#define ANY_SYM 272
#define AS 273
#define ASC 274
#define ASCII_SYM 275
#define ASENSITIVE_SYM 276
#define AT_SYM 277
#define AUTHORS_SYM 278
#define AUTOEXTEND_SIZE_SYM 279
#define AUTO_INC 280
#define AVG_ROW_LENGTH 281
#define AVG_SYM 282
#define BACKUP_SYM 283
#define BEFORE_SYM 284
#define BEGIN_SYM 285
#define BETWEEN_SYM 286
#define BIGINT 287
#define BINARY 288
#define BINLOG_SYM 289
#define BIN_NUM 290
#define BIT_AND 291
#define BIT_OR 292
#define BIT_SYM 293
#define BIT_XOR 294
#define BLOB_SYM 295
#define BLOCK_SYM 296
#define BOOLEAN_SYM 297
#define BOOL_SYM 298
#define BOTH 299
#define BTREE_SYM 300
#define BY 301
#define BYTE_SYM 302
#define CACHE_SYM 303
#define CALL_SYM 304
#define CASCADE 305
#define CASCADED 306
#define CASE_SYM 307
#define CAST_SYM 308
#define CATALOG_NAME_SYM 309
#define CHAIN_SYM 310
#define CHANGE 311
#define CHANGED 312
#define CHARSET 313
#define CHAR_SYM 314
#define CHECKSUM_SYM 315
#define CHECK_SYM 316
#define CIPHER_SYM 317
#define CLASS_ORIGIN_SYM 318
#define CLIENT_SYM 319
#define CLOSE_SYM 320
#define COALESCE 321
#define CODE_SYM 322
#define COLLATE_SYM 323
#define COLLATION_SYM 324
#define COLUMNS 325
#define COLUMN_SYM 326
#define COLUMN_NAME_SYM 327
#define COMMENT_SYM 328
#define COMMITTED_SYM 329
#define COMMIT_SYM 330
#define COMPACT_SYM 331
#define COMPLETION_SYM 332
#define COMPRESSED_SYM 333
#define CONCURRENT 334
#define CONDITION_SYM 335
#define CONNECTION_SYM 336
#define CONSISTENT_SYM 337
#define CONSTRAINT 338
#define CONSTRAINT_CATALOG_SYM 339
#define CONSTRAINT_NAME_SYM 340
#define CONSTRAINT_SCHEMA_SYM 341
#define CONTAINS_SYM 342
#define CONTEXT_SYM 343
#define CONTINUE_SYM 344
#define CONTRIBUTORS_SYM 345
#define CONVERT_SYM 346
#define COUNT_SYM 347
#define CPU_SYM 348
#define CREATE 349
#define CROSS 350
#define CUBE_SYM 351
#define CURDATE 352
#define CURRENT_USER 353
#define CURSOR_SYM 354
#define CURSOR_NAME_SYM 355
#define CURTIME 356
#define DATABASE 357
#define DATABASES 358
#define DATAFILE_SYM 359
#define DATA_SYM 360
#define DATETIME 361
#define DATE_ADD_INTERVAL 362
#define DATE_SUB_INTERVAL 363
#define DATE_SYM 364
#define DAY_HOUR_SYM 365
#define DAY_MICROSECOND_SYM 366
#define DAY_MINUTE_SYM 367
#define DAY_SECOND_SYM 368
#define DAY_SYM 369
#define DEALLOCATE_SYM 370
#define DECIMAL_NUM 371
#define DECIMAL_SYM 372
#define DECLARE_SYM 373
#define DEFAULT 374
#define DEFINER_SYM 375
#define DELAYED_SYM 376
#define DELAY_KEY_WRITE_SYM 377
#define DELETE_SYM 378
#define DESC 379
#define DESCRIBE 380
#define DES_KEY_FILE 381
#define DETERMINISTIC_SYM 382
#define DIRECTORY_SYM 383
#define DISABLE_SYM 384
#define DISCARD 385
#define DISK_SYM 386
#define DISTINCT 387
#define DIV_SYM 388
#define DOUBLE_SYM 389
#define DO_SYM 390
#define DROP 391
#define DUAL_SYM 392
#define DUMPFILE 393
#define DUPLICATE_SYM 394
#define DYNAMIC_SYM 395
#define EACH_SYM 396
#define ELSE 397
#define ELSEIF_SYM 398
#define ENABLE_SYM 399
#define ENCLOSED 400
#define END 401
#define ENDS_SYM 402
#define END_OF_INPUT 403
#define ENGINES_SYM 404
#define ENGINE_SYM 405
#define ENUM 406
#define EQ 407
#define EQUAL_SYM 408
#define ERROR_SYM 409
#define ERRORS 410
#define ESCAPED 411
#define ESCAPE_SYM 412
#define EVENTS_SYM 413
#define EVENT_SYM 414
#define EVERY_SYM 415
#define EXECUTE_SYM 416
#define EXISTS 417
#define EXIT_SYM 418
#define EXPANSION_SYM 419
#define EXTENDED_SYM 420
#define EXTENT_SIZE_SYM 421
#define EXTRACT_SYM 422
#define FALSE_SYM 423
#define FAST_SYM 424
#define FAULTS_SYM 425
#define FETCH_SYM 426
#define FILE_SYM 427
#define FIRST_SYM 428
#define FIXED_SYM 429
#define FLOAT_NUM 430
#define FLOAT_SYM 431
#define FLUSH_SYM 432
#define FORCE_SYM 433
#define FOREIGN 434
#define FOR_SYM 435
#define FOUND_SYM 436
#define FROM 437
#define FULL 438
#define FULLTEXT_SYM 439
#define FUNCTION_SYM 440
#define GE 441
#define GENERAL 442
#define GEOMETRYCOLLECTION 443
#define GEOMETRY_SYM 444
#define GET_FORMAT 445
#define GLOBAL_SYM 446
#define GRANT 447
#define GRANTS 448
#define GROUP_SYM 449
#define GROUP_CONCAT_SYM 450
#define GT_SYM 451
#define HANDLER_SYM 452
#define HASH_SYM 453
#define HAVING 454
#define HELP_SYM 455
#define HEX_NUM 456
#define HIGH_PRIORITY 457
#define HOST_SYM 458
#define HOSTS_SYM 459
#define HOUR_MICROSECOND_SYM 460
#define HOUR_MINUTE_SYM 461
#define HOUR_SECOND_SYM 462
#define HOUR_SYM 463
#define IDENT 464
#define IDENTIFIED_SYM 465
#define IDENT_QUOTED 466
#define IF 467
#define IGNORE_SYM 468
#define IGNORE_SERVER_IDS_SYM 469
#define IMPORT 470
#define INDEXES 471
#define INDEX_SYM 472
#define INFILE 473
#define INITIAL_SIZE_SYM 474
#define INNER_SYM 475
#define INOUT_SYM 476
#define INSENSITIVE_SYM 477
#define INSERT 478
#define INSERT_METHOD 479
#define INSTALL_SYM 480
#define INTERVAL_SYM 481
#define INTO 482
#define INT_SYM 483
#define INVOKER_SYM 484
#define IN_SYM 485
#define IO_SYM 486
#define IPC_SYM 487
#define IS 488
#define ISOLATION 489
#define ISSUER_SYM 490
#define ITERATE_SYM 491
#define JOIN_SYM 492
#define KEYS 493
#define KEY_BLOCK_SIZE 494
#define KEY_SYM 495
#define KILL_SYM 496
#define LANGUAGE_SYM 497
#define LAST_SYM 498
#define LE 499
#define LEADING 500
#define LEAVES 501
#define LEAVE_SYM 502
#define LEFT 503
#define LESS_SYM 504
#define LEVEL_SYM 505
#define LEX_HOSTNAME 506
#define LIKE 507
#define LIMIT 508
#define LINEAR_SYM 509
#define LINES 510
#define LINESTRING 511
#define LIST_SYM 512
#define LOAD 513
#define LOCAL_SYM 514
#define LOCATOR_SYM 515
#define LOCKS_SYM 516
#define LOCK_SYM 517
#define LOGFILE_SYM 518
#define LOGS_SYM 519
#define LONGBLOB 520
#define LONGTEXT 521
#define LONG_NUM 522
#define LONG_SYM 523
#define LOOP_SYM 524
#define LOW_PRIORITY 525
#define LT 526
#define MASTER_CONNECT_RETRY_SYM 527
#define MASTER_HOST_SYM 528
#define MASTER_LOG_FILE_SYM 529
#define MASTER_LOG_POS_SYM 530
#define MASTER_PASSWORD_SYM 531
#define MASTER_PORT_SYM 532
#define MASTER_SERVER_ID_SYM 533
#define MASTER_SSL_CAPATH_SYM 534
#define MASTER_SSL_CA_SYM 535
#define MASTER_SSL_CERT_SYM 536
#define MASTER_SSL_CIPHER_SYM 537
#define MASTER_SSL_KEY_SYM 538
#define MASTER_SSL_SYM 539
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 540
#define MASTER_SYM 541
#define MASTER_USER_SYM 542
#define MASTER_HEARTBEAT_PERIOD_SYM 543
#define MATCH 544
#define MAX_CONNECTIONS_PER_HOUR 545
#define MAX_QUERIES_PER_HOUR 546
#define MAX_ROWS 547
#define MAX_SIZE_SYM 548
#define MAX_SYM 549
#define MAX_UPDATES_PER_HOUR 550
#define MAX_USER_CONNECTIONS_SYM 551
#define MAX_VALUE_SYM 552
#define MEDIUMBLOB 553
#define MEDIUMINT 554
#define MEDIUMTEXT 555
#define MEDIUM_SYM 556
#define MEMORY_SYM 557
#define MERGE_SYM 558
#define MESSAGE_TEXT_SYM 559
#define MICROSECOND_SYM 560
#define MIGRATE_SYM 561
#define MINUTE_MICROSECOND_SYM 562
#define MINUTE_SECOND_SYM 563
#define MINUTE_SYM 564
#define MIN_ROWS 565
#define MIN_SYM 566
#define MODE_SYM 567
#define MODIFIES_SYM 568
#define MODIFY_SYM 569
#define MOD_SYM 570
#define MONTH_SYM 571
#define MULTILINESTRING 572
#define MULTIPOINT 573
#define MULTIPOLYGON 574
#define MUTEX_SYM 575
#define MYSQL_ERRNO_SYM 576
#define NAMES_SYM 577
#define NAME_SYM 578
#define NATIONAL_SYM 579
#define NATURAL 580
#define NCHAR_STRING 581
#define NCHAR_SYM 582
#define NDBCLUSTER_SYM 583
#define NE 584
#define NEG 585
#define NEW_SYM 586
#define NEXT_SYM 587
#define NODEGROUP_SYM 588
#define NONE_SYM 589
#define NOT2_SYM 590
#define NOT_SYM 591
#define NOW_SYM 592
#define NO_SYM 593
#define NO_WAIT_SYM 594
#define NO_WRITE_TO_BINLOG 595
#define NULL_SYM 596
#define NUM 597
#define NUMERIC_SYM 598
#define NVARCHAR_SYM 599
#define OFFSET_SYM 600
#define OLD_PASSWORD 601
#define ON 602
#define ONE_SHOT_SYM 603
#define ONE_SYM 604
#define OPEN_SYM 605
#define OPTIMIZE 606
#define OPTIONS_SYM 607
#define OPTION 608
#define OPTIONALLY 609
#define OR2_SYM 610
#define ORDER_SYM 611
#define OR_OR_SYM 612
#define OR_SYM 613
#define OUTER 614
#define OUTFILE 615
#define OUT_SYM 616
#define OWNER_SYM 617
#define PACK_KEYS_SYM 618
#define PAGE_SYM 619
#define PARAM_MARKER 620
#define PARSER_SYM 621
#define PARTIAL 622
#define PARTITIONING_SYM 623
#define PARTITIONS_SYM 624
#define PARTITION_SYM 625
#define PASSWORD 626
#define PHASE_SYM 627
#define PLUGINS_SYM 628
#define PLUGIN_SYM 629
#define POINT_SYM 630
#define POLYGON 631
#define PORT_SYM 632
#define POSITION_SYM 633
#define PRECISION 634
#define PREPARE_SYM 635
#define PRESERVE_SYM 636
#define PREV_SYM 637
#define PRIMARY_SYM 638
#define PRIVILEGES 639
#define PROCEDURE_SYM 640
#define PROCESS 641
#define PROCESSLIST_SYM 642
#define PROFILE_SYM 643
#define PROFILES_SYM 644
#define PROXY_SYM 645
#define PURGE 646
#define QUARTER_SYM 647
#define QUERY_SYM 648
#define QUICK 649
#define RANGE_SYM 650
#define READS_SYM 651
#define READ_ONLY_SYM 652
#define READ_SYM 653
#define READ_WRITE_SYM 654
#define REAL 655
#define REBUILD_SYM 656
#define RECOVER_SYM 657
#define REDOFILE_SYM 658
#define REDO_BUFFER_SIZE_SYM 659
#define REDUNDANT_SYM 660
#define REFERENCES 661
#define REGEXP 662
#define RELAY 663
#define RELAYLOG_SYM 664
#define RELAY_LOG_FILE_SYM 665
#define RELAY_LOG_POS_SYM 666
#define RELAY_THREAD 667
#define RELEASE_SYM 668
#define RELOAD 669
#define REMOVE_SYM 670
#define RENAME 671
#define REORGANIZE_SYM 672
#define REPAIR 673
#define REPEATABLE_SYM 674
#define REPEAT_SYM 675
#define REPLACE 676
#define REPLICATION 677
#define REQUIRE_SYM 678
#define RESET_SYM 679
#define RESIGNAL_SYM 680
#define RESOURCES 681
#define RESTORE_SYM 682
#define RESTRICT 683
#define RESUME_SYM 684
#define RETURNS_SYM 685
#define RETURN_SYM 686
#define REVOKE 687
#define RIGHT 688
#define ROLLBACK_SYM 689
#define ROLLUP_SYM 690
#define ROUTINE_SYM 691
#define ROWS_SYM 692
#define ROW_FORMAT_SYM 693
#define ROW_SYM 694
#define RTREE_SYM 695
#define SAVEPOINT_SYM 696
#define SCHEDULE_SYM 697
#define SCHEMA_NAME_SYM 698
#define SECOND_MICROSECOND_SYM 699
#define SECOND_SYM 700
#define SECURITY_SYM 701
#define SELECT_SYM 702
#define SENSITIVE_SYM 703
#define SEPARATOR_SYM 704
#define SERIALIZABLE_SYM 705
#define SERIAL_SYM 706
#define SESSION_SYM 707
#define SERVER_SYM 708
#define SERVER_OPTIONS 709
#define SET 710
#define SET_VAR 711
#define SHARE_SYM 712
#define SHIFT_LEFT 713
#define SHIFT_RIGHT 714
#define SHOW 715
#define SHUTDOWN 716
#define SIGNAL_SYM 717
#define SIGNED_SYM 718
#define SIMPLE_SYM 719
#define SLAVE 720
#define SLOW 721
#define SMALLINT 722
#define SNAPSHOT_SYM 723
#define SOCKET_SYM 724
#define SONAME_SYM 725
#define SOUNDS_SYM 726
#define SOURCE_SYM 727
#define SPATIAL_SYM 728
#define SPECIFIC_SYM 729
#define SQLEXCEPTION_SYM 730
#define SQLSTATE_SYM 731
#define SQLWARNING_SYM 732
#define SQL_BIG_RESULT 733
#define SQL_BUFFER_RESULT 734
#define SQL_CACHE_SYM 735
#define SQL_CALC_FOUND_ROWS 736
#define SQL_NO_CACHE_SYM 737
#define SQL_SMALL_RESULT 738
#define SQL_SYM 739
#define SQL_THREAD 740
#define SSL_SYM 741
#define STARTING 742
#define STARTS_SYM 743
#define START_SYM 744
#define STATUS_SYM 745
#define STDDEV_SAMP_SYM 746
#define STD_SYM 747
#define STOP_SYM 748
#define STORAGE_SYM 749
#define STRAIGHT_JOIN 750
#define STRING_SYM 751
#define SUBCLASS_ORIGIN_SYM 752
#define SUBDATE_SYM 753
#define SUBJECT_SYM 754
#define SUBPARTITIONS_SYM 755
#define SUBPARTITION_SYM 756
#define SUBSTRING 757
#define SUM_SYM 758
#define SUPER_SYM 759
#define SUSPEND_SYM 760
#define SWAPS_SYM 761
#define SWITCHES_SYM 762
#define SYSDATE 763
#define TABLES 764
#define TABLESPACE 765
#define TABLE_REF_PRIORITY 766
#define TABLE_SYM 767
#define TABLE_CHECKSUM_SYM 768
#define TABLE_NAME_SYM 769
#define TEMPORARY 770
#define TEMPTABLE_SYM 771
#define TERMINATED 772
#define TEXT_STRING 773
#define TEXT_SYM 774
#define THAN_SYM 775
#define THEN_SYM 776
#define TIMESTAMP 777
#define TIMESTAMP_ADD 778
#define TIMESTAMP_DIFF 779
#define TIME_SYM 780
#define TINYBLOB 781
#define TINYINT 782
#define TINYTEXT 783
#define TO_SYM 784
#define TRAILING 785
#define TRANSACTION_SYM 786
#define TRIGGERS_SYM 787
#define TRIGGER_SYM 788
#define TRIM 789
#define TRUE_SYM 790
#define TRUNCATE_SYM 791
#define TYPES_SYM 792
#define TYPE_SYM 793
#define UDF_RETURNS_SYM 794
#define ULONGLONG_NUM 795
#define UNCOMMITTED_SYM 796
#define UNDEFINED_SYM 797
#define UNDERSCORE_CHARSET 798
#define UNDOFILE_SYM 799
#define UNDO_BUFFER_SIZE_SYM 800
#define UNDO_SYM 801
#define UNICODE_SYM 802
#define UNINSTALL_SYM 803
#define UNION_SYM 804
#define UNIQUE_SYM 805
#define UNKNOWN_SYM 806
#define UNLOCK_SYM 807
#define UNSIGNED 808
#define UNTIL_SYM 809
#define UPDATE_SYM 810
#define UPGRADE_SYM 811
#define USAGE 812
#define USER 813
#define USE_FRM 814
#define USE_SYM 815
#define USING 816
#define UTC_DATE_SYM 817
#define UTC_TIMESTAMP_SYM 818
#define UTC_TIME_SYM 819
#define VALUES 820
#define VALUE_SYM 821
#define VARBINARY 822
#define VARCHAR 823
#define VARIABLES 824
#define VARIANCE_SYM 825
#define VARYING 826
#define VAR_SAMP_SYM 827
#define VIEW_SYM 828
#define WAIT_SYM 829
#define WARNINGS 830
#define WEEK_SYM 831
#define WHEN_SYM 832
#define WHERE 833
#define WHILE_SYM 834
#define WITH 835
#define WITH_CUBE_SYM 836
#define WITH_ROLLUP_SYM 837
#define WORK_SYM 838
#define WRAPPER_SYM 839
#define WRITE_SYM 840
#define X509_SYM 841
#define XA_SYM 842
#define XML_SYM 843
#define XOR 844
#define YEAR_MONTH_SYM 845
#define YEAR_SYM 846
#define ZEROFILL 847




/* Copy the first part of user declarations.  */
#line 24 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"

/* thd is passed as an argument to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYPARSE_PARAM yythd
#define YYLEX_PARAM yythd
#define YYTHD ((THD *)yythd)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "sql_priv.h"
#include "unireg.h"                    // REQUIRED: for other includes
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* mem_alloc_error, partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Alter_table*_statement
#include "sql_truncate.h"                      // Truncate_statement
#include "sql_admin.h"                         // Analyze/Check..._table_stmt
#include "sql_partition_admin.h"               // Alter_table_*_partition_stmt
#include "sql_signal.h"
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    ulong val= *(F);                          \
    if (my_yyoverflow((B), (D), &val))        \
    {                                         \
      yyerror((char*) (A));                   \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_parse_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

/*
  Work around for broken code generated by bison 1.875.

  The code generated by bison 1.875a and later, bison 2.1 and bison 2.2 is ok.
  With bison 1.875 however, the generated code contains:
<pre>
  yyerrlab1:
  #if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
    __attribute__ ((__unused__))
  #endif
</pre>
  This usage of __attribute__ is illegal, so we remove it.
  See the following references for details:
  http://lists.gnu.org/archive/html/bug-bison/2004-02/msg00014.html
  http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14273
*/

#if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
#undef __attribute__
#define __attribute__(X)
#endif


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

/**
  @brief Push an error message into MySQL error stack with line
  and position information.

  This function provides semantic action implementers with a way
  to push the famous "You have a syntax error near..." error
  message into the error stack, which is normally produced only if
  a parse error is discovered internally by the Bison generated
  parser.
*/

void my_parse_error(const char *s)
{
  THD *thd= current_thd;
  Lex_input_stream *lip= & thd->m_parser_state->m_lip;

  const char *yytext= lip->get_tok_start();
  if (!yytext)
    yytext= "";

  /* Push an error into the error stack */
  ErrConvString err(yytext, thd->variables.character_set_client);
  my_printf_error(ER_PARSE_ERROR,  ER(ER_PARSE_ERROR), MYF(0), s,
                  err.ptr(), lip->yylineno);
}

/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use my_parse_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(const char *s)
{
  THD *thd= current_thd;

  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_parse_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param lex the parser lex context
*/

void case_stmt_action_case(LEX *lex)
{
  lex->sphead->new_cont_backpatch(NULL);

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  lex->spcont->push_label((char *)"", lex->sphead->instructions());
}

/**
  Helper action for a case expression statement (the expr in 'CASE expr').
  This helper is used for 'searched' cases only.
  @param lex the parser lex context
  @param expr the parsed expression
  @return 0 on success
*/

int case_stmt_action_expr(LEX *lex, Item* expr)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *parsing_ctx= lex->spcont;
  int case_expr_id= parsing_ctx->register_case_expr();
  sp_instr_set_case_expr *i;

  if (parsing_ctx->push_case_expr_id(case_expr_id))
    return 1;

  i= new sp_instr_set_case_expr(sp->instructions(),
                                parsing_ctx, case_expr_id, expr, lex);

  sp->add_cont_backpatch(i);
  return sp->add_instr(i);
}

/**
  Helper action for a case when condition.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param when the parsed expression for the WHEN clause
  @param simple true for simple cases, false for searched cases
*/

int case_stmt_action_when(LEX *lex, Item *when, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *ctx= lex->spcont;
  uint ip= sp->instructions();
  sp_instr_jump_if_not *i;
  Item_case_expr *var;
  Item *expr;

  if (simple)
  {
    var= new Item_case_expr(ctx->get_current_case_expr_id());

#ifndef DBUG_OFF
    if (var)
    {
      var->m_sp= sp;
    }
#endif

    expr= new Item_func_eq(var, when);
    i= new sp_instr_jump_if_not(ip, ctx, expr, lex);
  }
  else
    i= new sp_instr_jump_if_not(ip, ctx, when, lex);

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  return !test(i) ||
         sp->push_backpatch(i, ctx->push_label((char *)"", 0)) ||
         sp->add_cont_backpatch(i) ||
         sp->add_instr(i);
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

int case_stmt_action_then(LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *ctx= lex->spcont;
  uint ip= sp->instructions();
  sp_instr_jump *i = new sp_instr_jump(ip, ctx);
  if (!test(i) || sp->add_instr(i))
    return 1;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->backpatch(ctx->pop_label());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->push_backpatch(i, ctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  lex->sphead->backpatch(lex->spcont->pop_label());

  if (simple)
    lex->spcont->pop_case_expr_id();

  lex->sphead->do_cont_backpatch();
}


static bool
find_sys_var_null_base(THD *thd, struct sys_var_with_base *tmp)
{
  tmp->var= find_sys_var(thd, tmp->base_name.str, tmp->base_name.length);

  if (tmp->var == NULL)
    my_error(ER_UNKNOWN_SYSTEM_VARIABLE, MYF(0), tmp->base_name.str);
  else
    tmp->base_name= null_lex_str;

  return thd->is_error();
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param thd      the current thread
  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_system_variable(THD *thd, struct sys_var_with_base *tmp,
                    enum enum_var_type var_type, Item *val)
{
  set_var *var;
  LEX *lex= thd->lex;

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (lex->spcont && tmp->var == Sys_autocommit_ptr)
    lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

  if (! (var= new set_var(var_type, tmp->var, &tmp->base_name, val)))
    return TRUE;

  return lex->var_list.push_back(var);
}


/**
  Helper action for a SET statement.
  Used to push a SP local variable into the assignment list.

  @param thd      the current thread
  @param var_type the SP local variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_local_variable(THD *thd, sp_variable_t *spv, Item *val)
{
  Item *it;
  LEX *lex= thd->lex;
  sp_instr_set *sp_set;

  if (val)
    it= val;
  else if (spv->dflt)
    it= spv->dflt;
  else
  {
    it= new (thd->mem_root) Item_null();
    if (it == NULL)
      return TRUE;
  }

  sp_set= new sp_instr_set(lex->sphead->instructions(), lex->spcont,
                           spv->offset, it, spv->type, lex, TRUE);

  return (sp_set == NULL || lex->sphead->add_instr(sp_set));
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param thd      the current thread
  @param name     the field name
  @param val      the value being assigned to the row

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_trigger_new_row(THD *thd, LEX_STRING *name, Item *val)
{
  LEX *lex= thd->lex;
  Item_trigger_field *trg_fld;
  sp_instr_set_trigger_field *sp_fld;

  /* QQ: Shouldn't this be field's default value ? */
  if (! val)
    val= new Item_null();

  DBUG_ASSERT(lex->trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (lex->trg_chistics.event == TRG_EVENT_INSERT ||
               lex->trg_chistics.event == TRG_EVENT_UPDATE));

  trg_fld= new (thd->mem_root)
            Item_trigger_field(lex->current_context(),
                               Item_trigger_field::NEW_ROW,
                               name->str, UPDATE_ACL, FALSE);

  if (trg_fld == NULL)
    return TRUE;

  sp_fld= new sp_instr_set_trigger_field(lex->sphead->instructions(),
                                         lex->spcont, trg_fld, val, lex);

  if (sp_fld == NULL)
    return TRUE;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  lex->trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return lex->sphead->add_instr(sp_fld);
}


/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select statement
   uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
   is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool add_select_to_union_list(LEX *lex, bool is_union_distinct, 
                              bool is_top_level)
{
  /* 
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && lex->result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
    return TRUE;
  }
  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  /* This counter shouldn't be incremented for UNION parts */
  lex->nest_level--;
  if (mysql_new_select(lex, 0))
    return TRUE;
  mysql_init_select(lex);
  lex->current_select->linkage=UNION_TYPE;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
    lex->current_select->master_unit()->union_distinct=
      lex->current_select;
  return FALSE;
}

/**
   @brief Initializes a SELECT_LEX for a query within parentheses (aka
   braces).

   @return false if successful, true if an error was reported. In the latter
   case parsing should stop.
 */
bool setup_select_in_parentheses(LEX *lex) 
{
  SELECT_LEX * sel= lex->current_select;
  if (sel->set_braces(1))
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      !sel->master_unit()->first_select()->braces &&
      sel->master_unit()->first_select()->linkage ==
      UNION_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      sel->olap != UNSPECIFIED_OLAP_TYPE &&
      sel->master_unit()->fake_select_lex)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "CUBE/ROLLUP", "ORDER BY");
    return TRUE;
  }
  /* select in braces, can't contain global parameters */
  if (sel->master_unit()->fake_select_lex)
    sel->master_unit()->global_parameters=
      sel->master_unit()->fake_select_lex;
  return FALSE;
}

static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_NO_WRITE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, Key::Keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated, 
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 730 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
{
  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  Key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  handlerton *db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  struct sp_cond_type *spcondtype;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  LEX *lex;
  sp_head *sphead;
  struct p_elem_val *p_elem_value;
  enum index_hint_type index_hint;
  enum enum_filetype filetype;
  enum Foreign_key::fk_option m_fk_option;
  enum enum_yes_no_unknown m_yes_no_unk;
  Diag_condition_item_name diag_condition_item_name;
}
/* Line 193 of yacc.c.  */
#line 2043 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/dist/sql/sql_yacc.cc"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



/* Copy the second part of user declarations.  */
#line 778 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);


/* Line 216 of yacc.c.  */
#line 2059 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/dist/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
  };

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  573
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   49901

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  612
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  883
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2488
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4231

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   847

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   605,     2,     2,     2,   599,   594,     2,
     602,   603,   597,   596,   604,   595,   610,   598,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   611,   608,
       2,     2,     2,     2,   609,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   600,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   606,   593,   607,   601,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     6,    11,    14,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    83,    85,    87,    89,    91,    93,    95,    97,    99,
     101,   103,   105,   107,   109,   111,   113,   115,   117,   119,
     121,   123,   127,   129,   131,   136,   138,   141,   142,   147,
     148,   151,   155,   157,   160,   161,   165,   166,   172,   174,
     178,   182,   186,   190,   194,   198,   202,   206,   210,   214,
     218,   222,   226,   230,   236,   238,   239,   241,   245,   247,
     251,   255,   259,   263,   264,   272,   273,   286,   287,   300,
     301,   314,   315,   322,   323,   327,   332,   337,   341,   344,
     355,   357,   361,   364,   367,   370,   373,   376,   379,   382,
     383,   397,   398,   405,   408,   409,   411,   415,   417,   418,
     421,   422,   425,   426,   428,   432,   437,   438,   441,   442,
     445,   447,   449,   451,   453,   455,   457,   459,   461,   463,
     465,   467,   469,   471,   472,   476,   478,   479,   482,   483,
     486,   489,   492,   495,   498,   502,   506,   508,   510,   512,
     515,   519,   523,   524,   529,   530,   534,   535,   537,   541,
     543,   544,   546,   550,   552,   553,   557,   558,   560,   564,
     566,   571,   572,   574,   576,   578,   579,   583,   586,   590,
     591,   595,   596,   602,   608,   609,   617,   623,   624,   627,
     629,   631,   633,   637,   639,   641,   643,   647,   648,   650,
     652,   654,   656,   659,   661,   665,   667,   669,   670,   672,
     673,   676,   680,   686,   688,   690,   692,   694,   696,   698,
     700,   702,   704,   706,   708,   710,   712,   714,   716,   720,
     722,   726,   727,   730,   732,   734,   736,   738,   740,   742,
     744,   746,   748,   750,   752,   754,   756,   757,   763,   764,
     767,   768,   772,   773,   776,   779,   782,   785,   786,   793,
     796,   797,   800,   802,   804,   808,   809,   810,   811,   819,
     820,   823,   826,   828,   830,   831,   832,   841,   842,   849,
     851,   854,   856,   859,   860,   861,   868,   869,   870,   877,
     878,   881,   882,   888,   889,   891,   892,   898,   899,   902,
     903,   909,   914,   915,   916,   925,   926,   934,   936,   938,
     940,   942,   944,   947,   952,   958,   959,   964,   969,   974,
     978,   982,   985,   988,   989,   992,   994,   997,  1001,  1003,
    1005,  1007,  1009,  1011,  1014,  1018,  1020,  1022,  1024,  1026,
    1028,  1030,  1032,  1034,  1036,  1038,  1041,  1045,  1047,  1049,
    1051,  1053,  1055,  1057,  1059,  1062,  1066,  1068,  1070,  1072,
    1074,  1076,  1078,  1080,  1082,  1084,  1087,  1091,  1093,  1095,
    1097,  1100,  1103,  1106,  1108,  1110,  1112,  1114,  1117,  1121,
    1125,  1129,  1133,  1137,  1141,  1145,  1149,  1154,  1155,  1157,
    1159,  1161,  1163,  1165,  1168,  1172,  1175,  1180,  1186,  1187,
    1193,  1194,  1195,  1201,  1202,  1210,  1212,  1213,  1215,  1216,
    1221,  1222,  1223,  1227,  1233,  1239,  1240,  1245,  1248,  1251,
    1254,  1257,  1258,  1260,  1261,  1263,  1265,  1269,  1271,  1276,
    1282,  1288,  1289,  1292,  1293,  1294,  1302,  1303,  1313,  1315,
    1319,  1321,  1323,  1324,  1327,  1328,  1332,  1334,  1338,  1339,
    1346,  1348,  1349,  1350,  1356,  1357,  1362,  1364,  1366,  1368,
    1372,  1374,  1378,  1379,  1380,  1386,  1388,  1392,  1394,  1396,
    1397,  1401,  1403,  1407,  1408,  1413,  1415,  1416,  1418,  1421,
    1423,  1427,  1432,  1436,  1440,  1444,  1449,  1454,  1458,  1459,
    1460,  1467,  1468,  1470,  1471,  1473,  1475,  1478,  1480,  1482,
    1483,  1485,  1487,  1490,  1492,  1493,  1497,  1498,  1500,  1502,
    1505,  1507,  1510,  1514,  1518,  1522,  1526,  1530,  1534,  1538,
    1542,  1546,  1550,  1554,  1558,  1562,  1566,  1567,  1574,  1576,
    1578,  1582,  1587,  1592,  1595,  1598,  1601,  1605,  1609,  1614,
    1619,  1621,  1623,  1625,  1627,  1629,  1631,  1633,  1635,  1637,
    1639,  1641,  1643,  1646,  1648,  1650,  1652,  1654,  1656,  1658,
    1662,  1664,  1666,  1669,  1672,  1680,  1689,  1698,  1707,  1716,
    1719,  1720,  1722,  1727,  1728,  1730,  1733,  1734,  1739,  1743,
    1747,  1751,  1753,  1756,  1758,  1760,  1764,  1767,  1771,  1774,
    1777,  1779,  1783,  1787,  1790,  1794,  1796,  1798,  1800,  1802,
    1804,  1807,  1809,  1811,  1813,  1816,  1820,  1823,  1827,  1830,
    1833,  1837,  1841,  1845,  1846,  1853,  1854,  1861,  1864,  1866,
    1868,  1870,  1872,  1874,  1876,  1878,  1880,  1882,  1884,  1886,
    1889,  1892,  1894,  1897,  1899,  1902,  1906,  1909,  1911,  1913,
    1915,  1917,  1919,  1921,  1923,  1926,  1927,  1929,  1931,  1937,
    1938,  1940,  1943,  1945,  1947,  1949,  1951,  1955,  1959,  1963,
    1967,  1968,  1970,  1971,  1973,  1974,  1976,  1979,  1981,  1983,
    1986,  1989,  1994,  1996,  2000,  2003,  2005,  2008,  2011,  2014,
    2017,  2020,  2022,  2025,  2027,  2029,  2031,  2033,  2035,  2036,
    2039,  2041,  2043,  2045,  2047,  2049,  2050,  2053,  2055,  2057,
    2058,  2060,  2062,  2065,  2068,  2070,  2073,  2076,  2077,  2079,
    2081,  2083,  2087,  2089,  2093,  2094,  2096,  2097,  2099,  2105,
    2106,  2110,  2114,  2116,  2117,  2120,  2123,  2126,  2127,  2131,
    2135,  2142,  2149,  2151,  2153,  2156,  2159,  2162,  2164,  2167,
    2170,  2172,  2174,  2175,  2177,  2179,  2181,  2183,  2184,  2186,
    2188,  2190,  2191,  2193,  2196,  2197,  2199,  2200,  2202,  2203,
    2205,  2207,  2210,  2212,  2215,  2217,  2220,  2223,  2226,  2230,
    2233,  2235,  2237,  2239,  2241,  2245,  2247,  2249,  2251,  2256,
    2259,  2261,  2266,  2267,  2269,  2270,  2273,  2275,  2279,  2280,
    2287,  2288,  2294,  2302,  2303,  2309,  2310,  2316,  2317,  2323,
    2324,  2329,  2330,  2341,  2345,  2350,  2354,  2358,  2366,  2367,
    2371,  2373,  2378,  2379,  2383,  2384,  2387,  2388,  2390,  2391,
    2394,  2397,  2400,  2403,  2405,  2407,  2409,  2413,  2418,  2419,
    2426,  2431,  2432,  2438,  2439,  2446,  2451,  2455,  2457,  2460,
    2462,  2464,  2465,  2471,  2472,  2476,  2479,  2480,  2486,  2487,
    2488,  2495,  2497,  2501,  2503,  2505,  2509,  2512,  2516,  2519,
    2524,  2525,  2532,  2533,  2534,  2543,  2548,  2553,  2557,  2561,
    2564,  2567,  2574,  2580,  2584,  2590,  2592,  2594,  2596,  2597,
    2599,  2600,  2602,  2603,  2605,  2607,  2608,  2611,  2613,  2614,
    2616,  2618,  2620,  2621,  2627,  2631,  2632,  2638,  2642,  2646,
    2647,  2651,  2652,  2655,  2657,  2661,  2662,  2664,  2666,  2667,
    2670,  2672,  2676,  2677,  2683,  2684,  2686,  2688,  2689,  2696,
    2697,  2699,  2701,  2704,  2706,  2708,  2710,  2711,  2717,  2720,
    2721,  2727,  2728,  2730,  2732,  2735,  2737,  2739,  2741,  2743,
    2745,  2748,  2749,  2755,  2756,  2758,  2760,  2761,  2766,  2771,
    2775,  2781,  2783,  2787,  2791,  2792,  2799,  2801,  2803,  2805,
    2809,  2812,  2816,  2818,  2820,  2821,  2828,  2830,  2832,  2834,
    2838,  2842,  2847,  2848,  2855,  2856,  2859,  2860,  2865,  2866,
    2869,  2871,  2874,  2879,  2882,  2886,  2889,  2893,  2894,  2898,
    2899,  2900,  2907,  2910,  2912,  2914,  2917,  2920,  2929,  2934,
    2935,  2937,  2940,  2942,  2944,  2946,  2948,  2949,  2952,  2957,
    2961,  2963,  2965,  2969,  2974,  2975,  2976,  2977,  2980,  2983,
    2985,  2987,  2988,  2991,  2995,  2999,  3003,  3006,  3010,  3015,
    3019,  3024,  3028,  3033,  3035,  3039,  3044,  3048,  3052,  3059,
    3061,  3067,  3074,  3080,  3088,  3095,  3104,  3110,  3117,  3122,
    3127,  3133,  3137,  3142,  3144,  3148,  3152,  3156,  3160,  3164,
    3168,  3174,  3180,  3184,  3188,  3192,  3196,  3200,  3204,  3206,
    3208,  3210,  3212,  3214,  3216,  3218,  3220,  3222,  3224,  3226,
    3228,  3230,  3232,  3234,  3236,  3238,  3240,  3242,  3244,  3246,
    3248,  3252,  3254,  3256,  3258,  3260,  3264,  3267,  3270,  3273,
    3276,  3280,  3284,  3290,  3297,  3302,  3307,  3315,  3318,  3325,
    3331,  3338,  3345,  3350,  3355,  3361,  3366,  3373,  3376,  3381,
    3386,  3391,  3402,  3409,  3418,  3425,  3430,  3435,  3442,  3447,
    3452,  3457,  3464,  3469,  3477,  3485,  3493,  3500,  3507,  3514,
    3521,  3525,  3530,  3537,  3546,  3549,  3552,  3557,  3566,  3575,
    3582,  3589,  3592,  3597,  3604,  3611,  3620,  3629,  3636,  3645,
    3652,  3655,  3660,  3669,  3678,  3681,  3684,  3687,  3692,  3697,
    3702,  3707,  3711,  3720,  3725,  3732,  3737,  3742,  3747,  3754,
    3763,  3770,  3775,  3782,  3784,  3791,  3796,  3801,  3806,  3811,
    3816,  3823,  3828,  3829,  3835,  3842,  3845,  3849,  3850,  3855,
    3856,  3860,  3861,  3863,  3865,  3869,  3874,  3879,  3885,  3890,
    3895,  3900,  3906,  3911,  3912,  3913,  3921,  3926,  3932,  3937,
    3943,  3948,  3953,  3958,  3963,  3968,  3974,  3975,  3984,  3985,
    3989,  3993,  3995,  4000,  4001,  4003,  4004,  4007,  4008,  4010,
    4011,  4015,  4018,  4022,  4025,  4027,  4030,  4032,  4035,  4037,
    4039,  4041,  4044,  4045,  4047,  4049,  4053,  4055,  4059,  4061,
    4065,  4066,  4068,  4069,  4072,  4077,  4083,  4085,  4087,  4089,
    4091,  4096,  4098,  4102,  4106,  4110,  4111,  4118,  4119,  4126,
    4127,  4136,  4141,  4142,  4151,  4152,  4163,  4170,  4171,  4180,
    4181,  4192,  4199,  4201,  4204,  4207,  4208,  4213,  4217,  4223,
    4226,  4227,  4228,  4236,  4238,  4239,  4240,  4247,  4248,  4252,
    4253,  4254,  4260,  4261,  4263,  4264,  4266,  4267,  4270,  4274,
    4278,  4280,  4282,  4283,  4291,  4292,  4300,  4302,  4305,  4306,
    4307,  4310,  4311,  4314,  4315,  4317,  4319,  4321,  4323,  4327,
    4329,  4333,  4335,  4337,  4339,  4341,  4343,  4345,  4347,  4349,
    4351,  4353,  4355,  4357,  4359,  4361,  4363,  4365,  4367,  4369,
    4371,  4373,  4375,  4377,  4379,  4381,  4383,  4384,  4386,  4388,
    4389,  4392,  4393,  4395,  4396,  4397,  4401,  4402,  4403,  4407,
    4410,  4411,  4412,  4417,  4422,  4425,  4426,  4428,  4430,  4434,
    4438,  4440,  4443,  4444,  4446,  4447,  4452,  4457,  4460,  4461,
    4463,  4465,  4466,  4468,  4469,  4471,  4474,  4476,  4480,  4484,
    4486,  4488,  4490,  4492,  4494,  4495,  4498,  4500,  4502,  4504,
    4506,  4508,  4510,  4512,  4514,  4516,  4518,  4520,  4522,  4524,
    4526,  4528,  4530,  4532,  4534,  4536,  4538,  4540,  4542,  4544,
    4545,  4546,  4553,  4554,  4556,  4560,  4562,  4566,  4567,  4570,
    4574,  4576,  4579,  4581,  4582,  4586,  4587,  4588,  4596,  4599,
    4601,  4602,  4606,  4607,  4615,  4616,  4623,  4628,  4635,  4640,
    4645,  4650,  4651,  4658,  4663,  4668,  4674,  4681,  4686,  4688,
    4692,  4694,  4696,  4700,  4702,  4703,  4706,  4707,  4709,  4710,
    4711,  4720,  4721,  4722,  4729,  4730,  4732,  4734,  4736,  4738,
    4740,  4743,  4745,  4747,  4749,  4753,  4758,  4759,  4763,  4767,
    4769,  4772,  4775,  4776,  4780,  4781,  4787,  4791,  4793,  4797,
    4799,  4803,  4805,  4807,  4808,  4810,  4811,  4816,  4817,  4819,
    4823,  4825,  4827,  4829,  4830,  4831,  4838,  4839,  4840,  4852,
    4856,  4858,  4862,  4866,  4868,  4872,  4873,  4875,  4876,  4881,
    4882,  4889,  4890,  4896,  4897,  4904,  4906,  4910,  4913,  4918,
    4919,  4922,  4923,  4926,  4928,  4930,  4932,  4933,  4938,  4939,
    4941,  4942,  4944,  4946,  4950,  4952,  4954,  4957,  4960,  4963,
    4965,  4967,  4969,  4971,  4972,  4976,  4977,  4981,  4984,  4989,
    4994,  4998,  5003,  5008,  5010,  5014,  5018,  5025,  5028,  5031,
    5032,  5039,  5040,  5047,  5053,  5056,  5058,  5060,  5062,  5068,
    5074,  5077,  5080,  5082,  5087,  5091,  5094,  5098,  5101,  5104,
    5106,  5110,  5115,  5119,  5123,  5126,  5129,  5133,  5137,  5141,
    5145,  5149,  5153,  5157,  5161,  5163,  5165,  5167,  5169,  5171,
    5172,  5174,  5175,  5178,  5179,  5181,  5183,  5185,  5186,  5189,
    5190,  5193,  5194,  5197,  5200,  5201,  5206,  5207,  5212,  5214,
    5216,  5217,  5219,  5221,  5222,  5224,  5226,  5227,  5232,  5233,
    5234,  5240,  5242,  5243,  5247,  5251,  5253,  5256,  5259,  5262,
    5265,  5268,  5271,  5274,  5276,  5278,  5280,  5282,  5284,  5286,
    5288,  5290,  5291,  5293,  5294,  5298,  5302,  5304,  5306,  5308,
    5311,  5312,  5316,  5320,  5323,  5326,  5330,  5331,  5333,  5335,
    5338,  5339,  5340,  5341,  5342,  5364,  5366,  5368,  5369,  5371,
    5372,  5374,  5376,  5377,  5379,  5381,  5382,  5385,  5388,  5390,
    5394,  5399,  5403,  5407,  5408,  5411,  5414,  5416,  5420,  5424,
    5425,  5430,  5431,  5435,  5437,  5439,  5440,  5444,  5447,  5451,
    5453,  5455,  5458,  5459,  5462,  5466,  5468,  5474,  5476,  5478,
    5481,  5484,  5486,  5488,  5490,  5492,  5494,  5497,  5500,  5502,
    5504,  5506,  5508,  5510,  5512,  5514,  5517,  5520,  5523,  5526,
    5529,  5531,  5533,  5535,  5537,  5539,  5541,  5543,  5547,  5553,
    5555,  5557,  5559,  5561,  5563,  5567,  5572,  5578,  5580,  5586,
    5590,  5593,  5595,  5599,  5602,  5605,  5610,  5612,  5614,  5616,
    5618,  5620,  5622,  5624,  5626,  5628,  5630,  5632,  5634,  5636,
    5638,  5642,  5645,  5647,  5649,  5651,  5653,  5655,  5657,  5659,
    5661,  5663,  5665,  5667,  5669,  5671,  5673,  5675,  5677,  5679,
    5681,  5683,  5685,  5687,  5689,  5691,  5693,  5695,  5697,  5699,
    5701,  5703,  5705,  5707,  5709,  5711,  5713,  5715,  5717,  5719,
    5721,  5723,  5725,  5727,  5729,  5731,  5733,  5735,  5737,  5739,
    5741,  5743,  5745,  5747,  5749,  5751,  5753,  5755,  5757,  5759,
    5761,  5763,  5765,  5767,  5769,  5771,  5773,  5775,  5777,  5779,
    5781,  5783,  5785,  5787,  5789,  5791,  5793,  5795,  5797,  5799,
    5801,  5803,  5805,  5807,  5809,  5811,  5813,  5815,  5817,  5819,
    5821,  5823,  5825,  5827,  5829,  5831,  5833,  5835,  5837,  5839,
    5841,  5843,  5845,  5847,  5849,  5851,  5853,  5855,  5857,  5859,
    5861,  5863,  5865,  5867,  5869,  5871,  5873,  5875,  5877,  5879,
    5881,  5883,  5885,  5887,  5889,  5891,  5893,  5895,  5897,  5899,
    5901,  5903,  5905,  5907,  5909,  5911,  5913,  5915,  5917,  5919,
    5921,  5923,  5925,  5927,  5929,  5931,  5933,  5935,  5937,  5939,
    5941,  5943,  5945,  5947,  5949,  5951,  5953,  5955,  5957,  5959,
    5961,  5963,  5965,  5967,  5969,  5971,  5973,  5975,  5977,  5979,
    5981,  5983,  5985,  5987,  5989,  5991,  5993,  5995,  5997,  5999,
    6001,  6003,  6005,  6007,  6009,  6011,  6013,  6015,  6017,  6019,
    6021,  6023,  6025,  6027,  6029,  6031,  6033,  6035,  6037,  6039,
    6041,  6043,  6045,  6047,  6049,  6051,  6053,  6055,  6057,  6059,
    6061,  6063,  6065,  6067,  6069,  6071,  6073,  6075,  6077,  6079,
    6081,  6083,  6085,  6087,  6089,  6091,  6093,  6095,  6097,  6099,
    6101,  6103,  6105,  6107,  6109,  6111,  6113,  6115,  6117,  6119,
    6121,  6123,  6125,  6127,  6129,  6131,  6133,  6135,  6137,  6139,
    6141,  6143,  6145,  6147,  6149,  6151,  6153,  6155,  6157,  6159,
    6161,  6163,  6165,  6167,  6169,  6171,  6173,  6175,  6177,  6179,
    6181,  6183,  6185,  6187,  6189,  6191,  6193,  6195,  6197,  6199,
    6201,  6203,  6205,  6207,  6209,  6211,  6213,  6215,  6217,  6219,
    6221,  6223,  6225,  6227,  6229,  6231,  6233,  6235,  6237,  6239,
    6241,  6243,  6245,  6247,  6249,  6251,  6253,  6255,  6257,  6259,
    6261,  6263,  6265,  6267,  6269,  6271,  6273,  6275,  6277,  6279,
    6281,  6283,  6285,  6287,  6289,  6291,  6293,  6295,  6297,  6299,
    6301,  6302,  6307,  6308,  6310,  6312,  6316,  6317,  6320,  6322,
    6324,  6326,  6328,  6329,  6331,  6332,  6334,  6336,  6338,  6339,
    6342,  6345,  6348,  6350,  6353,  6358,  6364,  6369,  6376,  6379,
    6383,  6387,  6391,  6397,  6399,  6403,  6407,  6410,  6413,  6416,
    6418,  6420,  6425,  6430,  6432,  6434,  6436,  6438,  6440,  6441,
    6446,  6448,  6450,  6452,  6456,  6460,  6462,  6464,  6467,  6470,
    6471,  6475,  6480,  6484,  6485,  6493,  6495,  6498,  6500,  6502,
    6504,  6506,  6508,  6510,  6511,  6517,  6519,  6521,  6523,  6525,
    6527,  6531,  6538,  6545,  6552,  6560,  6566,  6570,  6579,  6588,
    6597,  6604,  6605,  6607,  6609,  6612,  6613,  6615,  6617,  6621,
    6622,  6626,  6627,  6631,  6632,  6636,  6637,  6641,  6643,  6645,
    6647,  6649,  6651,  6653,  6655,  6657,  6659,  6661,  6663,  6666,
    6669,  6671,  6675,  6678,  6681,  6684,  6687,  6690,  6693,  6696,
    6699,  6701,  6703,  6706,  6707,  6709,  6713,  6715,  6718,  6721,
    6724,  6726,  6730,  6734,  6736,  6738,  6742,  6744,  6748,  6753,
    6759,  6764,  6771,  6773,  6774,  6778,  6782,  6784,  6786,  6787,
    6790,  6793,  6796,  6799,  6800,  6803,  6804,  6808,  6811,  6813,
    6816,  6819,  6822,  6825,  6828,  6829,  6833,  6834,  6836,  6837,
    6841,  6844,  6845,  6847,  6850,  6851,  6853,  6858,  6863,  6869,
    6872,  6876,  6877,  6879,  6880,  6885,  6886,  6888,  6890,  6891,
    6893,  6894,  6897,  6900,  6902,  6903,  6905,  6907,  6910,  6914,
    6917,  6918,  6925,  6929,  6930,  6931,  6932,  6934,  6937,  6939,
    6941,  6943,  6945,  6947,  6949,  6951,  6953,  6955,  6958,  6961,
    6965,  6967,  6969,  6971,  6973,  6975,  6977,  6979,  6981,  6983,
    6985,  6987,  6989,  6991,  6992,  6996,  6998,  7001,  7003,  7006,
    7010,  7014,  7018,  7019,  7023,  7027,  7028,  7036,  7037,  7041,
    7043,  7047,  7048,  7052,  7055,  7060,  7061,  7065,  7070,  7075,
    7076,  7077,  7078,  7095,  7104,  7112,  7113,  7114,  7115,  7116,
    7117,  7133,  7134,  7135,  7136,  7137,  7150,  7155,  7160,  7164,
    7169,  7173,  7176,  7178,  7182,  7188,  7190,  7192,  7193,  7195,
    7197,  7198,  7201,  7202,  7203,  7207,  7208,  7211,  7217
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     613,     0,    -1,   148,    -1,    -1,   616,   614,   608,   615,
      -1,   616,   148,    -1,    -1,   148,    -1,   617,    -1,  1423,
      -1,   959,    -1,  1016,    -1,  1018,    -1,   666,    -1,   629,
      -1,  1019,    -1,  1008,    -1,  1429,    -1,   636,    -1,   618,
      -1,  1255,    -1,  1287,    -1,  1207,    -1,  1209,    -1,   622,
      -1,  1293,    -1,  1397,    -1,  1388,    -1,   627,    -1,  1219,
      -1,  1493,    -1,  1310,    -1,  1313,    -1,  1380,    -1,  1024,
      -1,  1032,    -1,   809,    -1,  1039,    -1,   620,    -1,  1306,
      -1,  1432,    -1,  1027,    -1,  1011,    -1,  1222,    -1,  1302,
      -1,   701,    -1,  1395,    -1,  1430,    -1,  1431,    -1,  1051,
      -1,  1363,    -1,   694,    -1,  1273,    -1,   997,    -1,  1000,
      -1,  1266,    -1,  1494,    -1,  1386,    -1,  1247,    -1,  1312,
      -1,  1485,    -1,   619,   380,  1357,    -1,   115,    -1,   136,
      -1,   380,  1357,   182,   621,    -1,  1354,    -1,   609,  1359,
      -1,    -1,   161,  1357,   623,   624,    -1,    -1,   561,   625,
      -1,   625,   604,   626,    -1,   626,    -1,   609,  1359,    -1,
      -1,   200,   628,  1359,    -1,    -1,    56,   286,   529,   630,
     631,    -1,   632,    -1,   631,   604,   632,    -1,   273,   152,
    1354,    -1,   287,   152,  1354,    -1,   276,   152,  1354,    -1,
     277,   152,  1187,    -1,   272,   152,  1187,    -1,   284,   152,
    1187,    -1,   280,   152,  1354,    -1,   279,   152,  1354,    -1,
     281,   152,  1354,    -1,   282,   152,  1354,    -1,   283,   152,
    1354,    -1,   285,   152,  1187,    -1,   288,   152,  1342,    -1,
     214,   152,   602,   633,   603,    -1,   635,    -1,    -1,   634,
      -1,   633,   604,   634,    -1,  1187,    -1,   274,   152,  1354,
      -1,   275,   152,  1189,    -1,   410,   152,  1354,    -1,   411,
     152,  1187,    -1,    -1,    94,   860,   512,   863,  1350,   637,
     798,    -1,    -1,    94,   937,   217,  1357,   941,   347,  1350,
     638,   602,   954,   603,   942,    -1,    -1,    94,   938,   217,
    1357,   940,   347,  1350,   639,   602,   954,   603,   943,    -1,
      -1,    94,   939,   217,  1357,   940,   347,  1350,   640,   602,
     954,   603,   944,    -1,    -1,    94,   102,   863,  1357,   641,
     857,    -1,    -1,    94,   642,  1451,    -1,    94,   558,   659,
    1413,    -1,    94,   263,   194,   761,    -1,    94,   510,   758,
      -1,    94,   643,    -1,   453,  1359,   179,   105,   584,  1359,
     352,   602,   644,   603,    -1,   645,    -1,   644,   604,   645,
      -1,   558,  1354,    -1,   203,  1354,    -1,   102,  1354,    -1,
     362,  1354,    -1,   371,  1354,    -1,   469,  1354,    -1,   377,
    1187,    -1,    -1,  1068,   159,   863,   660,   647,   347,   442,
     648,   653,   650,   655,   135,   656,    -1,    -1,   160,  1072,
    1159,   649,   651,   652,    -1,    22,  1072,    -1,    -1,   144,
      -1,   129,   347,   465,    -1,   129,    -1,    -1,   488,  1072,
      -1,    -1,   147,  1072,    -1,    -1,   654,    -1,   347,    77,
     381,    -1,   347,    77,   336,   381,    -1,    -1,    73,  1354,
      -1,    -1,   657,   658,    -1,   707,    -1,   709,    -1,   705,
      -1,   726,    -1,   744,    -1,   746,    -1,   741,    -1,   711,
      -1,   713,    -1,   714,    -1,   715,    -1,   716,    -1,   718,
      -1,    -1,  1357,   610,  1357,    -1,  1357,    -1,    -1,   661,
     663,    -1,    -1,   662,   664,    -1,    73,  1354,    -1,   242,
     484,    -1,   338,   484,    -1,    87,   484,    -1,   396,   484,
     105,    -1,   313,   484,   105,    -1,   665,    -1,   663,    -1,
     127,    -1,  1078,   127,    -1,   484,   446,   120,    -1,   484,
     446,   229,    -1,    -1,    49,   660,   667,   668,    -1,    -1,
     602,   669,   603,    -1,    -1,   670,    -1,   670,   604,  1072,
      -1,  1072,    -1,    -1,   672,    -1,   672,   604,   674,    -1,
     674,    -1,    -1,  1357,   673,   909,    -1,    -1,   676,    -1,
     676,   604,   677,    -1,   677,    -1,   678,   673,  1357,   909,
      -1,    -1,   230,    -1,   361,    -1,   221,    -1,    -1,   679,
     704,   608,    -1,   704,   608,    -1,   680,   704,   608,    -1,
      -1,   681,   682,   608,    -1,    -1,   118,   702,   683,   909,
     703,    -1,   118,  1357,    80,   180,   690,    -1,    -1,   118,
     687,   197,   180,   684,   688,   704,    -1,   118,  1357,    99,
     180,   685,    -1,    -1,   686,  1051,    -1,   163,    -1,    89,
      -1,   689,    -1,   688,   604,   689,    -1,   693,    -1,  1187,
      -1,   691,    -1,   476,   692,  1355,    -1,    -1,   566,    -1,
     690,    -1,  1357,    -1,   477,    -1,  1078,   181,    -1,   475,
      -1,   462,   695,   697,    -1,  1357,    -1,   691,    -1,    -1,
     695,    -1,    -1,   455,   698,    -1,   700,   152,   699,    -1,
     698,   604,   700,   152,   699,    -1,  1341,    -1,  1099,    -1,
    1346,    -1,    63,    -1,   497,    -1,    84,    -1,    86,    -1,
      85,    -1,    54,    -1,   443,    -1,   514,    -1,    72,    -1,
     100,    -1,   304,    -1,   321,    -1,   425,   696,   697,    -1,
    1357,    -1,   702,   604,  1357,    -1,    -1,   119,  1072,    -1,
     707,    -1,   709,    -1,   705,    -1,   726,    -1,   744,    -1,
     746,    -1,   741,    -1,   711,    -1,   713,    -1,   714,    -1,
     715,    -1,   716,    -1,   718,    -1,    -1,   212,   706,   721,
     146,   212,    -1,    -1,   708,   617,    -1,    -1,   431,   710,
    1072,    -1,    -1,   712,   750,    -1,   247,  1358,    -1,   236,
    1358,    -1,   350,  1357,    -1,    -1,   171,   719,  1357,   227,
     717,   720,    -1,    65,  1357,    -1,    -1,   332,   182,    -1,
     182,    -1,  1357,    -1,   720,   604,  1357,    -1,    -1,    -1,
      -1,   722,  1072,   521,   723,   680,   724,   725,    -1,    -1,
     143,   721,    -1,   142,   680,    -1,   727,    -1,   730,    -1,
      -1,    -1,    52,   728,  1072,   729,   732,   740,   146,    52,
      -1,    -1,    52,   731,   733,   740,   146,    52,    -1,   734,
      -1,   732,   734,    -1,   737,    -1,   733,   737,    -1,    -1,
      -1,   577,   735,  1072,   736,   521,   680,    -1,    -1,    -1,
     577,   738,  1072,   739,   521,   680,    -1,    -1,   142,   680,
      -1,    -1,  1358,   611,   742,   750,   743,    -1,    -1,  1358,
      -1,    -1,  1358,   611,   745,   748,   743,    -1,    -1,   747,
     748,    -1,    -1,    30,   749,   681,   679,   146,    -1,   269,
     680,   146,   269,    -1,    -1,    -1,   579,   751,  1072,   135,
     752,   680,   146,   579,    -1,    -1,   420,   680,   554,   753,
    1072,   146,   420,    -1,    29,    -1,     8,    -1,   223,    -1,
     555,    -1,   123,    -1,   783,   785,    -1,   783,    56,   780,
     764,    -1,   783,     6,   780,   759,   768,    -1,    -1,   560,
     263,   194,  1357,    -1,   783,     6,   780,   771,    -1,   783,
     136,   780,   771,    -1,   784,   763,   774,    -1,   784,   763,
     777,    -1,     6,   781,    -1,     6,   782,    -1,    -1,   765,
     766,    -1,   767,    -1,   766,   767,    -1,   766,   604,   767,
      -1,   786,    -1,   787,    -1,   788,    -1,   769,    -1,   770,
      -1,   769,   770,    -1,   769,   604,   770,    -1,   786,    -1,
     787,    -1,   788,    -1,   789,    -1,   792,    -1,   794,    -1,
     796,    -1,   793,    -1,   772,    -1,   773,    -1,   772,   773,
      -1,   772,   604,   773,    -1,   786,    -1,   787,    -1,   788,
      -1,   794,    -1,   796,    -1,   775,    -1,   776,    -1,   775,
     776,    -1,   775,   604,   776,    -1,   786,    -1,   790,    -1,
     791,    -1,   792,    -1,   794,    -1,   796,    -1,   793,    -1,
     778,    -1,   779,    -1,   778,   779,    -1,   778,   604,   779,
      -1,   786,    -1,   794,    -1,   796,    -1,   104,  1354,    -1,
     544,  1354,    -1,   403,  1354,    -1,  1357,    -1,  1357,    -1,
     397,    -1,   399,    -1,   336,     4,    -1,   219,  1239,   797,
      -1,    24,  1239,   797,    -1,   293,  1239,   797,    -1,   166,
    1239,   797,    -1,   545,  1239,   797,    -1,   404,  1239,   797,
      -1,   333,  1239,  1188,    -1,    73,  1239,  1354,    -1,  1280,
     150,  1239,   871,    -1,    -1,   796,    -1,   574,    -1,   339,
      -1,  1188,    -1,   209,    -1,   602,   799,    -1,   864,   804,
     801,    -1,   252,  1350,    -1,   602,   252,  1350,   603,    -1,
     877,   603,   864,   804,   801,    -1,    -1,   804,   853,   603,
     800,  1436,    -1,    -1,    -1,  1321,   856,   853,   802,  1433,
      -1,    -1,  1321,   856,   602,   853,   603,   803,  1436,    -1,
     805,    -1,    -1,   806,    -1,    -1,   370,   808,   807,   811,
      -1,    -1,    -1,   370,   810,   811,    -1,    46,   812,   821,
     822,   829,    -1,   814,   240,   602,   815,   603,    -1,    -1,
     814,   198,   813,   819,    -1,   395,   819,    -1,   395,   818,
      -1,   257,   819,    -1,   257,   818,    -1,    -1,   254,    -1,
      -1,   816,    -1,   817,    -1,   816,   604,   817,    -1,  1357,
      -1,    70,   602,   815,   603,    -1,   602,  1068,   827,  1069,
     603,    -1,   602,  1068,   827,  1069,   603,    -1,    -1,   369,
    1188,    -1,    -1,    -1,   501,    46,   814,   198,   820,   823,
     828,    -1,    -1,   501,    46,   814,   240,   602,   825,   603,
     824,   828,    -1,   826,    -1,   825,   604,   826,    -1,  1357,
      -1,  1075,    -1,    -1,   500,  1188,    -1,    -1,   602,   830,
     603,    -1,   831,    -1,   830,   604,   831,    -1,    -1,   370,
     832,   833,   834,   850,   845,    -1,  1357,    -1,    -1,    -1,
     565,   249,   520,   835,   837,    -1,    -1,   565,   230,   836,
     838,    -1,   297,    -1,   840,    -1,   840,    -1,   602,   839,
     603,    -1,   840,    -1,   839,   604,   840,    -1,    -1,    -1,
     602,   841,   843,   842,   603,    -1,   844,    -1,   843,   604,
     844,    -1,   297,    -1,  1075,    -1,    -1,   602,   846,   603,
      -1,   847,    -1,   846,   604,   847,    -1,    -1,   501,   848,
     849,   850,    -1,  1359,    -1,    -1,   851,    -1,   851,   852,
      -1,   852,    -1,   510,  1239,  1359,    -1,  1280,   150,  1239,
     871,    -1,   333,  1239,  1188,    -1,   292,  1239,  1190,    -1,
     310,  1239,  1190,    -1,   105,   128,  1239,  1354,    -1,   217,
     128,  1239,  1354,    -1,    73,  1239,  1354,    -1,    -1,    -1,
     447,   854,  1062,  1066,   855,   875,    -1,    -1,    18,    -1,
      -1,   858,    -1,   859,    -1,   858,   859,    -1,   870,    -1,
     869,    -1,    -1,   861,    -1,   862,    -1,   862,   861,    -1,
     515,    -1,    -1,   212,  1078,   162,    -1,    -1,   866,    -1,
     867,    -1,   867,   865,    -1,   867,    -1,   867,   866,    -1,
     867,   604,   866,    -1,   150,  1239,   871,    -1,   292,  1239,
    1189,    -1,   310,  1239,  1189,    -1,    26,  1239,  1187,    -1,
     371,  1239,  1354,    -1,    73,  1239,  1354,    -1,    25,  1239,
    1189,    -1,   363,  1239,  1187,    -1,   363,  1239,   119,    -1,
      60,  1239,  1187,    -1,   513,  1239,  1187,    -1,   122,  1239,
    1187,    -1,   438,  1239,   873,    -1,    -1,   549,  1239,   868,
     602,  1301,   603,    -1,   869,    -1,   870,    -1,   224,  1239,
     874,    -1,   105,   128,  1239,  1354,    -1,   217,   128,  1239,
    1354,    -1,   510,  1357,    -1,   494,   131,    -1,   494,   302,
      -1,    81,  1239,  1354,    -1,   239,  1239,  1187,    -1,   920,
     911,  1239,   913,    -1,   920,    68,  1239,   919,    -1,  1359,
      -1,  1359,    -1,   119,    -1,   174,    -1,   140,    -1,    78,
      -1,   405,    -1,    76,    -1,   338,    -1,   173,    -1,   243,
      -1,  1182,    -1,  1061,  1065,    -1,   496,    -1,   400,    -1,
     117,    -1,   228,    -1,   878,    -1,   879,    -1,   878,   604,
     879,    -1,   880,    -1,   881,    -1,   886,   882,    -1,   886,
     926,    -1,   932,   956,   941,   602,   954,   603,   942,    -1,
     938,   935,   956,   940,   602,   954,   603,   943,    -1,   939,
     935,   956,   940,   602,   954,   603,   944,    -1,   884,   933,
     956,   941,   602,   954,   603,   942,    -1,   884,   179,   240,
     956,   602,   954,   603,   926,    -1,   884,   883,    -1,    -1,
     883,    -1,    61,   602,  1072,   603,    -1,    -1,   885,    -1,
      83,   956,    -1,    -1,  1349,   887,   888,   906,    -1,   896,
     904,   900,    -1,   897,   905,   900,    -1,   176,   898,   900,
      -1,    38,    -1,    38,   903,    -1,    43,    -1,    42,    -1,
     892,   903,   923,    -1,   892,   923,    -1,   893,   903,   924,
      -1,   893,   924,    -1,    33,   903,    -1,    33,    -1,   894,
     903,   923,    -1,   895,   903,   924,    -1,   567,   903,    -1,
     591,   904,   900,    -1,   109,    -1,   525,    -1,   522,    -1,
     106,    -1,   526,    -1,    40,   904,    -1,   891,    -1,   298,
      -1,   265,    -1,   268,   567,    -1,   268,   894,   923,    -1,
     528,   923,    -1,   519,   904,   923,    -1,   300,   923,    -1,
     266,   923,    -1,   117,   898,   900,    -1,   343,   898,   900,
      -1,   174,   898,   900,    -1,    -1,   151,   889,   602,   958,
     603,   923,    -1,    -1,   455,   890,   602,   958,   603,   923,
      -1,   268,   923,    -1,   451,    -1,   189,    -1,   188,    -1,
     375,    -1,   318,    -1,   256,    -1,   317,    -1,   376,    -1,
     319,    -1,    59,    -1,   327,    -1,   324,    59,    -1,   892,
     571,    -1,   568,    -1,   324,   568,    -1,   344,    -1,   327,
     568,    -1,   324,    59,   571,    -1,   327,   571,    -1,   228,
      -1,   527,    -1,   467,    -1,   299,    -1,    32,    -1,   400,
      -1,   134,    -1,   134,   379,    -1,    -1,   903,    -1,   899,
      -1,   602,   342,   604,   342,   603,    -1,    -1,   901,    -1,
     901,   902,    -1,   902,    -1,   463,    -1,   553,    -1,   592,
      -1,   602,   267,   603,    -1,   602,   540,   603,    -1,   602,
     116,   603,    -1,   602,   342,   603,    -1,    -1,   903,    -1,
      -1,   899,    -1,    -1,   907,    -1,   907,   908,    -1,   908,
      -1,   341,    -1,  1078,   341,    -1,   119,   910,    -1,   347,
     555,   337,  1071,    -1,    25,    -1,   451,   119,   566,    -1,
     925,   240,    -1,   550,    -1,   550,   240,    -1,    73,  1354,
      -1,    68,   917,    -1,   888,   918,    -1,   337,  1071,    -1,
    1340,    -1,    59,   455,    -1,    58,    -1,  1359,    -1,    33,
      -1,   912,    -1,   119,    -1,    -1,   911,   913,    -1,  1359,
      -1,    33,    -1,   915,    -1,   119,    -1,  1359,    -1,    -1,
      68,   919,    -1,   917,    -1,   119,    -1,    -1,   119,    -1,
      20,    -1,    33,    20,    -1,    20,    33,    -1,   547,    -1,
     547,    33,    -1,    33,   547,    -1,    -1,   921,    -1,   922,
      -1,    47,    -1,   911,   912,   924,    -1,    33,    -1,    33,
     911,   912,    -1,    -1,    33,    -1,    -1,   383,    -1,   406,
    1350,   927,   929,   930,    -1,    -1,   602,   928,   603,    -1,
     928,   604,  1357,    -1,  1357,    -1,    -1,   289,   183,    -1,
     289,   367,    -1,   289,   464,    -1,    -1,   347,   555,   931,
      -1,   347,   123,   931,    -1,   347,   555,   931,   347,   123,
     931,    -1,   347,   123,   931,   347,   555,   931,    -1,   428,
      -1,    50,    -1,   455,   341,    -1,   338,     5,    -1,   455,
     119,    -1,   934,    -1,   383,   240,    -1,   550,   935,    -1,
     240,    -1,   217,    -1,    -1,   934,    -1,   238,    -1,   217,
      -1,   216,    -1,    -1,   550,    -1,   184,    -1,   473,    -1,
      -1,   940,    -1,   940,   948,    -1,    -1,   945,    -1,    -1,
     947,    -1,    -1,   946,    -1,   950,    -1,   945,   950,    -1,
     951,    -1,   946,   951,    -1,   952,    -1,   947,   952,    -1,
     561,   953,    -1,   538,   953,    -1,   239,  1239,  1187,    -1,
      73,  1354,    -1,   949,    -1,   948,    -1,   949,    -1,   949,
      -1,   580,   366,  1353,    -1,    45,    -1,   440,    -1,   198,
      -1,   954,   604,   955,  1180,    -1,   955,  1180,    -1,  1357,
      -1,  1357,   602,   342,   603,    -1,    -1,  1349,    -1,    -1,
     610,  1357,    -1,  1338,    -1,   958,   604,  1338,    -1,    -1,
      13,   993,   512,  1350,   960,   971,    -1,    -1,    13,   102,
     970,   961,   858,    -1,    13,   102,  1357,   556,   105,   128,
     323,    -1,    -1,    13,   385,   660,   962,   661,    -1,    -1,
      13,   185,   660,   963,   661,    -1,    -1,    13,  1459,  1454,
     964,  1461,    -1,    -1,    13,  1454,   965,  1461,    -1,    -1,
      13,  1454,   159,   660,   966,   967,   968,   650,   655,   969,
      -1,    13,   510,   760,    -1,    13,   263,   194,   762,    -1,
      13,   510,   757,    -1,    13,   510,   756,    -1,    13,   453,
    1359,   352,   602,   644,   603,    -1,    -1,   347,   442,   648,
      -1,   654,    -1,   347,   442,   648,   654,    -1,    -1,   416,
     529,   660,    -1,    -1,   135,   656,    -1,    -1,  1357,    -1,
      -1,   130,   510,    -1,   215,   510,    -1,   986,   805,    -1,
     986,   975,    -1,   975,    -1,   806,    -1,   977,    -1,   136,
     370,   984,    -1,   401,   370,  1026,   976,    -1,    -1,   351,
     370,  1026,   976,   972,  1026,    -1,    14,   370,  1026,   976,
      -1,    -1,    61,   370,   976,   973,  1021,    -1,    -1,   418,
     370,  1026,   976,   974,  1013,    -1,    66,   370,  1026,  1188,
      -1,   536,   370,   976,    -1,   980,    -1,   415,   368,    -1,
      12,    -1,   984,    -1,    -1,     6,   370,  1026,   978,   979,
      -1,    -1,   602,   830,   603,    -1,   369,  1188,    -1,    -1,
     417,   370,  1026,   981,   982,    -1,    -1,    -1,   984,   983,
     227,   602,   830,   603,    -1,   985,    -1,   984,   604,   985,
      -1,  1357,    -1,   988,    -1,   986,   604,   988,    -1,     6,
     992,    -1,   987,   880,   995,    -1,     6,   881,    -1,   987,
     602,   877,   603,    -1,    -1,    56,   992,  1349,   989,   886,
     995,    -1,    -1,    -1,   314,   992,  1349,   990,   888,   906,
     991,   995,    -1,   136,   992,  1349,   994,    -1,   136,   179,
     240,   956,    -1,   136,   383,   240,    -1,   136,   934,  1349,
      -1,   129,   238,    -1,   144,   238,    -1,    13,   992,  1349,
     455,   119,  1340,    -1,    13,   992,  1349,   136,   119,    -1,
     416,   996,  1350,    -1,    91,   529,   911,   913,   918,    -1,
     865,    -1,   178,    -1,  1173,    -1,    -1,    71,    -1,    -1,
     213,    -1,    -1,   428,    -1,    50,    -1,    -1,     8,  1357,
      -1,   173,    -1,    -1,   529,    -1,   152,    -1,    18,    -1,
      -1,   489,   465,  1002,   998,  1006,    -1,   493,   465,  1002,
      -1,    -1,   465,   489,  1002,   999,  1006,    -1,   465,   493,
    1002,    -1,   489,   531,  1001,    -1,    -1,   580,    82,   468,
      -1,    -1,  1003,  1004,    -1,  1005,    -1,  1004,   604,  1005,
      -1,    -1,   485,    -1,   412,    -1,    -1,   554,  1007,    -1,
     635,    -1,  1007,   604,   635,    -1,    -1,    60,  1382,  1009,
    1213,  1010,    -1,    -1,   394,    -1,   165,    -1,    -1,   418,
    1026,  1382,  1012,  1213,  1013,    -1,    -1,  1014,    -1,  1015,
      -1,  1015,  1014,    -1,   394,    -1,   165,    -1,   559,    -1,
      -1,    14,  1026,  1382,  1017,  1213,    -1,    34,  1354,    -1,
      -1,    61,  1382,  1020,  1213,  1021,    -1,    -1,  1022,    -1,
    1023,    -1,  1023,  1022,    -1,   394,    -1,   169,    -1,   301,
      -1,   165,    -1,    57,    -1,   180,   556,    -1,    -1,   351,
    1026,  1382,  1025,  1213,    -1,    -1,   340,    -1,   259,    -1,
      -1,   416,  1382,  1028,  1030,    -1,   416,   558,   659,  1029,
      -1,  1360,   529,  1360,    -1,  1029,   604,  1360,   529,  1360,
      -1,  1031,    -1,  1030,   604,  1031,    -1,  1350,   529,  1350,
      -1,    -1,    48,   217,  1033,  1034,   230,  1038,    -1,  1035,
      -1,  1037,    -1,  1036,    -1,  1035,   604,  1036,    -1,  1350,
    1047,    -1,  1350,  1045,  1047,    -1,  1357,    -1,   119,    -1,
      -1,   258,   217,   227,    48,  1040,  1041,    -1,  1044,    -1,
    1042,    -1,  1043,    -1,  1042,   604,  1043,    -1,  1350,  1047,
    1050,    -1,  1350,  1045,  1047,  1050,    -1,    -1,   370,   808,
    1046,   602,   976,   603,    -1,    -1,  1048,  1049,    -1,    -1,
     934,   602,  1155,   603,    -1,    -1,   213,   246,    -1,  1052,
      -1,   447,  1055,    -1,   602,  1053,   603,  1436,    -1,   447,
    1057,    -1,   602,  1053,   603,    -1,   447,  1134,    -1,   602,
    1054,   603,    -1,    -1,  1057,  1056,  1433,    -1,    -1,    -1,
    1058,  1062,  1066,  1059,  1060,  1065,    -1,  1176,  1182,    -1,
    1202,    -1,  1061,    -1,  1202,  1061,    -1,  1061,  1202,    -1,
     182,  1116,  1165,  1170,  1167,  1176,  1182,  1193,    -1,   182,
     137,  1165,  1182,    -1,    -1,  1063,    -1,  1063,  1064,    -1,
    1064,    -1,  1450,    -1,   482,    -1,   480,    -1,    -1,   180,
     555,    -1,   262,   230,   457,   312,    -1,  1066,   604,  1067,
      -1,  1067,    -1,   597,    -1,  1068,  1344,  1069,    -1,  1068,
    1072,  1069,  1070,    -1,    -1,    -1,    -1,    18,  1357,    -1,
      18,  1354,    -1,  1357,    -1,  1354,    -1,    -1,   602,   603,
      -1,  1072,  1076,  1072,    -1,  1072,   589,  1072,    -1,  1072,
    1077,  1072,    -1,   336,  1072,    -1,  1073,   233,   535,    -1,
    1073,   233,  1078,   535,    -1,  1073,   233,   168,    -1,  1073,
     233,  1078,   168,    -1,  1073,   233,   551,    -1,  1073,   233,
    1078,   551,    -1,  1073,    -1,  1073,   233,   341,    -1,  1073,
     233,  1078,   341,    -1,  1073,   153,  1074,    -1,  1073,  1080,
    1074,    -1,  1073,  1080,  1081,   602,  1445,   603,    -1,  1074,
      -1,  1075,   230,   602,  1445,   603,    -1,  1075,  1078,   230,
     602,  1445,   603,    -1,  1075,   230,   602,  1072,   603,    -1,
    1075,   230,   602,  1072,   604,  1109,   603,    -1,  1075,  1078,
     230,   602,  1072,   603,    -1,  1075,  1078,   230,   602,  1072,
     604,  1109,   603,    -1,  1075,    31,  1075,    16,  1074,    -1,
    1075,  1078,    31,  1075,    16,  1074,    -1,  1075,   471,   252,
    1075,    -1,  1075,   252,  1082,  1169,    -1,  1075,  1078,   252,
    1082,  1169,    -1,  1075,   407,  1075,    -1,  1075,  1078,   407,
    1075,    -1,  1075,    -1,  1075,   593,  1075,    -1,  1075,   594,
    1075,    -1,  1075,   458,  1075,    -1,  1075,   459,  1075,    -1,
    1075,   596,  1075,    -1,  1075,   595,  1075,    -1,  1075,   596,
     226,  1072,  1159,    -1,  1075,   595,   226,  1072,  1159,    -1,
    1075,   597,  1075,    -1,  1075,   598,  1075,    -1,  1075,   599,
    1075,    -1,  1075,   133,  1075,    -1,  1075,   315,  1075,    -1,
    1075,   600,  1075,    -1,  1082,    -1,   358,    -1,   355,    -1,
      16,    -1,    15,    -1,   336,    -1,   335,    -1,   605,    -1,
     335,    -1,   152,    -1,   186,    -1,   196,    -1,   244,    -1,
     271,    -1,   329,    -1,    12,    -1,    17,    -1,  1346,    -1,
    1083,    -1,  1084,    -1,  1087,    -1,  1085,    -1,  1082,    68,
    1359,    -1,  1341,    -1,  1339,    -1,  1099,    -1,  1095,    -1,
    1082,   357,  1082,    -1,   596,  1082,    -1,   595,  1082,    -1,
     601,  1082,    -1,  1079,  1082,    -1,   602,  1445,   603,    -1,
     602,  1072,   603,    -1,   602,  1072,   604,  1109,   603,    -1,
     439,   602,  1072,   604,  1109,   603,    -1,   162,   602,  1445,
     603,    -1,   606,  1357,  1072,   607,    -1,   289,  1110,     9,
     602,  1075,  1089,   603,    -1,    33,  1082,    -1,    53,   602,
    1072,    18,  1107,   603,    -1,    52,  1112,  1114,  1113,   146,
      -1,    91,   602,  1072,   604,  1107,   603,    -1,    91,   602,
    1072,   561,   912,   603,    -1,   119,   602,  1346,   603,    -1,
     565,   602,  1347,   603,    -1,   226,  1072,  1159,   596,  1072,
      -1,    59,   602,  1109,   603,    -1,    59,   602,  1109,   561,
     912,   603,    -1,    98,  1071,    -1,   109,   602,  1072,   603,
      -1,   114,   602,  1072,   603,    -1,   208,   602,  1072,   603,
      -1,   223,   602,  1072,   604,  1072,   604,  1072,   604,  1072,
     603,    -1,   226,   602,  1072,   604,  1072,   603,    -1,   226,
     602,  1072,   604,  1072,   604,  1109,   603,    -1,   248,   602,
    1072,   604,  1072,   603,    -1,   309,   602,  1072,   603,    -1,
     316,   602,  1072,   603,    -1,   433,   602,  1072,   604,  1072,
     603,    -1,   445,   602,  1072,   603,    -1,   525,   602,  1072,
     603,    -1,   522,   602,  1072,   603,    -1,   522,   602,  1072,
     604,  1072,   603,    -1,   534,   602,  1072,   603,    -1,   534,
     602,   245,  1072,   182,  1072,   603,    -1,   534,   602,   530,
    1072,   182,  1072,   603,    -1,   534,   602,    44,  1072,   182,
    1072,   603,    -1,   534,   602,   245,   182,  1072,   603,    -1,
     534,   602,   530,   182,  1072,   603,    -1,   534,   602,    44,
     182,  1072,   603,    -1,   534,   602,  1072,   182,  1072,   603,
      -1,   558,   602,   603,    -1,   591,   602,  1072,   603,    -1,
       7,   602,  1072,   604,  1072,   603,    -1,     7,   602,  1072,
     604,   226,  1072,  1159,   603,    -1,    97,  1071,    -1,   101,
    1071,    -1,   101,   602,  1072,   603,    -1,   107,   602,  1072,
     604,   226,  1072,  1159,   603,    -1,   108,   602,  1072,   604,
     226,  1072,  1159,   603,    -1,   167,   602,  1159,   182,  1072,
     603,    -1,   190,   602,  1161,   604,  1072,   603,    -1,   337,
    1071,    -1,   337,   602,  1072,   603,    -1,   378,   602,  1075,
     230,  1072,   603,    -1,   498,   602,  1072,   604,  1072,   603,
      -1,   498,   602,  1072,   604,   226,  1072,  1159,   603,    -1,
     502,   602,  1072,   604,  1072,   604,  1072,   603,    -1,   502,
     602,  1072,   604,  1072,   603,    -1,   502,   602,  1072,   182,
    1072,   180,  1072,   603,    -1,   502,   602,  1072,   182,  1072,
     603,    -1,   508,  1071,    -1,   508,   602,  1072,   603,    -1,
     523,   602,  1160,   604,  1072,   604,  1072,   603,    -1,   524,
     602,  1160,   604,  1072,   604,  1072,   603,    -1,   562,  1071,
      -1,   564,  1071,    -1,   563,  1071,    -1,    20,   602,  1072,
     603,    -1,    58,   602,  1072,   603,    -1,    66,   602,  1109,
     603,    -1,    69,   602,  1072,   603,    -1,   102,   602,   603,
      -1,   212,   602,  1072,   604,  1072,   604,  1072,   603,    -1,
     305,   602,  1072,   603,    -1,   315,   602,  1072,   604,  1072,
     603,    -1,   346,   602,  1072,   603,    -1,   371,   602,  1072,
     603,    -1,   392,   602,  1072,   603,    -1,   420,   602,  1072,
     604,  1072,   603,    -1,   421,   602,  1072,   604,  1072,   604,
    1072,   603,    -1,   536,   602,  1072,   604,  1072,   603,    -1,
     576,   602,  1072,   603,    -1,   576,   602,  1072,   604,  1072,
     603,    -1,  1086,    -1,    87,   602,  1072,   604,  1072,   603,
      -1,   188,   602,  1109,   603,    -1,   256,   602,  1109,   603,
      -1,   317,   602,  1109,   603,    -1,   318,   602,  1109,   603,
      -1,   319,   602,  1109,   603,    -1,   375,   602,  1072,   604,
    1072,   603,    -1,   376,   602,  1109,   603,    -1,    -1,  1353,
     602,  1088,  1092,   603,    -1,  1357,   610,  1357,   602,  1108,
     603,    -1,  1090,  1091,    -1,   230,    42,   312,    -1,    -1,
     230,   325,   242,   312,    -1,    -1,   580,   393,   164,    -1,
      -1,  1093,    -1,  1094,    -1,  1093,   604,  1094,    -1,  1068,
    1072,  1069,  1070,    -1,    27,   602,  1105,   603,    -1,    27,
     602,   132,  1105,   603,    -1,    36,   602,  1105,   603,    -1,
      37,   602,  1105,   603,    -1,    39,   602,  1105,   603,    -1,
      92,   602,  1164,   597,   603,    -1,    92,   602,  1105,   603,
      -1,    -1,    -1,    92,   602,   132,  1096,  1109,  1097,   603,
      -1,   311,   602,  1105,   603,    -1,   311,   602,   132,  1105,
     603,    -1,   294,   602,  1105,   603,    -1,   294,   602,   132,
    1105,   603,    -1,   492,   602,  1105,   603,    -1,   570,   602,
    1105,   603,    -1,   491,   602,  1105,   603,    -1,   572,   602,
    1105,   603,    -1,   503,   602,  1105,   603,    -1,   503,   602,
     132,  1105,   603,    -1,    -1,   195,   602,  1102,  1098,  1109,
    1104,  1103,   603,    -1,    -1,   609,  1100,  1101,    -1,  1359,
     456,  1072,    -1,  1359,    -1,   609,  1372,  1359,   957,    -1,
      -1,   132,    -1,    -1,   449,  1338,    -1,    -1,  1177,    -1,
      -1,  1164,  1106,  1072,    -1,    33,   904,    -1,    59,   904,
     923,    -1,   327,   904,    -1,   463,    -1,   463,   228,    -1,
     553,    -1,   553,   228,    -1,   109,    -1,   525,    -1,   106,
      -1,   117,   898,    -1,    -1,  1109,    -1,  1072,    -1,  1109,
     604,  1072,    -1,  1111,    -1,   602,  1111,   603,    -1,  1346,
      -1,  1111,   604,  1346,    -1,    -1,  1072,    -1,    -1,   142,
    1072,    -1,   577,  1072,   521,  1072,    -1,  1114,   577,  1072,
     521,  1072,    -1,  1128,    -1,  1119,    -1,  1118,    -1,  1115,
      -1,   606,  1357,  1115,   607,    -1,  1117,    -1,  1118,   604,
    1117,    -1,  1115,  1127,  1115,    -1,  1115,   495,  1128,    -1,
      -1,  1115,  1127,  1115,   347,  1120,  1072,    -1,    -1,  1115,
     495,  1128,   347,  1121,  1072,    -1,    -1,  1115,  1127,  1115,
     561,  1122,   602,  1158,   603,    -1,  1115,   325,   237,  1128,
      -1,    -1,  1115,   248,  1144,   237,  1115,   347,  1123,  1072,
      -1,    -1,  1115,   248,  1144,   237,  1128,  1124,   561,   602,
    1158,   603,    -1,  1115,   325,   248,  1144,   237,  1128,    -1,
      -1,  1115,   433,  1144,   237,  1115,   347,  1125,  1072,    -1,
      -1,  1115,   433,  1144,   237,  1128,  1126,   561,   602,  1158,
     603,    -1,  1115,   325,   433,  1144,   237,  1128,    -1,   237,
      -1,   220,   237,    -1,    95,   237,    -1,    -1,  1129,  1350,
    1163,  1153,    -1,  1143,  1142,  1139,    -1,   602,  1142,  1130,
     603,  1163,    -1,  1137,  1437,    -1,    -1,    -1,  1130,   549,
    1441,  1131,  1442,  1132,  1437,    -1,  1134,    -1,    -1,    -1,
    1135,  1448,  1066,  1136,   875,  1065,    -1,    -1,  1142,  1138,
    1118,    -1,    -1,    -1,  1140,  1062,  1066,  1141,   875,    -1,
      -1,   447,    -1,    -1,   359,    -1,    -1,   180,   237,    -1,
     180,   356,    46,    -1,   180,   194,    46,    -1,   178,    -1,
     213,    -1,    -1,  1146,   934,  1145,  1148,   602,  1157,   603,
      -1,    -1,   560,   934,  1145,  1149,   602,  1155,   603,    -1,
    1147,    -1,  1150,  1147,    -1,    -1,    -1,  1152,  1150,    -1,
      -1,  1154,  1151,    -1,    -1,  1157,    -1,  1357,    -1,   383,
      -1,  1156,    -1,  1157,   604,  1156,    -1,  1357,    -1,  1158,
     604,  1357,    -1,  1160,    -1,   110,    -1,   111,    -1,   112,
      -1,   113,    -1,   205,    -1,   206,    -1,   207,    -1,   307,
      -1,   308,    -1,   444,    -1,   590,    -1,   114,    -1,   576,
      -1,   208,    -1,   309,    -1,   316,    -1,   392,    -1,   445,
      -1,   305,    -1,   591,    -1,   109,    -1,   525,    -1,   106,
      -1,   522,    -1,    -1,    18,    -1,   152,    -1,    -1,  1162,
    1357,    -1,    -1,    12,    -1,    -1,    -1,   578,  1166,  1072,
      -1,    -1,    -1,   199,  1168,  1072,    -1,   157,  1082,    -1,
      -1,    -1,   194,    46,  1171,  1172,    -1,  1171,   604,  1345,
    1180,    -1,  1345,  1180,    -1,    -1,   581,    -1,   582,    -1,
     356,    46,  1174,    -1,  1174,   604,  1175,    -1,  1175,    -1,
    1347,  1180,    -1,    -1,  1177,    -1,    -1,   356,    46,  1178,
    1179,    -1,  1179,   604,  1345,  1180,    -1,  1345,  1180,    -1,
      -1,    19,    -1,   124,    -1,    -1,  1183,    -1,    -1,  1183,
      -1,   253,  1184,    -1,  1185,    -1,  1185,   604,  1185,    -1,
    1185,   345,  1185,    -1,  1357,    -1,  1339,    -1,   540,    -1,
     267,    -1,   342,    -1,    -1,   253,  1185,    -1,   342,    -1,
     201,    -1,   267,    -1,   540,    -1,   116,    -1,   175,    -1,
     342,    -1,   201,    -1,   267,    -1,   540,    -1,  1191,    -1,
     342,    -1,   540,    -1,   267,    -1,   116,    -1,   175,    -1,
     342,    -1,   540,    -1,   267,    -1,  1191,    -1,  1192,    -1,
     116,    -1,   175,    -1,    -1,    -1,   385,  1357,  1194,   602,
    1195,   603,    -1,    -1,  1196,    -1,  1196,   604,  1197,    -1,
    1197,    -1,  1068,  1072,  1069,    -1,    -1,  1199,  1200,    -1,
    1200,   604,  1201,    -1,  1201,    -1,   609,  1359,    -1,  1359,
      -1,    -1,   227,  1203,  1204,    -1,    -1,    -1,   360,  1356,
    1205,   914,  1206,  1322,  1325,    -1,   138,  1356,    -1,  1198,
      -1,    -1,   135,  1208,  1109,    -1,    -1,   136,  1218,  1382,
    1217,  1210,  1213,   994,    -1,    -1,   136,   217,  1357,   347,
    1350,  1211,    -1,   136,   102,  1217,  1357,    -1,   136,   185,
    1217,  1357,   610,  1357,    -1,   136,   185,  1217,  1357,    -1,
     136,   385,  1217,   660,    -1,   136,   558,   659,  1412,    -1,
      -1,   136,   573,  1217,  1212,  1213,   994,    -1,   136,   159,
    1217,   660,    -1,   136,   533,  1217,   660,    -1,   136,   510,
     783,   794,   795,    -1,   136,   263,   194,   784,   794,   795,
      -1,   136,   453,  1217,  1359,    -1,  1214,    -1,  1213,   604,
    1214,    -1,  1350,    -1,  1216,    -1,  1215,   604,  1216,    -1,
    1351,    -1,    -1,   212,   162,    -1,    -1,   515,    -1,    -1,
      -1,   223,  1220,  1225,   993,  1227,  1221,  1229,  1245,    -1,
      -1,    -1,   421,  1223,  1226,  1227,  1224,  1229,    -1,    -1,
     270,    -1,   121,    -1,   202,    -1,  1254,    -1,   121,    -1,
     227,  1228,    -1,  1228,    -1,  1214,    -1,  1232,    -1,   602,
     603,  1232,    -1,   602,  1231,   603,  1232,    -1,    -1,   455,
    1230,  1236,    -1,  1231,   604,  1343,    -1,  1343,    -1,   565,
    1235,    -1,   566,  1235,    -1,    -1,   853,  1233,  1433,    -1,
      -1,   602,   853,   603,  1234,  1436,    -1,  1235,   604,  1240,
      -1,  1240,    -1,  1236,   604,  1237,    -1,  1237,    -1,  1347,
    1238,  1244,    -1,   152,    -1,   456,    -1,    -1,  1238,    -1,
      -1,   602,  1241,  1242,   603,    -1,    -1,  1243,    -1,  1243,
     604,  1244,    -1,  1244,    -1,  1072,    -1,   119,    -1,    -1,
      -1,   347,   139,  1246,   240,   555,  1252,    -1,    -1,    -1,
     555,  1248,  1254,   993,  1116,   455,  1250,  1249,  1165,  1176,
    1186,    -1,  1250,   604,  1251,    -1,  1251,    -1,  1347,  1238,
    1244,    -1,  1252,   604,  1253,    -1,  1253,    -1,  1347,  1238,
    1244,    -1,    -1,   270,    -1,    -1,   123,  1256,  1264,  1257,
      -1,    -1,   182,  1350,  1258,  1165,  1176,  1186,    -1,    -1,
    1261,  1259,   182,  1116,  1165,    -1,    -1,   182,  1215,  1260,
     561,  1116,  1165,    -1,  1262,    -1,  1261,   604,  1262,    -1,
    1357,  1263,    -1,  1357,   610,  1357,  1263,    -1,    -1,   610,
     597,    -1,    -1,  1265,  1264,    -1,   394,    -1,   270,    -1,
     213,    -1,    -1,   536,  1268,  1267,  1214,    -1,    -1,   512,
      -1,    -1,  1270,    -1,  1271,    -1,  1270,   604,  1271,    -1,
      93,    -1,   302,    -1,    41,   231,    -1,    88,   507,    -1,
     364,   170,    -1,   232,    -1,   506,    -1,   472,    -1,    12,
      -1,    -1,   180,   393,   342,    -1,    -1,   460,  1274,  1275,
      -1,   103,  1286,    -1,  1282,   509,  1281,  1286,    -1,  1282,
     532,  1281,  1286,    -1,   158,  1281,  1286,    -1,   512,   490,
    1281,  1286,    -1,   350,   509,  1281,  1286,    -1,   373,    -1,
     150,   872,  1278,    -1,   150,    12,  1278,    -1,  1282,    70,
    1283,  1350,  1281,  1286,    -1,  1279,   264,    -1,   465,   204,
      -1,    -1,    34,   158,  1284,  1285,  1276,  1181,    -1,    -1,
     409,   158,  1284,  1285,  1277,  1181,    -1,   936,  1283,  1350,
    1281,  1165,    -1,  1280,   149,    -1,    23,    -1,    90,    -1,
     384,    -1,    92,   602,   597,   603,   575,    -1,    92,   602,
     597,   603,   155,    -1,   575,  1181,    -1,   155,  1181,    -1,
     389,    -1,   388,  1269,  1272,  1181,    -1,  1371,   490,  1286,
      -1,  1282,   387,    -1,  1371,   569,  1286,    -1,   911,  1286,
      -1,    69,  1286,    -1,   193,    -1,   193,   180,  1360,    -1,
      94,   102,   863,  1357,    -1,    94,   512,  1350,    -1,    94,
     573,  1350,    -1,   286,   490,    -1,   465,   490,    -1,    94,
     385,   660,    -1,    94,   185,   660,    -1,    94,   533,   660,
      -1,   385,   490,  1286,    -1,   185,   490,  1286,    -1,   385,
      67,   660,    -1,   185,    67,   660,    -1,    94,   159,   660,
      -1,   490,    -1,   320,    -1,   264,    -1,   286,    -1,    33,
      -1,    -1,   494,    -1,    -1,  1283,  1357,    -1,    -1,   183,
      -1,   182,    -1,   230,    -1,    -1,   230,  1354,    -1,    -1,
     182,  1189,    -1,    -1,   252,  1354,    -1,   578,  1072,    -1,
      -1,  1290,  1350,  1288,  1292,    -1,    -1,  1290,  1291,  1289,
    1051,    -1,   124,    -1,   125,    -1,    -1,   165,    -1,   369,
      -1,    -1,  1338,    -1,  1357,    -1,    -1,   177,  1026,  1294,
    1295,    -1,    -1,    -1,  1382,  1296,  1301,  1297,  1298,    -1,
    1299,    -1,    -1,   580,   398,   262,    -1,  1299,   604,  1300,
      -1,  1300,    -1,   154,   264,    -1,   150,   264,    -1,   187,
     264,    -1,   466,   264,    -1,    33,   264,    -1,   408,   264,
      -1,   393,    48,    -1,   204,    -1,   384,    -1,   264,    -1,
     490,    -1,   465,    -1,   286,    -1,   126,    -1,   426,    -1,
      -1,  1213,    -1,    -1,   424,  1303,  1304,    -1,  1304,   604,
    1305,    -1,  1305,    -1,   465,    -1,   286,    -1,   393,    48,
      -1,    -1,   391,  1307,  1308,    -1,  1279,   264,  1309,    -1,
     529,  1354,    -1,    29,  1072,    -1,   241,  1311,  1072,    -1,
      -1,    81,    -1,   393,    -1,   560,  1357,    -1,    -1,    -1,
      -1,    -1,   258,  1318,  1314,  1320,  1319,   218,  1356,  1315,
    1321,   227,   512,  1350,  1316,   914,  1317,  1328,  1322,  1325,
    1329,  1331,  1334,    -1,   105,    -1,   588,    -1,    -1,   259,
      -1,    -1,    79,    -1,   270,    -1,    -1,   421,    -1,   213,
      -1,    -1,    70,  1323,    -1,  1323,  1324,    -1,  1324,    -1,
     517,    46,  1338,    -1,   354,   145,    46,  1338,    -1,   145,
      46,  1338,    -1,   156,    46,  1338,    -1,    -1,   255,  1326,
      -1,  1326,  1327,    -1,  1327,    -1,   517,    46,  1338,    -1,
     487,    46,  1338,    -1,    -1,   437,   210,    46,  1338,    -1,
      -1,   213,   342,  1330,    -1,   255,    -1,   437,    -1,    -1,
     602,  1332,   603,    -1,   602,   603,    -1,  1332,   604,  1333,
      -1,  1333,    -1,  1347,    -1,   609,  1359,    -1,    -1,   455,
    1335,    -1,  1335,   604,  1336,    -1,  1336,    -1,  1347,  1238,
    1068,  1244,  1069,    -1,   518,    -1,   326,    -1,   543,   518,
      -1,  1337,  1355,    -1,  1355,    -1,   201,    -1,    35,    -1,
     365,    -1,  1341,    -1,   596,  1342,    -1,   595,  1342,    -1,
    1337,    -1,  1342,    -1,   341,    -1,   168,    -1,   535,    -1,
     201,    -1,    35,    -1,   543,   201,    -1,   543,    35,    -1,
     109,  1337,    -1,   525,  1337,    -1,   522,  1337,    -1,   342,
      -1,   267,    -1,   540,    -1,   116,    -1,   175,    -1,  1347,
      -1,  1344,    -1,  1357,   610,   597,    -1,  1357,   610,  1357,
     610,   597,    -1,  1072,    -1,  1357,    -1,  1348,    -1,  1357,
      -1,  1348,    -1,  1357,   610,  1357,    -1,   610,  1357,   610,
    1357,    -1,  1357,   610,  1357,   610,  1357,    -1,  1357,    -1,
    1357,   610,  1357,   610,  1357,    -1,  1357,   610,  1357,    -1,
     610,  1357,    -1,  1357,    -1,  1357,   610,  1357,    -1,   610,
    1357,    -1,  1357,  1263,    -1,  1357,   610,  1357,  1263,    -1,
    1357,    -1,   209,    -1,   211,    -1,   518,    -1,   518,    -1,
     518,    -1,  1353,    -1,  1361,    -1,  1353,    -1,  1362,    -1,
    1357,    -1,  1354,    -1,   251,    -1,  1359,    -1,  1359,   609,
    1359,    -1,    98,  1071,    -1,  1362,    -1,    20,    -1,    28,
      -1,    30,    -1,    47,    -1,    48,    -1,    58,    -1,    60,
      -1,    65,    -1,    73,    -1,    75,    -1,    87,    -1,   115,
      -1,   135,    -1,   146,    -1,   161,    -1,   177,    -1,   197,
      -1,   200,    -1,   203,    -1,   225,    -1,   242,    -1,   338,
      -1,   350,    -1,   352,    -1,   362,    -1,   366,    -1,   370,
      -1,   377,    -1,   380,    -1,   415,    -1,   418,    -1,   424,
      -1,   427,    -1,   434,    -1,   441,    -1,   446,    -1,   453,
      -1,   463,    -1,   469,    -1,   465,    -1,   470,    -1,   489,
      -1,   493,    -1,   536,    -1,   547,    -1,   548,    -1,   584,
      -1,   587,    -1,   556,    -1,     5,    -1,     7,    -1,     8,
      -1,     9,    -1,    10,    -1,    11,    -1,    17,    -1,    22,
      -1,    23,    -1,    25,    -1,    24,    -1,    26,    -1,    27,
      -1,    34,    -1,    38,    -1,    41,    -1,    43,    -1,    42,
      -1,    45,    -1,    51,    -1,    54,    -1,    55,    -1,    57,
      -1,    62,    -1,    64,    -1,    63,    -1,    66,    -1,    67,
      -1,    69,    -1,    72,    -1,    70,    -1,    74,    -1,    76,
      -1,    77,    -1,    78,    -1,    79,    -1,    81,    -1,    82,
      -1,    84,    -1,    86,    -1,    85,    -1,    88,    -1,    90,
      -1,    93,    -1,    96,    -1,   100,    -1,   105,    -1,   104,
      -1,   106,    -1,   109,    -1,   114,    -1,   120,    -1,   122,
      -1,   126,    -1,   128,    -1,   129,    -1,   130,    -1,   131,
      -1,   138,    -1,   139,    -1,   140,    -1,   147,    -1,   151,
      -1,   150,    -1,   149,    -1,   154,    -1,   155,    -1,   157,
      -1,   159,    -1,   158,    -1,   160,    -1,   164,    -1,   165,
      -1,   166,    -1,   170,    -1,   169,    -1,   181,    -1,   144,
      -1,   183,    -1,   172,    -1,   173,    -1,   174,    -1,   187,
      -1,   189,    -1,   188,    -1,   190,    -1,   193,    -1,   191,
      -1,   198,    -1,   204,    -1,   208,    -1,   210,    -1,   214,
      -1,   229,    -1,   215,    -1,   216,    -1,   219,    -1,   231,
      -1,   232,    -1,   234,    -1,   235,    -1,   224,    -1,   239,
      -1,   243,    -1,   246,    -1,   249,    -1,   250,    -1,   256,
      -1,   257,    -1,   259,    -1,   261,    -1,   263,    -1,   264,
      -1,   292,    -1,   286,    -1,   288,    -1,   273,    -1,   277,
      -1,   274,    -1,   275,    -1,   287,    -1,   276,    -1,   278,
      -1,   272,    -1,   284,    -1,   280,    -1,   279,    -1,   281,
      -1,   282,    -1,   283,    -1,   290,    -1,   291,    -1,   293,
      -1,   295,    -1,   296,    -1,   301,    -1,   302,    -1,   303,
      -1,   304,    -1,   305,    -1,   306,    -1,   309,    -1,   310,
      -1,   314,    -1,   312,    -1,   316,    -1,   317,    -1,   318,
      -1,   319,    -1,   320,    -1,   321,    -1,   323,    -1,   322,
      -1,   324,    -1,   327,    -1,   328,    -1,   332,    -1,   331,
      -1,   339,    -1,   333,    -1,   334,    -1,   344,    -1,   345,
      -1,   346,    -1,   348,    -1,   349,    -1,   363,    -1,   364,
      -1,   367,    -1,   368,    -1,   369,    -1,   371,    -1,   372,
      -1,   374,    -1,   373,    -1,   375,    -1,   376,    -1,   381,
      -1,   382,    -1,   384,    -1,   386,    -1,   387,    -1,   388,
      -1,   389,    -1,   390,    -1,   392,    -1,   393,    -1,   394,
      -1,   397,    -1,   401,    -1,   402,    -1,   404,    -1,   403,
      -1,   405,    -1,   408,    -1,   409,    -1,   410,    -1,   411,
      -1,   412,    -1,   414,    -1,   417,    -1,   419,    -1,   422,
      -1,   426,    -1,   429,    -1,   430,    -1,   435,    -1,   436,
      -1,   437,    -1,   438,    -1,   439,    -1,   440,    -1,   442,
      -1,   443,    -1,   445,    -1,   451,    -1,   450,    -1,   452,
      -1,   464,    -1,   457,    -1,   461,    -1,   466,    -1,   468,
      -1,   471,    -1,   472,    -1,   480,    -1,   479,    -1,   482,
      -1,   485,    -1,   488,    -1,   490,    -1,   494,    -1,   496,
      -1,   497,    -1,   498,    -1,   499,    -1,   501,    -1,   500,
      -1,   504,    -1,   505,    -1,   506,    -1,   507,    -1,   514,
      -1,   509,    -1,   513,    -1,   510,    -1,   515,    -1,   516,
      -1,   519,    -1,   520,    -1,   531,    -1,   532,    -1,   522,
      -1,   523,    -1,   524,    -1,   525,    -1,   537,    -1,   538,
      -1,   539,    -1,   185,    -1,   541,    -1,   542,    -1,   545,
      -1,   544,    -1,   551,    -1,   554,    -1,   558,    -1,   559,
      -1,   569,    -1,   573,    -1,   566,    -1,   575,    -1,   574,
      -1,   576,    -1,   583,    -1,   586,    -1,   588,    -1,   591,
      -1,    -1,   455,  1365,  1364,  1366,    -1,    -1,   353,    -1,
    1367,    -1,  1366,   604,  1367,    -1,    -1,  1368,  1373,    -1,
    1370,    -1,   191,    -1,   259,    -1,   452,    -1,    -1,   348,
      -1,    -1,   191,    -1,   259,    -1,   452,    -1,    -1,   191,
     610,    -1,   259,   610,    -1,   452,   610,    -1,  1374,    -1,
    1370,  1375,    -1,  1369,  1376,  1238,  1379,    -1,  1369,   531,
     234,   250,  1377,    -1,   609,  1359,  1238,  1072,    -1,   609,
     609,  1372,  1376,  1238,  1379,    -1,   911,   916,    -1,   322,
    1238,  1072,    -1,   322,   913,   918,    -1,   371,  1238,  1378,
      -1,   371,   180,  1360,  1238,  1378,    -1,  1357,    -1,  1357,
     610,  1357,    -1,   119,   610,  1357,    -1,   398,   541,    -1,
     398,    74,    -1,   419,   398,    -1,   450,    -1,   518,    -1,
     371,   602,   518,   603,    -1,   346,   602,   518,   603,    -1,
    1072,    -1,   119,    -1,   347,    -1,    12,    -1,    33,    -1,
      -1,   262,  1382,  1381,  1383,    -1,   512,    -1,   509,    -1,
    1384,    -1,  1383,   604,  1384,    -1,  1350,  1163,  1385,    -1,
     398,    -1,   585,    -1,   270,   585,    -1,   398,   259,    -1,
      -1,   552,  1387,  1382,    -1,   197,  1350,   350,  1163,    -1,
     197,  1352,    65,    -1,    -1,   197,  1352,   398,  1389,  1390,
    1165,  1182,    -1,  1391,    -1,  1357,  1392,    -1,   173,    -1,
     332,    -1,   173,    -1,   332,    -1,   382,    -1,   243,    -1,
      -1,  1394,  1393,   602,  1243,   603,    -1,   152,    -1,   186,
      -1,   244,    -1,   196,    -1,   271,    -1,   432,   659,  1396,
      -1,  1400,   347,  1399,  1411,   182,  1413,    -1,  1400,   347,
     185,  1411,   182,  1413,    -1,  1400,   347,   385,  1411,   182,
    1413,    -1,    12,  1401,   604,   192,   353,   182,  1413,    -1,
     390,   347,  1360,   182,  1413,    -1,   192,   659,  1398,    -1,
    1400,   347,  1399,  1411,   529,  1413,  1418,  1419,    -1,  1400,
     347,   185,  1411,   529,  1413,  1418,  1419,    -1,  1400,   347,
     385,  1411,   529,  1413,  1418,  1419,    -1,   390,   347,  1360,
     529,  1413,  1420,    -1,    -1,   512,    -1,  1402,    -1,    12,
    1401,    -1,    -1,   384,    -1,  1403,    -1,  1402,   604,  1403,
      -1,    -1,   447,  1404,  1415,    -1,    -1,   223,  1405,  1415,
      -1,    -1,   555,  1406,  1415,    -1,    -1,   406,  1407,  1415,
      -1,   123,    -1,   557,    -1,   217,    -1,    13,    -1,    94,
      -1,   136,    -1,   161,    -1,   414,    -1,   461,    -1,   386,
      -1,   172,    -1,   192,   353,    -1,   460,   103,    -1,   504,
      -1,    94,   515,   509,    -1,   262,   509,    -1,   422,   465,
      -1,   422,    64,    -1,    94,   573,    -1,   460,   573,    -1,
      94,   436,    -1,    13,   436,    -1,    94,   558,    -1,   159,
      -1,   533,    -1,    94,   510,    -1,    -1,    16,    -1,  1410,
    1408,  1409,    -1,  1410,    -1,   499,   518,    -1,   235,   518,
      -1,    62,   518,    -1,   597,    -1,  1357,   610,   597,    -1,
     597,   610,   597,    -1,  1350,    -1,  1360,    -1,  1412,   604,
    1360,    -1,  1414,    -1,  1413,   604,  1414,    -1,  1360,   210,
      46,   518,    -1,  1360,   210,    46,   371,   518,    -1,  1360,
     210,   580,  1359,    -1,  1360,   210,   580,  1359,    18,  1354,
      -1,  1360,    -1,    -1,   602,  1416,   603,    -1,  1416,   604,
    1417,    -1,  1417,    -1,  1357,    -1,    -1,   423,  1409,    -1,
     423,   486,    -1,   423,   586,    -1,   423,   334,    -1,    -1,
     580,  1421,    -1,    -1,   580,   192,   353,    -1,  1421,  1422,
      -1,  1422,    -1,   192,   353,    -1,   291,  1187,    -1,   295,
    1187,    -1,   290,  1187,    -1,   296,  1187,    -1,    -1,    30,
    1424,  1425,    -1,    -1,   583,    -1,    -1,    16,   338,    55,
      -1,    16,    55,    -1,    -1,   413,    -1,   338,   413,    -1,
      -1,   441,    -1,    75,  1425,  1426,  1427,    -1,   434,  1425,
    1426,  1427,    -1,   434,  1425,   529,  1428,  1357,    -1,   441,
    1357,    -1,   413,   441,  1357,    -1,    -1,  1434,    -1,    -1,
     549,  1441,  1435,  1052,    -1,    -1,  1434,    -1,  1438,    -1,
      -1,  1438,    -1,    -1,  1439,  1440,    -1,  1177,  1181,    -1,
    1183,    -1,    -1,   132,    -1,    12,    -1,   447,  1133,    -1,
     602,  1054,   603,    -1,  1442,  1437,    -1,    -1,  1443,   549,
    1441,  1444,  1442,  1437,    -1,  1446,  1443,  1447,    -1,    -1,
      -1,    -1,  1449,    -1,  1449,  1450,    -1,  1450,    -1,   495,
      -1,   202,    -1,   132,    -1,   483,    -1,   478,    -1,   479,
      -1,   481,    -1,    12,    -1,  1456,  1452,    -1,  1455,  1453,
      -1,  1457,  1454,  1461,    -1,  1461,    -1,  1469,    -1,  1480,
      -1,  1474,    -1,   646,    -1,  1461,    -1,  1469,    -1,  1480,
      -1,  1474,    -1,  1473,    -1,   646,    -1,  1455,    -1,  1456,
      -1,    -1,   120,   152,  1360,    -1,  1458,    -1,  1458,  1459,
      -1,  1459,    -1,   358,   421,    -1,    11,   152,   542,    -1,
      11,   152,   303,    -1,    11,   152,   516,    -1,    -1,   484,
     446,   120,    -1,   484,   446,   229,    -1,    -1,  1460,   573,
    1350,  1462,  1463,    18,  1465,    -1,    -1,   602,  1464,   603,
      -1,  1357,    -1,  1464,   604,  1357,    -1,    -1,  1466,  1467,
    1468,    -1,   447,  1055,    -1,   602,  1053,   603,  1436,    -1,
      -1,   580,    61,   353,    -1,   580,    51,    61,   353,    -1,
     580,   259,    61,   353,    -1,    -1,    -1,    -1,   533,  1068,
     660,   754,   755,   347,  1068,  1470,  1350,   180,  1068,  1471,
     141,   439,  1472,   704,    -1,    10,  1068,   185,  1357,   430,
     876,   470,  1354,    -1,  1068,   185,  1357,   430,   876,   470,
    1354,    -1,    -1,    -1,    -1,    -1,    -1,  1068,   185,   660,
     602,  1475,   671,   603,  1476,   430,  1477,   909,  1478,   662,
    1479,   704,    -1,    -1,    -1,    -1,    -1,   385,  1068,   660,
    1481,   602,  1482,   675,   603,  1483,   662,  1484,   704,    -1,
     587,  1487,  1486,  1488,    -1,   587,   146,  1486,  1490,    -1,
     587,   380,  1486,    -1,   587,    75,  1486,  1489,    -1,   587,
     434,  1486,    -1,   587,   402,    -1,  1338,    -1,  1338,   604,
    1338,    -1,  1338,   604,  1338,   604,  1187,    -1,    30,    -1,
     489,    -1,    -1,   237,    -1,   429,    -1,    -1,   349,   372,
      -1,    -1,    -1,   505,  1491,  1492,    -1,    -1,   180,   306,
      -1,   225,   374,  1357,   470,  1354,    -1,   548,   374,  1357,
      -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1656,  1656,  1669,  1668,  1693,  1700,  1702,  1706,  1707,
    1712,  1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,
    1722,  1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,
    1732,  1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,  1741,
    1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,
    1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,
    1762,  1766,  1776,  1777,  1781,  1791,  1798,  1809,  1808,  1819,
    1821,  1825,  1826,  1830,  1843,  1842,  1862,  1861,  1878,  1879,
    1883,  1887,  1891,  1895,  1899,  1903,  1908,  1912,  1916,  1920,
    1924,  1928,  1934,  1965,  1970,  1973,  1975,  1976,  1980,  1986,
    1990,  2006,  2010,  2022,  2021,  2063,  2062,  2074,  2072,  2085,
    2083,  2095,  2094,  2107,  2106,  2114,  2118,  2122,  2126,  2133,
    2146,  2147,  2151,  2155,  2159,  2163,  2167,  2171,  2175,  2183,
    2182,  2214,  2213,  2220,  2227,  2228,  2234,  2240,  2250,  2256,
    2262,  2264,  2271,  2272,  2276,  2282,  2291,  2292,  2300,  2300,
    2358,  2359,  2360,  2361,  2362,  2363,  2364,  2365,  2366,  2367,
    2368,  2369,  2370,  2375,  2389,  2405,  2424,  2425,  2429,  2430,
    2435,  2437,  2439,  2441,  2443,  2445,  2447,  2453,  2454,  2455,
    2459,  2463,  2471,  2470,  2483,  2485,  2488,  2490,  2494,  2498,
    2505,  2507,  2511,  2512,  2517,  2536,  2562,  2564,  2568,  2569,
    2573,  2599,  2600,  2601,  2602,  2606,  2607,  2611,  2612,  2617,
    2620,  2647,  2646,  2711,  2727,  2726,  2774,  2800,  2800,  2823,
    2824,  2829,  2831,  2836,  2859,  2872,  2876,  2893,  2894,  2898,
    2902,  2911,  2918,  2925,  2935,  2950,  2973,  2979,  2980,  2986,
    2989,  2993,  3001,  3021,  3023,  3041,  3047,  3049,  3051,  3053,
    3055,  3057,  3059,  3061,  3063,  3065,  3067,  3069,  3074,  3089,
    3104,  3122,  3123,  3127,  3128,  3129,  3130,  3131,  3132,  3133,
    3134,  3135,  3136,  3137,  3138,  3139,  3144,  3143,  3150,  3150,
    3207,  3206,  3235,  3235,  3249,  3302,  3345,  3366,  3365,  3387,
    3406,  3408,  3409,  3413,  3433,  3456,  3458,  3474,  3456,  3493,
    3495,  3496,  3500,  3501,  3506,  3512,  3505,  3533,  3532,  3548,
    3549,  3553,  3554,  3559,  3563,  3558,  3584,  3588,  3583,  3607,
    3617,  3622,  3621,  3657,  3658,  3663,  3662,  3695,  3695,  3710,
    3709,  3745,  3757,  3759,  3756,  3786,  3785,  3806,  3808,  3813,
    3815,  3817,  3834,  3839,  3845,  3852,  3853,  3861,  3867,  3876,
    3882,  3888,  3889,  3893,  3893,  3898,  3899,  3900,  3904,  3905,
    3906,  3910,  3914,  3915,  3916,  3920,  3921,  3922,  3923,  3924,
    3925,  3926,  3927,  3931,  3935,  3936,  3937,  3941,  3942,  3943,
    3944,  3945,  3949,  3953,  3954,  3955,  3959,  3960,  3961,  3962,
    3963,  3964,  3965,  3969,  3973,  3974,  3975,  3979,  3980,  3981,
    3986,  3994,  4002,  4010,  4022,  4034,  4039,  4044,  4052,  4060,
    4068,  4076,  4084,  4092,  4100,  4113,  4126,  4139,  4141,  4145,
    4150,  4163,  4164,  4215,  4216,  4219,  4234,  4252,  4257,  4255,
    4262,  4264,  4263,  4267,  4266,  4272,  4309,  4310,  4315,  4314,
    4333,  4352,  4351,  4368,  4372,  4380,  4379,  4382,  4384,  4386,
    4388,  4393,  4394,  4399,  4400,  4404,  4405,  4409,  4428,  4438,
    4449,  4458,  4459,  4475,  4477,  4476,  4481,  4479,  4490,  4491,
    4495,  4513,  4529,  4530,  4546,  4561,  4583,  4584,  4589,  4588,
    4612,  4622,  4644,  4643,  4661,  4660,  4680,  4702,  4706,  4735,
    4747,  4748,  4753,  4764,  4752,  4789,  4790,  4794,  4807,  4828,
    4841,  4867,  4868,  4873,  4872,  4909,  4914,  4915,  4919,  4920,
    4924,  4926,  4932,  4934,  4936,  4938,  4940,  4942,  4952,  4967,
    4951,  4981,  4982,  4986,  4987,  4991,  4992,  4996,  4997,  5001,
    5002,  5006,  5007,  5011,  5015,  5016,  5019,  5021,  5025,  5026,
    5030,  5031,  5032,  5036,  5042,  5047,  5052,  5057,  5062,  5067,
    5072,  5087,  5093,  5098,  5103,  5108,  5114,  5113,  5139,  5140,
    5141,  5146,  5151,  5156,  5158,  5160,  5162,  5168,  5176,  5194,
    5211,  5234,  5248,  5249,  5250,  5251,  5252,  5253,  5257,  5258,
    5259,  5263,  5264,  5268,  5269,  5270,  5271,  5276,  5283,  5284,
    5288,  5289,  5293,  5294,  5301,  5306,  5312,  5318,  5324,  5342,
    5348,  5350,  5354,  5358,  5359,  5363,  5368,  5367,  5390,  5391,
    5392,  5393,  5398,  5402,  5407,  5412,  5416,  5421,  5426,  5432,
    5437,  5443,  5447,  5452,  5457,  5459,  5461,  5463,  5476,  5478,
    5483,  5488,  5500,  5505,  5510,  5515,  5517,  5519,  5521,  5523,
    5525,  5527,  5529,  5532,  5531,  5536,  5535,  5539,  5541,  5550,
    5551,  5552,  5557,  5558,  5559,  5560,  5561,  5565,  5569,  5570,
    5574,  5575,  5579,  5580,  5581,  5582,  5583,  5587,  5588,  5589,
    5590,  5591,  5595,  5600,  5602,  5608,  5609,  5611,  5616,  5625,
    5626,  5630,  5631,  5635,  5636,  5637,  5641,  5642,  5643,  5644,
    5647,  5648,  5652,  5653,  5657,  5658,  5662,  5663,  5667,  5668,
    5669,  5670,  5677,  5678,  5684,  5690,  5696,  5702,  5703,  5720,
    5741,  5747,  5752,  5753,  5757,  5765,  5769,  5770,  5774,  5775,
    5779,  5788,  5792,  5793,  5797,  5808,  5809,  5813,  5814,  5818,
    5819,  5824,  5825,  5829,  5836,  5845,  5853,  5864,  5865,  5866,
    5867,  5868,  5869,  5874,  5882,  5883,  5887,  5889,  5893,  5905,
    5906,  5910,  5917,  5930,  5931,  5933,  5935,  5941,  5946,  5952,
    5958,  5965,  5975,  5976,  5977,  5978,  5979,  5983,  5987,  5988,
    5992,  5993,  5997,  5998,  6002,  6003,  6004,  6008,  6009,  6013,
    6017,  6030,  6042,  6043,  6047,  6048,  6052,  6053,  6057,  6058,
    6062,  6063,  6067,  6068,  6072,  6073,  6077,  6078,  6082,  6084,
    6088,  6089,  6093,  6097,  6098,  6111,  6112,  6113,  6117,  6118,
    6122,  6128,  6142,  6143,  6147,  6148,  6152,  6153,  6161,  6160,
    6199,  6198,  6212,  6224,  6223,  6242,  6241,  6260,  6259,  6278,
    6272,  6292,  6291,  6324,  6329,  6334,  6339,  6344,  6354,  6355,
    6356,  6357,  6361,  6362,  6374,  6375,  6379,  6380,  6383,  6385,
    6386,  6387,  6389,  6391,  6392,  6401,  6402,  6406,  6415,  6413,
    6427,  6441,  6440,  6454,  6452,  6466,  6473,  6484,  6488,  6495,
    6499,  6504,  6503,  6519,  6521,  6526,  6534,  6533,  6549,  6553,
    6552,  6564,  6565,  6569,  6584,  6585,  6589,  6598,  6602,  6607,
    6612,  6611,  6622,  6631,  6621,  6646,  6655,  6659,  6668,  6677,
    6683,  6689,  6698,  6707,  6726,  6747,  6752,  6756,  6764,  6765,
    6769,  6770,  6774,  6775,  6776,  6780,  6781,  6782,  6786,  6787,
    6788,  6789,  6798,  6797,  6808,  6816,  6815,  6825,  6834,  6843,
    6844,  6851,  6851,  6857,  6858,  6862,  6863,  6864,  6868,  6869,
    6885,  6886,  6891,  6890,  6902,  6903,  6904,  6909,  6908,  6930,
    6931,  6935,  6936,  6940,  6941,  6942,  6947,  6946,  6968,  6977,
    6976,  7003,  7004,  7008,  7009,  7013,  7014,  7015,  7016,  7017,
    7018,  7023,  7022,  7044,  7045,  7046,  7051,  7050,  7056,  7063,
    7068,  7076,  7077,  7081,  7095,  7094,  7107,  7108,  7112,  7113,
    7117,  7127,  7137,  7138,  7143,  7142,  7153,  7154,  7158,  7159,
    7163,  7173,  7184,  7183,  7191,  7191,  7202,  7203,  7208,  7209,
    7218,  7227,  7228,  7232,  7237,  7242,  7247,  7252,  7251,  7271,
    7279,  7271,  7286,  7287,  7288,  7289,  7290,  7294,  7301,  7308,
    7310,  7321,  7322,  7326,  7327,  7355,  7385,  7387,  7393,  7403,
    7404,  7405,  7420,  7427,  7453,  7459,  7465,  7466,  7467,  7468,
    7469,  7473,  7474,  7479,  7530,  7537,  7580,  7586,  7592,  7598,
    7604,  7610,  7616,  7622,  7626,  7632,  7638,  7644,  7650,  7656,
    7660,  7666,  7676,  7682,  7690,  7696,  7706,  7712,  7721,  7731,
    7737,  7747,  7753,  7762,  7766,  7772,  7778,  7784,  7790,  7796,
    7802,  7808,  7814,  7820,  7826,  7832,  7838,  7844,  7850,  7854,
    7855,  7859,  7860,  7864,  7865,  7869,  7870,  7874,  7875,  7876,
    7877,  7878,  7879,  7883,  7884,  7888,  7889,  7890,  7891,  7892,
    7893,  7905,  7906,  7907,  7908,  7909,  7915,  7919,  7925,  7931,
    7937,  7943,  7945,  7952,  7959,  7965,  7967,  7976,  7983,  7991,
    7997,  8004,  8010,  8024,  8031,  8047,  8053,  8059,  8067,  8073,
    8079,  8085,  8091,  8106,  8118,  8124,  8130,  8136,  8142,  8148,
    8154,  8160,  8166,  8172,  8178,  8184,  8190,  8196,  8202,  8208,
    8214,  8222,  8243,  8250,  8256,  8263,  8270,  8277,  8284,  8291,
    8297,  8303,  8310,  8317,  8323,  8330,  8336,  8342,  8348,  8354,
    8360,  8378,  8388,  8394,  8400,  8407,  8414,  8429,  8435,  8441,
    8447,  8453,  8460,  8466,  8472,  8478,  8484,  8496,  8502,  8508,
    8514,  8520,  8532,  8538,  8554,  8560,  8567,  8574,  8581,  8588,
    8595,  8599,  8619,  8618,  8686,  8718,  8720,  8725,  8726,  8730,
    8731,  8735,  8736,  8740,  8747,  8755,  8781,  8787,  8793,  8799,
    8805,  8811,  8820,  8827,  8829,  8826,  8836,  8847,  8853,  8859,
    8865,  8871,  8877,  8883,  8889,  8895,  8902,  8901,  8920,  8919,
    8934,  8944,  8952,  8968,  8969,  8974,  8979,  8984,  8987,  9000,
    8999,  9016,  9018,  9020,  9022,  9024,  9026,  9028,  9030,  9032,
    9034,  9036,  9041,  9042,  9046,  9053,  9061,  9062,  9066,  9073,
    9081,  9082,  9086,  9087,  9091,  9099,  9110,  9111,  9120,  9131,
    9132,  9138,  9139,  9159,  9161,  9165,  9163,  9180,  9178,  9196,
    9194,  9201,  9210,  9208,  9226,  9225,  9235,  9246,  9244,  9263,
    9262,  9273,  9284,  9285,  9286,  9298,  9298,  9312,  9352,  9403,
    9407,  9412,  9404,  9424,  9444,  9452,  9444,  9461,  9460,  9483,
    9500,  9483,  9507,  9511,  9537,  9538,  9543,  9546,  9547,  9548,
    9552,  9553,  9558,  9557,  9563,  9562,  9570,  9571,  9574,  9576,
    9576,  9580,  9580,  9585,  9586,  9590,  9592,  9597,  9598,  9602,
    9613,  9626,  9627,  9628,  9629,  9630,  9631,  9632,  9633,  9634,
    9635,  9636,  9637,  9641,  9642,  9643,  9644,  9645,  9646,  9647,
    9648,  9649,  9653,  9654,  9655,  9656,  9659,  9661,  9662,  9666,
    9667,  9675,  9677,  9681,  9683,  9682,  9696,  9699,  9698,  9713,
    9719,  9734,  9736,  9740,  9742,  9747,  9748,  9768,  9793,  9797,
    9798,  9802,  9815,  9817,  9822,  9821,  9856,  9858,  9863,  9864,
    9865,  9870,  9876,  9880,  9881,  9885,  9892,  9899,  9906,  9916,
    9949,  9953,  9959,  9965,  9975,  9979,  9989,  9990,  9991,  9992,
    9993,  9994,  9998,  9999, 10000, 10001, 10002, 10006, 10007, 10008,
   10009, 10010, 10014, 10015, 10016, 10017, 10021, 10026, 10027, 10030,
   10033, 10032, 10063, 10064, 10068, 10069, 10073, 10085, 10085, 10095,
   10096, 10100, 10119, 10152, 10151, 10164, 10172, 10163, 10174, 10186,
   10198, 10197, 10215, 10214, 10225, 10225, 10241, 10248, 10271, 10292,
   10304, 10309, 10308, 10318, 10324, 10331, 10336, 10341, 10351, 10352,
   10356, 10367, 10368, 10372, 10383, 10384, 10388, 10389, 10397, 10405,
   10396, 10415, 10422, 10414, 10432, 10444, 10445, 10453, 10457, 10458,
   10469, 10470, 10474, 10483, 10484, 10485, 10487, 10486, 10497, 10498,
   10502, 10503, 10505, 10504, 10508, 10507, 10513, 10514, 10518, 10519,
   10523, 10533, 10534, 10538, 10539, 10544, 10543, 10557, 10558, 10562,
   10567, 10575, 10576, 10584, 10586, 10586, 10594, 10602, 10593, 10624,
   10625, 10629, 10637, 10638, 10642, 10652, 10653, 10660, 10659, 10675,
   10674, 10686, 10685, 10697, 10696, 10710, 10711, 10715, 10728, 10744,
   10745, 10749, 10750, 10754, 10755, 10756, 10761, 10760, 10782, 10784,
   10787, 10789, 10792, 10793, 10796, 10800, 10804, 10808, 10812, 10816,
   10820, 10824, 10828, 10836, 10839, 10849, 10848, 10861, 10868, 10876,
   10884, 10892, 10900, 10908, 10915, 10917, 10919, 10928, 10932, 10937,
   10936, 10942, 10941, 10946, 10955, 10962, 10967, 10972, 10977, 10979,
   10981, 10983, 10985, 10987, 10994, 11002, 11004, 11012, 11019, 11026,
   11036, 11043, 11049, 11058, 11066, 11070, 11074, 11081, 11088, 11094,
   11101, 11108, 11113, 11118, 11126, 11128, 11130, 11135, 11136, 11139,
   11141, 11145, 11146, 11150, 11151, 11155, 11156, 11160, 11161, 11165,
   11166, 11169, 11171, 11178, 11189, 11188, 11201, 11200, 11210, 11211,
   11215, 11216, 11217, 11221, 11222, 11223, 11238, 11237, 11250, 11259,
   11249, 11261, 11265, 11266, 11280, 11281, 11286, 11288, 11290, 11292,
   11294, 11296, 11298, 11300, 11302, 11304, 11306, 11308, 11310, 11312,
   11314, 11319, 11320, 11325, 11324, 11334, 11335, 11339, 11340, 11341,
   11346, 11345, 11356, 11360, 11364, 11376, 11386, 11387, 11388, 11394,
   11406, 11418, 11428, 11438, 11405, 11446, 11447, 11451, 11452, 11456,
   11457, 11469, 11473, 11474, 11475, 11478, 11480, 11484, 11485, 11489,
   11494, 11501, 11506, 11513, 11515, 11519, 11520, 11524, 11529, 11537,
   11538, 11541, 11543, 11551, 11553, 11557, 11558, 11559, 11563, 11565,
   11570, 11571, 11580, 11581, 11585, 11586, 11590, 11603, 11627, 11639,
   11650, 11669, 11677, 11689, 11704, 11725, 11726, 11727, 11735, 11736,
   11737, 11744, 11750, 11756, 11762, 11768, 11797, 11825, 11826, 11827,
   11831, 11841, 11851, 11857, 11866, 11881, 11882, 11886, 11895, 11911,
   11915, 11962, 11966, 11984, 11988, 12067, 12092, 12123, 12124, 12140,
   12150, 12154, 12160, 12166, 12176, 12182, 12191, 12201, 12202, 12232,
   12248, 12264, 12281, 12282, 12293, 12294, 12305, 12306, 12307, 12311,
   12328, 12350, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372,
   12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382,
   12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392,
   12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402,
   12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412,
   12413, 12414, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431,
   12432, 12433, 12434, 12435, 12436, 12437, 12438, 12439, 12440, 12441,
   12442, 12443, 12444, 12445, 12446, 12447, 12448, 12449, 12450, 12451,
   12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461,
   12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471,
   12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481,
   12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491,
   12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501,
   12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511,
   12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521,
   12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531,
   12532, 12533, 12534, 12535, 12536, 12537, 12538, 12539, 12540, 12541,
   12542, 12543, 12544, 12545, 12546, 12547, 12548, 12549, 12550, 12551,
   12552, 12553, 12554, 12555, 12556, 12557, 12558, 12559, 12560, 12561,
   12562, 12563, 12564, 12565, 12566, 12567, 12568, 12569, 12570, 12571,
   12572, 12573, 12574, 12575, 12576, 12577, 12578, 12579, 12580, 12581,
   12582, 12583, 12584, 12585, 12586, 12587, 12588, 12589, 12590, 12591,
   12592, 12593, 12594, 12595, 12596, 12597, 12598, 12599, 12600, 12601,
   12602, 12603, 12604, 12605, 12606, 12607, 12608, 12609, 12610, 12611,
   12612, 12613, 12614, 12615, 12616, 12617, 12618, 12619, 12620, 12621,
   12622, 12623, 12624, 12625, 12626, 12627, 12628, 12629, 12630, 12631,
   12632, 12633, 12634, 12635, 12636, 12637, 12638, 12639, 12640, 12641,
   12642, 12643, 12644, 12645, 12646, 12647, 12648, 12649, 12650, 12651,
   12652, 12653, 12654, 12655, 12656, 12657, 12658, 12659, 12660, 12661,
   12662, 12663, 12664, 12665, 12666, 12667, 12668, 12669, 12670, 12671,
   12672, 12673, 12674, 12675, 12676, 12677, 12678, 12679, 12680, 12681,
   12682, 12683, 12684, 12685, 12686, 12687, 12688, 12689, 12690, 12691,
   12692, 12693, 12694, 12695, 12696, 12697, 12698, 12699, 12700, 12701,
   12708, 12707, 12722, 12723, 12727, 12728, 12732, 12732, 12814, 12815,
   12816, 12817, 12821, 12822, 12826, 12827, 12828, 12829, 12833, 12834,
   12835, 12836, 12840, 12841, 12845, 12887, 12906, 12917, 12930, 12944,
   12959, 12978, 13005, 13018, 13045, 13088, 13102, 13103, 13104, 13105,
   13109, 13110, 13119, 13131, 13132, 13133, 13139, 13145, 13157, 13156,
   13172, 13173, 13177, 13178, 13182, 13195, 13196, 13197, 13198, 13203,
   13202, 13222, 13234, 13247, 13246, 13279, 13280, 13284, 13285, 13289,
   13290, 13291, 13292, 13294, 13293, 13306, 13307, 13308, 13309, 13310,
   13316, 13321, 13327, 13338, 13349, 13353, 13363, 13368, 13375, 13387,
   13399, 13408, 13410, 13414, 13415, 13422, 13424, 13428, 13429, 13434,
   13433, 13437, 13436, 13440, 13439, 13443, 13442, 13445, 13446, 13447,
   13448, 13449, 13450, 13451, 13452, 13453, 13454, 13455, 13456, 13457,
   13458, 13459, 13460, 13461, 13462, 13463, 13464, 13465, 13466, 13467,
   13468, 13469, 13470, 13474, 13475, 13479, 13480, 13484, 13494, 13504,
   13517, 13532, 13545, 13558, 13570, 13575, 13583, 13588, 13596, 13625,
   13632, 13640, 13648, 13654, 13658, 13662, 13663, 13667, 13694, 13696,
   13700, 13704, 13708, 13715, 13716, 13720, 13721, 13725, 13726, 13730,
   13731, 13737, 13743, 13749, 13759, 13758, 13768, 13769, 13774, 13775,
   13776, 13781, 13782, 13783, 13787, 13788, 13792, 13804, 13813, 13823,
   13832, 13846, 13847, 13852, 13851, 13867, 13868, 13869, 13872, 13874,
   13878, 13878, 13902, 13903, 13907, 13908, 13909, 13913, 13917, 13924,
   13927, 13925, 13941, 13948, 13969, 13986, 13988, 13992, 13993, 13997,
   13998, 14006, 14007, 14008, 14009, 14015, 14021, 14031, 14033, 14035,
   14040, 14041, 14042, 14043, 14044, 14048, 14049, 14050, 14051, 14052,
   14053, 14063, 14064, 14069, 14082, 14095, 14097, 14099, 14104, 14109,
   14111, 14113, 14119, 14120, 14122, 14128, 14127, 14145, 14146, 14150,
   14155, 14163, 14163, 14188, 14189, 14194, 14195, 14197, 14199, 14217,
   14223, 14228, 14210, 14290, 14308, 14333, 14365, 14369, 14377, 14400,
   14329, 14465, 14489, 14498, 14506, 14464, 14527, 14531, 14535, 14539,
   14543, 14547, 14554, 14561, 14568, 14578, 14579, 14583, 14584, 14585,
   14589, 14590, 14595, 14597, 14596, 14602, 14603, 14607, 14617
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM",
  "ANY_SYM", "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTHORS_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM",
  "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR",
  "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM", "BOOL_SYM",
  "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM", "CALL_SYM",
  "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET", "CHAR_SYM", "CHECKSUM_SYM",
  "CHECK_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM",
  "COALESCE", "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS",
  "COLUMN_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM",
  "CONTRIBUTORS_SYM", "CONVERT_SYM", "COUNT_SYM", "CPU_SYM", "CREATE",
  "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_USER", "CURSOR_SYM",
  "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL",
  "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT", "DEFINER_SYM", "DELAYED_SYM",
  "DELAY_KEY_WRITE_SYM", "DELETE_SYM", "DESC", "DESCRIBE", "DES_KEY_FILE",
  "DETERMINISTIC_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXECUTE_SYM", "EXISTS", "EXIT_SYM",
  "EXPANSION_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM",
  "FALSE_SYM", "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM",
  "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM", "FLUSH_SYM",
  "FORCE_SYM", "FOREIGN", "FOR_SYM", "FOUND_SYM", "FROM", "FULL",
  "FULLTEXT_SYM", "FUNCTION_SYM", "GE", "GENERAL", "GEOMETRYCOLLECTION",
  "GEOMETRY_SYM", "GET_FORMAT", "GLOBAL_SYM", "GRANT", "GRANTS",
  "GROUP_SYM", "GROUP_CONCAT_SYM", "GT_SYM", "HANDLER_SYM", "HASH_SYM",
  "HAVING", "HELP_SYM", "HEX_NUM", "HIGH_PRIORITY", "HOST_SYM",
  "HOSTS_SYM", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED",
  "IF", "IGNORE_SYM", "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES",
  "INDEX_SYM", "INFILE", "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM",
  "INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM", "IO_SYM",
  "IPC_SYM", "IS", "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM", "LANGUAGE_SYM",
  "LAST_SYM", "LE", "LEADING", "LEAVES", "LEAVE_SYM", "LEFT", "LESS_SYM",
  "LEVEL_SYM", "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES",
  "LINESTRING", "LIST_SYM", "LOAD", "LOCAL_SYM", "LOCATOR_SYM",
  "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB",
  "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM",
  "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM",
  "MASTER_USER_SYM", "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH",
  "MAX_CONNECTIONS_PER_HOUR", "MAX_QUERIES_PER_HOUR", "MAX_ROWS",
  "MAX_SIZE_SYM", "MAX_SYM", "MAX_UPDATES_PER_HOUR",
  "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM", "MEDIUMBLOB", "MEDIUMINT",
  "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM",
  "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG",
  "NULL_SYM", "NUM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "OLD_PASSWORD", "ON", "ONE_SHOT_SYM", "ONE_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM", "ORDER_SYM",
  "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OWNER_SYM",
  "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM", "PARTIAL",
  "PARTITIONING_SYM", "PARTITIONS_SYM", "PARTITION_SYM", "PASSWORD",
  "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "POSITION_SYM", "PRECISION", "PREPARE_SYM", "PRESERVE_SYM",
  "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM", "PURGE",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "REBUILD_SYM",
  "RECOVER_SYM", "REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM",
  "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD",
  "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPEAT_SYM", "REPLACE", "REPLICATION", "REQUIRE_SYM", "RESET_SYM",
  "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT", "RESUME_SYM",
  "RETURNS_SYM", "RETURN_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM",
  "ROLLUP_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "SQL_CACHE_SYM",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STARTING", "STARTS_SYM", "START_SYM",
  "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM",
  "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM",
  "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING",
  "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM",
  "SYSDATE", "TABLES", "TABLESPACE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB",
  "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR", "VARIABLES",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH",
  "WITH_CUBE_SYM", "WITH_ROLLUP_SYM", "WORK_SYM", "WRAPPER_SYM",
  "WRITE_SYM", "X509_SYM", "XA_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "'('", "')'", "','", "'!'", "'{'", "'}'", "';'", "'@'",
  "'.'", "':'", "$accept", "query", "@1", "opt_end_of_input",
  "verb_clause", "statement", "deallocate", "deallocate_or_drop",
  "prepare", "prepare_src", "execute", "@2", "execute_using",
  "execute_var_list", "execute_var_ident", "help", "@3", "change", "@4",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "master_file_def", "create", "@5", "@6", "@7", "@8", "@9", "@10",
  "server_def", "server_options_list", "server_option", "event_tail",
  "@11", "ev_schedule_time", "@12", "opt_ev_status", "ev_starts",
  "ev_ends", "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "@13", "ev_sql_stmt_inner", "clear_privileges", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call", "@14", "opt_sp_cparam_list", "opt_sp_cparams",
  "sp_cparams", "sp_fdparam_list", "sp_fdparams", "sp_init_param",
  "sp_fdparam", "sp_pdparam_list", "sp_pdparams", "sp_pdparam",
  "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl",
  "@15", "@16", "sp_cursor_stmt", "@17", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "sp_decl_idents", "sp_opt_default", "sp_proc_stmt",
  "sp_proc_stmt_if", "@18", "sp_proc_stmt_statement", "@19",
  "sp_proc_stmt_return", "@20", "sp_proc_stmt_unlabeled", "@21",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "@22", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "@23", "@24", "@25", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "@26", "@27",
  "searched_case_stmt", "@28", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "@29", "@30",
  "searched_when_clause", "@31", "@32", "else_clause_opt",
  "sp_labeled_control", "@33", "sp_opt_label", "sp_labeled_block", "@34",
  "sp_unlabeled_block", "@35", "sp_block_content", "@36",
  "sp_unlabeled_control", "@37", "@38", "@39", "trg_action_time",
  "trg_event", "change_tablespace_access", "change_tablespace_info",
  "tablespace_info", "opt_logfile_group_name", "alter_tablespace_info",
  "logfile_group_info", "alter_logfile_group_info", "add_log_file",
  "change_ts_option_list", "@40", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create2",
  "create2a", "@41", "create3", "@42", "@43", "opt_create_partitioning",
  "opt_partitioning", "partitioning", "@44", "have_partitioning",
  "partition_entry", "@45", "partition", "part_type_def", "@46",
  "opt_linear", "part_field_list", "part_field_item_list",
  "part_field_item", "part_column_list", "part_func", "sub_part_func",
  "opt_num_parts", "opt_sub_part", "@47", "@48", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "@49", "part_name",
  "opt_part_values", "@50", "@51", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "@52", "@53",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "@54", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "@55", "@56", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "@57", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "opt_select_from", "udf_type",
  "create_field_list", "field_list", "field_list_item", "column_def",
  "key_def", "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "@58", "type", "@59", "@60", "spatial_type",
  "char", "nchar", "varchar", "nvarchar", "int_type", "real_type",
  "float_options", "precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "ascii", "unicode", "opt_binary", "opt_bin_mod",
  "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "normal_key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique", "fulltext", "spatial",
  "init_key_options", "key_alg", "normal_key_options",
  "fulltext_key_options", "spatial_key_options", "normal_key_opts",
  "spatial_key_opts", "fulltext_key_opts", "key_using_alg", "all_key_opt",
  "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "opt_component",
  "string_list", "alter", "@61", "@62", "@63", "@64", "@65", "@66", "@67",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "@68", "@69", "@70",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "@71", "add_part_extra", "reorg_partition_rule", "@72",
  "reorg_parts_rule", "@73", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item", "@74", "@75", "@76",
  "opt_column", "opt_ignore", "opt_restrict", "opt_place", "opt_to",
  "slave", "@77", "@78", "start", "start_transaction_opts",
  "slave_thread_opts", "@79", "slave_thread_opt_list", "slave_thread_opt",
  "slave_until", "slave_until_opts", "checksum", "@80",
  "opt_checksum_type", "repair", "@81", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "analyze", "@82",
  "binlog_base64_event", "check", "@83", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "optimize", "@84",
  "opt_no_write_to_binlog", "rename", "@85", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "@86",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "@87",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "@88", "cache_keys_spec", "@89",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_init2", "@90",
  "select_part2", "@91", "@92", "select_into", "select_from",
  "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_alias", "optional_braces", "expr", "bool_pri",
  "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "simple_expr", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@93", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "@94", "@95", "@96", "variable",
  "@97", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "in_sum_expr", "@98", "cast_type", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "opt_expr", "opt_else",
  "when_list", "table_ref", "join_table_list", "esc_table_ref",
  "derived_table_list", "join_table", "@99", "@100", "@101", "@102",
  "@103", "@104", "@105", "normal_join", "table_factor", "@106",
  "select_derived_union", "@107", "@108", "select_init2_derived",
  "select_part2_derived", "@109", "@110", "select_derived", "@111",
  "select_derived2", "@112", "@113", "get_select_lex",
  "select_derived_init", "opt_outer", "index_hint_clause",
  "index_hint_type", "index_hint_definition", "@114", "@115",
  "index_hints_list", "opt_index_hints_list", "@116", "opt_key_definition",
  "@117", "opt_key_usage_list", "key_usage_element", "key_usage_list",
  "using_list", "interval", "interval_time_stamp", "date_time_type",
  "table_alias", "opt_table_alias", "opt_all", "where_clause", "@118",
  "having_clause", "@119", "opt_escape", "group_clause", "group_list",
  "olap_opt", "alter_order_clause", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "@120", "order_list", "order_dir",
  "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "real_ulong_num", "ulonglong_num", "real_ulonglong_num", "dec_num_error",
  "dec_num", "procedure_clause", "@121", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "@122",
  "select_var_list", "select_var_ident", "into", "@123",
  "into_destination", "@124", "@125", "do", "@126", "drop", "@127", "@128",
  "@129", "table_list", "table_name", "table_alias_ref_list",
  "table_alias_ref", "if_exists", "opt_temporary", "insert", "@130",
  "@131", "replace", "@132", "@133", "insert_lock_option",
  "replace_lock_option", "insert2", "insert_table", "insert_field_spec",
  "@134", "fields", "insert_values", "@135", "@136", "values_list",
  "ident_eq_list", "ident_eq_value", "equal", "opt_equal", "no_braces",
  "@137", "opt_values", "values", "expr_or_default", "opt_insert_update",
  "@138", "update", "@139", "@140", "update_list", "update_elem",
  "insert_update_list", "insert_update_elem", "opt_low_priority", "delete",
  "@141", "single_multi", "@142", "@143", "@144", "table_wild_list",
  "table_wild_one", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate", "@145", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "@146", "show_param", "@147",
  "@148", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "@149", "@150", "describe_command", "opt_extended_describe",
  "opt_describe_column", "flush", "@151", "flush_options", "@152", "@153",
  "opt_with_read_lock", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "@154", "reset_options", "reset_option",
  "purge", "@155", "purge_options", "purge_option", "kill", "kill_option",
  "use", "load", "@156", "@157", "@158", "@159", "data_or_xml",
  "opt_local", "load_data_lock", "opt_duplicate", "opt_field_term",
  "field_term_list", "field_term", "opt_line_term", "line_term_list",
  "line_term", "opt_xml_rows_identified_by", "opt_ignore_lines",
  "lines_or_rows", "opt_field_or_var_spec", "fields_or_vars",
  "field_or_var", "opt_load_data_set_spec", "load_data_set_list",
  "load_data_set_elem", "text_literal", "text_string", "param_marker",
  "signed_literal", "literal", "NUM_literal", "insert_ident", "table_wild",
  "order_ident", "simple_ident", "simple_ident_nospvar", "simple_ident_q",
  "field_ident", "table_ident", "table_ident_opt_wild", "table_ident_nodb",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident", "label_ident", "ident_or_text",
  "user", "keyword", "keyword_sp", "set", "@160", "opt_option",
  "option_value_list", "option_type_value", "@161", "option_type",
  "option_type2", "opt_var_type", "opt_var_ident_type", "ext_option_value",
  "sys_option_value", "option_value", "internal_variable_name",
  "isolation_types", "text_or_password", "set_expr_or_default", "lock",
  "@162", "table_or_tables", "table_lock_list", "table_lock",
  "lock_option", "unlock", "@163", "handler", "@164",
  "handler_read_or_scan", "handler_scan_function", "handler_rkey_function",
  "@165", "handler_rkey_mode", "revoke", "revoke_command", "grant",
  "grant_command", "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "@166", "@167", "@168",
  "@169", "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "grant_list", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "require_clause", "grant_options",
  "opt_grant_option", "grant_option_list", "grant_option", "begin", "@170",
  "opt_work", "opt_chain", "opt_release", "opt_savepoint", "commit",
  "rollback", "savepoint", "release", "union_clause", "union_list", "@171",
  "union_opt", "opt_union_order_or_limit", "union_order_or_limit", "@172",
  "order_or_limit", "union_option", "query_specification",
  "query_expression_body", "@173", "subselect", "subselect_start",
  "subselect_end", "opt_query_expression_options",
  "query_expression_option_list", "query_expression_option",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "@174",
  "view_list_opt", "view_list", "view_select", "@175", "view_select_aux",
  "view_check_option", "trigger_tail", "@176", "@177", "@178", "udf_tail",
  "sf_tail", "@179", "@180", "@181", "@182", "@183", "sp_tail", "@184",
  "@185", "@186", "@187", "xa", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "@188",
  "opt_migrate", "install", "uninstall", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   124,    38,    45,    43,    42,    47,    37,
      94,   126,    40,    41,    44,    33,   123,   125,    59,    64,
      46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   612,   613,   614,   613,   613,   615,   615,   616,   616,
     617,   617,   617,   617,   617,   617,   617,   617,   617,   617,
     617,   617,   617,   617,   617,   617,   617,   617,   617,   617,
     617,   617,   617,   617,   617,   617,   617,   617,   617,   617,
     617,   617,   617,   617,   617,   617,   617,   617,   617,   617,
     617,   617,   617,   617,   617,   617,   617,   617,   617,   617,
     617,   618,   619,   619,   620,   621,   621,   623,   622,   624,
     624,   625,   625,   626,   628,   627,   630,   629,   631,   631,
     632,   632,   632,   632,   632,   632,   632,   632,   632,   632,
     632,   632,   632,   632,   632,   633,   633,   633,   634,   635,
     635,   635,   635,   637,   636,   638,   636,   639,   636,   640,
     636,   641,   636,   642,   636,   636,   636,   636,   636,   643,
     644,   644,   645,   645,   645,   645,   645,   645,   645,   647,
     646,   649,   648,   648,   650,   650,   650,   650,   651,   651,
     652,   652,   653,   653,   654,   654,   655,   655,   657,   656,
     658,   658,   658,   658,   658,   658,   658,   658,   658,   658,
     658,   658,   658,   659,   660,   660,   661,   661,   662,   662,
     663,   663,   663,   663,   663,   663,   663,   664,   664,   664,
     665,   665,   667,   666,   668,   668,   669,   669,   670,   670,
     671,   671,   672,   672,   673,   674,   675,   675,   676,   676,
     677,   678,   678,   678,   678,   679,   679,   680,   680,   681,
     681,   683,   682,   682,   684,   682,   682,   686,   685,   687,
     687,   688,   688,   689,   690,   690,   691,   692,   692,   693,
     693,   693,   693,   693,   694,   695,   695,   696,   696,   697,
     697,   698,   698,   699,   699,   699,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   701,   702,
     702,   703,   703,   704,   704,   704,   704,   704,   704,   704,
     704,   704,   704,   704,   704,   704,   706,   705,   708,   707,
     710,   709,   712,   711,   713,   714,   715,   717,   716,   718,
     719,   719,   719,   720,   720,   722,   723,   724,   721,   725,
     725,   725,   726,   726,   728,   729,   727,   731,   730,   732,
     732,   733,   733,   735,   736,   734,   738,   739,   737,   740,
     740,   742,   741,   743,   743,   745,   744,   747,   746,   749,
     748,   750,   751,   752,   750,   753,   750,   754,   754,   755,
     755,   755,   756,   757,   758,   759,   759,   760,   760,   761,
     762,   763,   763,   765,   764,   766,   766,   766,   767,   767,
     767,   768,   769,   769,   769,   770,   770,   770,   770,   770,
     770,   770,   770,   771,   772,   772,   772,   773,   773,   773,
     773,   773,   774,   775,   775,   775,   776,   776,   776,   776,
     776,   776,   776,   777,   778,   778,   778,   779,   779,   779,
     780,   781,   782,   783,   784,   785,   785,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,   795,   796,
     796,   797,   797,   798,   798,   798,   798,   799,   800,   799,
     801,   802,   801,   803,   801,   804,   805,   805,   807,   806,
     808,   810,   809,   811,   812,   813,   812,   812,   812,   812,
     812,   814,   814,   815,   815,   816,   816,   817,   818,   819,
     820,   821,   821,   822,   823,   822,   824,   822,   825,   825,
     826,   827,   828,   828,   829,   829,   830,   830,   832,   831,
     833,   834,   835,   834,   836,   834,   837,   837,   838,   838,
     839,   839,   841,   842,   840,   843,   843,   844,   844,   845,
     845,   846,   846,   848,   847,   849,   850,   850,   851,   851,
     852,   852,   852,   852,   852,   852,   852,   852,   854,   855,
     853,   856,   856,   857,   857,   858,   858,   859,   859,   860,
     860,   861,   861,   862,   863,   863,   864,   864,   865,   865,
     866,   866,   866,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   868,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867,   867,   869,   870,
     871,   872,   873,   873,   873,   873,   873,   873,   874,   874,
     874,   875,   875,   876,   876,   876,   876,   877,   878,   878,
     879,   879,   880,   880,   881,   881,   881,   881,   881,   881,
     882,   882,   883,   884,   884,   885,   887,   886,   888,   888,
     888,   888,   888,   888,   888,   888,   888,   888,   888,   888,
     888,   888,   888,   888,   888,   888,   888,   888,   888,   888,
     888,   888,   888,   888,   888,   888,   888,   888,   888,   888,
     888,   888,   888,   889,   888,   890,   888,   888,   888,   891,
     891,   891,   891,   891,   891,   891,   891,   892,   893,   893,
     894,   894,   895,   895,   895,   895,   895,   896,   896,   896,
     896,   896,   897,   897,   897,   898,   898,   898,   899,   900,
     900,   901,   901,   902,   902,   902,   903,   903,   903,   903,
     904,   904,   905,   905,   906,   906,   907,   907,   908,   908,
     908,   908,   908,   908,   908,   908,   908,   908,   908,   909,
     910,   910,   911,   911,   912,   912,   913,   913,   914,   914,
     915,   915,   916,   916,   917,   918,   918,   919,   919,   920,
     920,   921,   921,   921,   922,   922,   922,   923,   923,   923,
     923,   923,   923,   923,   924,   924,   925,   925,   926,   927,
     927,   928,   928,   929,   929,   929,   929,   930,   930,   930,
     930,   930,   931,   931,   931,   931,   931,   932,   933,   933,
     934,   934,   935,   935,   936,   936,   936,   937,   937,   938,
     939,   940,   941,   941,   942,   942,   943,   943,   944,   944,
     945,   945,   946,   946,   947,   947,   948,   948,   949,   949,
     950,   950,   951,   952,   952,   953,   953,   953,   954,   954,
     955,   955,   956,   956,   957,   957,   958,   958,   960,   959,
     961,   959,   959,   962,   959,   963,   959,   964,   959,   965,
     959,   966,   959,   959,   959,   959,   959,   959,   967,   967,
     967,   967,   968,   968,   969,   969,   970,   970,   971,   971,
     971,   971,   971,   971,   971,   971,   971,   971,   972,   971,
     971,   973,   971,   974,   971,   971,   971,   971,   975,   976,
     976,   978,   977,   979,   979,   979,   981,   980,   982,   983,
     982,   984,   984,   985,   986,   986,   987,   988,   988,   988,
     989,   988,   990,   991,   988,   988,   988,   988,   988,   988,
     988,   988,   988,   988,   988,   988,   988,   988,   992,   992,
     993,   993,   994,   994,   994,   995,   995,   995,   996,   996,
     996,   996,   998,   997,   997,   999,   997,   997,  1000,  1001,
    1001,  1003,  1002,  1004,  1004,  1005,  1005,  1005,  1006,  1006,
    1007,  1007,  1009,  1008,  1010,  1010,  1010,  1012,  1011,  1013,
    1013,  1014,  1014,  1015,  1015,  1015,  1017,  1016,  1018,  1020,
    1019,  1021,  1021,  1022,  1022,  1023,  1023,  1023,  1023,  1023,
    1023,  1025,  1024,  1026,  1026,  1026,  1028,  1027,  1027,  1029,
    1029,  1030,  1030,  1031,  1033,  1032,  1034,  1034,  1035,  1035,
    1036,  1037,  1038,  1038,  1040,  1039,  1041,  1041,  1042,  1042,
    1043,  1044,  1046,  1045,  1048,  1047,  1049,  1049,  1050,  1050,
    1051,  1052,  1052,  1053,  1053,  1054,  1054,  1056,  1055,  1058,
    1059,  1057,  1060,  1060,  1060,  1060,  1060,  1061,  1061,  1062,
    1062,  1063,  1063,  1064,  1064,  1064,  1065,  1065,  1065,  1066,
    1066,  1066,  1067,  1067,  1068,  1069,  1070,  1070,  1070,  1070,
    1070,  1071,  1071,  1072,  1072,  1072,  1072,  1072,  1072,  1072,
    1072,  1072,  1072,  1072,  1073,  1073,  1073,  1073,  1073,  1073,
    1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,
    1074,  1074,  1074,  1074,  1075,  1075,  1075,  1075,  1075,  1075,
    1075,  1075,  1075,  1075,  1075,  1075,  1075,  1075,  1075,  1076,
    1076,  1077,  1077,  1078,  1078,  1079,  1079,  1080,  1080,  1080,
    1080,  1080,  1080,  1081,  1081,  1082,  1082,  1082,  1082,  1082,
    1082,  1082,  1082,  1082,  1082,  1082,  1082,  1082,  1082,  1082,
    1082,  1082,  1082,  1082,  1082,  1082,  1082,  1082,  1082,  1082,
    1082,  1082,  1082,  1082,  1082,  1083,  1083,  1083,  1083,  1083,
    1083,  1083,  1083,  1083,  1083,  1083,  1083,  1083,  1083,  1083,
    1083,  1083,  1083,  1083,  1083,  1083,  1083,  1083,  1083,  1083,
    1083,  1083,  1084,  1084,  1084,  1084,  1084,  1084,  1084,  1084,
    1084,  1084,  1084,  1084,  1084,  1084,  1084,  1084,  1084,  1084,
    1084,  1084,  1084,  1084,  1084,  1084,  1084,  1085,  1085,  1085,
    1085,  1085,  1085,  1085,  1085,  1085,  1085,  1085,  1085,  1085,
    1085,  1085,  1085,  1085,  1086,  1086,  1086,  1086,  1086,  1086,
    1086,  1086,  1088,  1087,  1087,  1089,  1089,  1090,  1090,  1091,
    1091,  1092,  1092,  1093,  1093,  1094,  1095,  1095,  1095,  1095,
    1095,  1095,  1095,  1096,  1097,  1095,  1095,  1095,  1095,  1095,
    1095,  1095,  1095,  1095,  1095,  1095,  1098,  1095,  1100,  1099,
    1101,  1101,  1101,  1102,  1102,  1103,  1103,  1104,  1104,  1106,
    1105,  1107,  1107,  1107,  1107,  1107,  1107,  1107,  1107,  1107,
    1107,  1107,  1108,  1108,  1109,  1109,  1110,  1110,  1111,  1111,
    1112,  1112,  1113,  1113,  1114,  1114,  1115,  1115,  1116,  1117,
    1117,  1118,  1118,  1119,  1119,  1120,  1119,  1121,  1119,  1122,
    1119,  1119,  1123,  1119,  1124,  1119,  1119,  1125,  1119,  1126,
    1119,  1119,  1127,  1127,  1127,  1129,  1128,  1128,  1128,  1130,
    1131,  1132,  1130,  1133,  1135,  1136,  1134,  1138,  1137,  1140,
    1141,  1139,  1142,  1143,  1144,  1144,  1145,  1145,  1145,  1145,
    1146,  1146,  1148,  1147,  1149,  1147,  1150,  1150,  1151,  1152,
    1151,  1154,  1153,  1155,  1155,  1156,  1156,  1157,  1157,  1158,
    1158,  1159,  1159,  1159,  1159,  1159,  1159,  1159,  1159,  1159,
    1159,  1159,  1159,  1160,  1160,  1160,  1160,  1160,  1160,  1160,
    1160,  1160,  1161,  1161,  1161,  1161,  1162,  1162,  1162,  1163,
    1163,  1164,  1164,  1165,  1166,  1165,  1167,  1168,  1167,  1169,
    1169,  1170,  1170,  1171,  1171,  1172,  1172,  1172,  1173,  1174,
    1174,  1175,  1176,  1176,  1178,  1177,  1179,  1179,  1180,  1180,
    1180,  1181,  1181,  1182,  1182,  1183,  1184,  1184,  1184,  1185,
    1185,  1185,  1185,  1185,  1186,  1186,  1187,  1187,  1187,  1187,
    1187,  1187,  1188,  1188,  1188,  1188,  1188,  1189,  1189,  1189,
    1189,  1189,  1190,  1190,  1190,  1190,  1191,  1192,  1192,  1193,
    1194,  1193,  1195,  1195,  1196,  1196,  1197,  1199,  1198,  1200,
    1200,  1201,  1201,  1203,  1202,  1205,  1206,  1204,  1204,  1204,
    1208,  1207,  1210,  1209,  1211,  1209,  1209,  1209,  1209,  1209,
    1209,  1212,  1209,  1209,  1209,  1209,  1209,  1209,  1213,  1213,
    1214,  1215,  1215,  1216,  1217,  1217,  1218,  1218,  1220,  1221,
    1219,  1223,  1224,  1222,  1225,  1225,  1225,  1225,  1226,  1226,
    1227,  1227,  1228,  1229,  1229,  1229,  1230,  1229,  1231,  1231,
    1232,  1232,  1233,  1232,  1234,  1232,  1235,  1235,  1236,  1236,
    1237,  1238,  1238,  1239,  1239,  1241,  1240,  1242,  1242,  1243,
    1243,  1244,  1244,  1245,  1246,  1245,  1248,  1249,  1247,  1250,
    1250,  1251,  1252,  1252,  1253,  1254,  1254,  1256,  1255,  1258,
    1257,  1259,  1257,  1260,  1257,  1261,  1261,  1262,  1262,  1263,
    1263,  1264,  1264,  1265,  1265,  1265,  1267,  1266,  1268,  1268,
    1269,  1269,  1270,  1270,  1271,  1271,  1271,  1271,  1271,  1271,
    1271,  1271,  1271,  1272,  1272,  1274,  1273,  1275,  1275,  1275,
    1275,  1275,  1275,  1275,  1275,  1275,  1275,  1275,  1275,  1276,
    1275,  1277,  1275,  1275,  1275,  1275,  1275,  1275,  1275,  1275,
    1275,  1275,  1275,  1275,  1275,  1275,  1275,  1275,  1275,  1275,
    1275,  1275,  1275,  1275,  1275,  1275,  1275,  1275,  1275,  1275,
    1275,  1275,  1275,  1275,  1278,  1278,  1278,  1279,  1279,  1280,
    1280,  1281,  1281,  1282,  1282,  1283,  1283,  1284,  1284,  1285,
    1285,  1286,  1286,  1286,  1288,  1287,  1289,  1287,  1290,  1290,
    1291,  1291,  1291,  1292,  1292,  1292,  1294,  1293,  1296,  1297,
    1295,  1295,  1298,  1298,  1299,  1299,  1300,  1300,  1300,  1300,
    1300,  1300,  1300,  1300,  1300,  1300,  1300,  1300,  1300,  1300,
    1300,  1301,  1301,  1303,  1302,  1304,  1304,  1305,  1305,  1305,
    1307,  1306,  1308,  1309,  1309,  1310,  1311,  1311,  1311,  1312,
    1314,  1315,  1316,  1317,  1313,  1318,  1318,  1319,  1319,  1320,
    1320,  1320,  1321,  1321,  1321,  1322,  1322,  1323,  1323,  1324,
    1324,  1324,  1324,  1325,  1325,  1326,  1326,  1327,  1327,  1328,
    1328,  1329,  1329,  1330,  1330,  1331,  1331,  1331,  1332,  1332,
    1333,  1333,  1334,  1334,  1335,  1335,  1336,  1337,  1337,  1337,
    1337,  1338,  1338,  1338,  1339,  1340,  1340,  1340,  1341,  1341,
    1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,
    1342,  1342,  1342,  1342,  1342,  1343,  1343,  1344,  1344,  1345,
    1346,  1346,  1347,  1347,  1348,  1348,  1348,  1349,  1349,  1349,
    1349,  1350,  1350,  1350,  1351,  1351,  1352,  1353,  1353,  1354,
    1355,  1356,  1357,  1357,  1358,  1358,  1359,  1359,  1359,  1360,
    1360,  1360,  1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,
    1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,
    1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,
    1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,
    1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,
    1361,  1361,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,  1362,
    1364,  1363,  1365,  1365,  1366,  1366,  1368,  1367,  1369,  1369,
    1369,  1369,  1370,  1370,  1371,  1371,  1371,  1371,  1372,  1372,
    1372,  1372,  1373,  1373,  1374,  1374,  1375,  1375,  1375,  1375,
    1375,  1375,  1375,  1376,  1376,  1376,  1377,  1377,  1377,  1377,
    1378,  1378,  1378,  1379,  1379,  1379,  1379,  1379,  1381,  1380,
    1382,  1382,  1383,  1383,  1384,  1385,  1385,  1385,  1385,  1387,
    1386,  1388,  1388,  1389,  1388,  1390,  1390,  1391,  1391,  1392,
    1392,  1392,  1392,  1393,  1392,  1394,  1394,  1394,  1394,  1394,
    1395,  1396,  1396,  1396,  1396,  1396,  1397,  1398,  1398,  1398,
    1398,  1399,  1399,  1400,  1400,  1401,  1401,  1402,  1402,  1404,
    1403,  1405,  1403,  1406,  1403,  1407,  1403,  1403,  1403,  1403,
    1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,
    1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,
    1403,  1403,  1403,  1408,  1408,  1409,  1409,  1410,  1410,  1410,
    1411,  1411,  1411,  1411,  1412,  1412,  1413,  1413,  1414,  1414,
    1414,  1414,  1414,  1415,  1415,  1416,  1416,  1417,  1418,  1418,
    1418,  1418,  1418,  1419,  1419,  1420,  1420,  1421,  1421,  1422,
    1422,  1422,  1422,  1422,  1424,  1423,  1425,  1425,  1426,  1426,
    1426,  1427,  1427,  1427,  1428,  1428,  1429,  1430,  1430,  1431,
    1432,  1433,  1433,  1435,  1434,  1436,  1436,  1436,  1437,  1437,
    1439,  1438,  1440,  1440,  1441,  1441,  1441,  1442,  1442,  1443,
    1444,  1443,  1445,  1446,  1447,  1448,  1448,  1449,  1449,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1451,  1451,  1451,
    1452,  1452,  1452,  1452,  1452,  1453,  1453,  1453,  1453,  1453,
    1453,  1454,  1454,  1455,  1456,  1457,  1457,  1457,  1458,  1459,
    1459,  1459,  1460,  1460,  1460,  1462,  1461,  1463,  1463,  1464,
    1464,  1466,  1465,  1467,  1467,  1468,  1468,  1468,  1468,  1470,
    1471,  1472,  1469,  1473,  1473,  1475,  1476,  1477,  1478,  1479,
    1474,  1481,  1482,  1483,  1484,  1480,  1485,  1485,  1485,  1485,
    1485,  1485,  1486,  1486,  1486,  1487,  1487,  1488,  1488,  1488,
    1489,  1489,  1490,  1491,  1490,  1492,  1492,  1493,  1494
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     4,     1,     2,     0,     4,     0,
       2,     3,     1,     2,     0,     3,     0,     5,     1,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     5,     1,     0,     1,     3,     1,     3,
       3,     3,     3,     0,     7,     0,    12,     0,    12,     0,
      12,     0,     6,     0,     3,     4,     4,     3,     2,    10,
       1,     3,     2,     2,     2,     2,     2,     2,     2,     0,
      13,     0,     6,     2,     0,     1,     3,     1,     0,     2,
       0,     2,     0,     1,     3,     4,     0,     2,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     1,     0,     2,     0,     2,
       2,     2,     2,     2,     3,     3,     1,     1,     1,     2,
       3,     3,     0,     4,     0,     3,     0,     1,     3,     1,
       0,     1,     3,     1,     0,     3,     0,     1,     3,     1,
       4,     0,     1,     1,     1,     0,     3,     2,     3,     0,
       3,     0,     5,     5,     0,     7,     5,     0,     2,     1,
       1,     1,     3,     1,     1,     1,     3,     0,     1,     1,
       1,     1,     2,     1,     3,     1,     1,     0,     1,     0,
       2,     3,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       3,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     5,     0,     2,
       0,     3,     0,     2,     2,     2,     2,     0,     6,     2,
       0,     2,     1,     1,     3,     0,     0,     0,     7,     0,
       2,     2,     1,     1,     0,     0,     8,     0,     6,     1,
       2,     1,     2,     0,     0,     6,     0,     0,     6,     0,
       2,     0,     5,     0,     1,     0,     5,     0,     2,     0,
       5,     4,     0,     0,     8,     0,     7,     1,     1,     1,
       1,     1,     2,     4,     5,     0,     4,     4,     4,     3,
       3,     2,     2,     0,     2,     1,     2,     3,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     0,     1,     1,
       1,     1,     1,     2,     3,     2,     4,     5,     0,     5,
       0,     0,     5,     0,     7,     1,     0,     1,     0,     4,
       0,     0,     3,     5,     5,     0,     4,     2,     2,     2,
       2,     0,     1,     0,     1,     1,     3,     1,     4,     5,
       5,     0,     2,     0,     0,     7,     0,     9,     1,     3,
       1,     1,     0,     2,     0,     3,     1,     3,     0,     6,
       1,     0,     0,     5,     0,     4,     1,     1,     1,     3,
       1,     3,     0,     0,     5,     1,     3,     1,     1,     0,
       3,     1,     3,     0,     4,     1,     0,     1,     2,     1,
       3,     4,     3,     3,     3,     4,     4,     3,     0,     0,
       6,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       1,     1,     2,     1,     0,     3,     0,     1,     1,     2,
       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     0,     6,     1,     1,
       3,     4,     4,     2,     2,     2,     3,     3,     4,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     2,     2,     7,     8,     8,     8,     8,     2,
       0,     1,     4,     0,     1,     2,     0,     4,     3,     3,
       3,     1,     2,     1,     1,     3,     2,     3,     2,     2,
       1,     3,     3,     2,     3,     1,     1,     1,     1,     1,
       2,     1,     1,     1,     2,     3,     2,     3,     2,     2,
       3,     3,     3,     0,     6,     0,     6,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     2,     1,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     1,     2,     0,     1,     1,     5,     0,
       1,     2,     1,     1,     1,     1,     3,     3,     3,     3,
       0,     1,     0,     1,     0,     1,     2,     1,     1,     2,
       2,     4,     1,     3,     2,     1,     2,     2,     2,     2,
       2,     1,     2,     1,     1,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     0,
       1,     1,     2,     2,     1,     2,     2,     0,     1,     1,
       1,     3,     1,     3,     0,     1,     0,     1,     5,     0,
       3,     3,     1,     0,     2,     2,     2,     0,     3,     3,
       6,     6,     1,     1,     2,     2,     2,     1,     2,     2,
       1,     1,     0,     1,     1,     1,     1,     0,     1,     1,
       1,     0,     1,     2,     0,     1,     0,     1,     0,     1,
       1,     2,     1,     2,     1,     2,     2,     2,     3,     2,
       1,     1,     1,     1,     3,     1,     1,     1,     4,     2,
       1,     4,     0,     1,     0,     2,     1,     3,     0,     6,
       0,     5,     7,     0,     5,     0,     5,     0,     5,     0,
       4,     0,    10,     3,     4,     3,     3,     7,     0,     3,
       1,     4,     0,     3,     0,     2,     0,     1,     0,     2,
       2,     2,     2,     1,     1,     1,     3,     4,     0,     6,
       4,     0,     5,     0,     6,     4,     3,     1,     2,     1,
       1,     0,     5,     0,     3,     2,     0,     5,     0,     0,
       6,     1,     3,     1,     1,     3,     2,     3,     2,     4,
       0,     6,     0,     0,     8,     4,     4,     3,     3,     2,
       2,     6,     5,     3,     5,     1,     1,     1,     0,     1,
       0,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     0,     5,     3,     0,     5,     3,     3,     0,
       3,     0,     2,     1,     3,     0,     1,     1,     0,     2,
       1,     3,     0,     5,     0,     1,     1,     0,     6,     0,
       1,     1,     2,     1,     1,     1,     0,     5,     2,     0,
       5,     0,     1,     1,     2,     1,     1,     1,     1,     1,
       2,     0,     5,     0,     1,     1,     0,     4,     4,     3,
       5,     1,     3,     3,     0,     6,     1,     1,     1,     3,
       2,     3,     1,     1,     0,     6,     1,     1,     1,     3,
       3,     4,     0,     6,     0,     2,     0,     4,     0,     2,
       1,     2,     4,     2,     3,     2,     3,     0,     3,     0,
       0,     6,     2,     1,     1,     2,     2,     8,     4,     0,
       1,     2,     1,     1,     1,     1,     0,     2,     4,     3,
       1,     1,     3,     4,     0,     0,     0,     2,     2,     1,
       1,     0,     2,     3,     3,     3,     2,     3,     4,     3,
       4,     3,     4,     1,     3,     4,     3,     3,     6,     1,
       5,     6,     5,     7,     6,     8,     5,     6,     4,     4,
       5,     3,     4,     1,     3,     3,     3,     3,     3,     3,
       5,     5,     3,     3,     3,     3,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     3,     2,     2,     2,     2,
       3,     3,     5,     6,     4,     4,     7,     2,     6,     5,
       6,     6,     4,     4,     5,     4,     6,     2,     4,     4,
       4,    10,     6,     8,     6,     4,     4,     6,     4,     4,
       4,     6,     4,     7,     7,     7,     6,     6,     6,     6,
       3,     4,     6,     8,     2,     2,     4,     8,     8,     6,
       6,     2,     4,     6,     6,     8,     8,     6,     8,     6,
       2,     4,     8,     8,     2,     2,     2,     4,     4,     4,
       4,     3,     8,     4,     6,     4,     4,     4,     6,     8,
       6,     4,     6,     1,     6,     4,     4,     4,     4,     4,
       6,     4,     0,     5,     6,     2,     3,     0,     4,     0,
       3,     0,     1,     1,     3,     4,     4,     5,     4,     4,
       4,     5,     4,     0,     0,     7,     4,     5,     4,     5,
       4,     4,     4,     4,     4,     5,     0,     8,     0,     3,
       3,     1,     4,     0,     1,     0,     2,     0,     1,     0,
       3,     2,     3,     2,     1,     2,     1,     2,     1,     1,
       1,     2,     0,     1,     1,     3,     1,     3,     1,     3,
       0,     1,     0,     2,     4,     5,     1,     1,     1,     1,
       4,     1,     3,     3,     3,     0,     6,     0,     6,     0,
       8,     4,     0,     8,     0,    10,     6,     0,     8,     0,
      10,     6,     1,     2,     2,     0,     4,     3,     5,     2,
       0,     0,     7,     1,     0,     0,     6,     0,     3,     0,
       0,     5,     0,     1,     0,     1,     0,     2,     3,     3,
       1,     1,     0,     7,     0,     7,     1,     2,     0,     0,
       2,     0,     2,     0,     1,     1,     1,     1,     3,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     0,
       2,     0,     1,     0,     0,     3,     0,     0,     3,     2,
       0,     0,     4,     4,     2,     0,     1,     1,     3,     3,
       1,     2,     0,     1,     0,     4,     4,     2,     0,     1,
       1,     0,     1,     0,     1,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       0,     6,     0,     1,     3,     1,     3,     0,     2,     3,
       1,     2,     1,     0,     3,     0,     0,     7,     2,     1,
       0,     3,     0,     7,     0,     6,     4,     6,     4,     4,
       4,     0,     6,     4,     4,     5,     6,     4,     1,     3,
       1,     1,     3,     1,     0,     2,     0,     1,     0,     0,
       8,     0,     0,     6,     0,     1,     1,     1,     1,     1,
       2,     1,     1,     1,     3,     4,     0,     3,     3,     1,
       2,     2,     0,     3,     0,     5,     3,     1,     3,     1,
       3,     1,     1,     0,     1,     0,     4,     0,     1,     3,
       1,     1,     1,     0,     0,     6,     0,     0,    11,     3,
       1,     3,     3,     1,     3,     0,     1,     0,     4,     0,
       6,     0,     5,     0,     6,     1,     3,     2,     4,     0,
       2,     0,     2,     1,     1,     1,     0,     4,     0,     1,
       0,     1,     1,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     0,     3,     0,     3,     2,     4,     4,
       3,     4,     4,     1,     3,     3,     6,     2,     2,     0,
       6,     0,     6,     5,     2,     1,     1,     1,     5,     5,
       2,     2,     1,     4,     3,     2,     3,     2,     2,     1,
       3,     4,     3,     3,     2,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     0,
       1,     0,     2,     0,     1,     1,     1,     0,     2,     0,
       2,     0,     2,     2,     0,     4,     0,     4,     1,     1,
       0,     1,     1,     0,     1,     1,     0,     4,     0,     0,
       5,     1,     0,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     0,     3,     3,     1,     1,     1,     2,
       0,     3,     3,     2,     2,     3,     0,     1,     1,     2,
       0,     0,     0,     0,    21,     1,     1,     0,     1,     0,
       1,     1,     0,     1,     1,     0,     2,     2,     1,     3,
       4,     3,     3,     0,     2,     2,     1,     3,     3,     0,
       4,     0,     3,     1,     1,     0,     3,     2,     3,     1,
       1,     2,     0,     2,     3,     1,     5,     1,     1,     2,
       2,     1,     1,     1,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     3,     5,     1,
       1,     1,     1,     1,     3,     4,     5,     1,     5,     3,
       2,     1,     3,     2,     2,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     4,     0,     1,     1,     3,     0,     2,     1,     1,
       1,     1,     0,     1,     0,     1,     1,     1,     0,     2,
       2,     2,     1,     2,     4,     5,     4,     6,     2,     3,
       3,     3,     5,     1,     3,     3,     2,     2,     2,     1,
       1,     4,     4,     1,     1,     1,     1,     1,     0,     4,
       1,     1,     1,     3,     3,     1,     1,     2,     2,     0,
       3,     4,     3,     0,     7,     1,     2,     1,     1,     1,
       1,     1,     1,     0,     5,     1,     1,     1,     1,     1,
       3,     6,     6,     6,     7,     5,     3,     8,     8,     8,
       6,     0,     1,     1,     2,     0,     1,     1,     3,     0,
       3,     0,     3,     0,     3,     0,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     3,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     2,     0,     1,     3,     1,     2,     2,     2,
       1,     3,     3,     1,     1,     3,     1,     3,     4,     5,
       4,     6,     1,     0,     3,     3,     1,     1,     0,     2,
       2,     2,     2,     0,     2,     0,     3,     2,     1,     2,
       2,     2,     2,     2,     0,     3,     0,     1,     0,     3,
       2,     0,     1,     2,     0,     1,     4,     4,     5,     2,
       3,     0,     1,     0,     4,     0,     1,     1,     0,     1,
       0,     2,     2,     1,     0,     1,     1,     2,     3,     2,
       0,     6,     3,     0,     0,     0,     1,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     1,     2,     1,     2,     3,
       3,     3,     0,     3,     3,     0,     7,     0,     3,     1,
       3,     0,     3,     2,     4,     0,     3,     4,     4,     0,
       0,     0,    16,     8,     7,     0,     0,     0,     0,     0,
      15,     0,     0,     0,     0,    12,     4,     4,     3,     4,
       3,     2,     1,     3,     5,     1,     1,     0,     1,     1,
       0,     2,     0,     0,     3,     0,     2,     5,     3
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2423,   973,  2354,     0,     0,     0,     0,     0,     0,
    2356,   113,    62,  1577,  1688,  1689,  1490,  1516,     2,     0,
     973,   163,     0,    74,  1518,     0,  1736,     0,     0,   973,
     441,     0,  1730,     0,     0,   973,  1521,  1723,   237,   163,
    2356,     0,  1019,  2182,  1615,     0,     0,     0,     0,  1598,
       0,  2239,  1566,     0,     0,     0,     0,     3,     8,    19,
       0,    38,    24,    28,    14,    18,    13,    51,    45,    36,
      10,    53,    54,    16,    42,    11,    12,    15,    34,    41,
      35,    37,    49,  1010,    22,    23,    29,    43,    58,    20,
      55,    52,    21,  1690,    25,    44,    39,    31,    59,    32,
      50,    33,    57,    27,    46,    26,     9,    17,    47,    48,
      40,    60,    30,    56,     0,   846,     0,     0,   911,     0,
       0,     0,     0,     0,   829,  2421,  2422,  2423,   975,   974,
       0,  2356,  1839,   958,   984,  1902,  1903,  1904,  1905,  1906,
    1907,  1908,  1853,  1909,  1910,  1912,  1911,  1913,  1914,  1854,
    1855,  1915,  1916,  1917,  1919,  1918,  1920,  1856,  1857,  1921,
    1922,  1923,  1924,  1858,  1859,  1925,  1927,  1926,  1860,  1928,
    1929,  1930,  1932,  1931,  1861,  1933,  1862,  1934,  1935,  1936,
    1937,  1938,  1939,  1940,  1942,  1941,  1863,  1943,  1944,  1945,
    1946,  1947,  1949,  1948,  1950,  1951,  1952,  1864,  1953,  1954,
    1955,  1956,  1957,  1958,  1959,  1865,  1960,  1961,  1962,  1979,
    1866,  1963,  1966,  1965,  1964,  1967,  1968,  1969,  1971,  1970,
    1972,  1867,  1973,  1974,  1975,  1977,  1976,  1981,  1982,  1983,
    1868,  1978,  1980,  2161,  1984,  1986,  1985,  1987,  1989,  1988,
    1869,  1990,  1870,  1871,  1991,  1992,  1837,  1993,  1838,  1994,
    1996,  1997,  1998,  2003,  1872,  1995,  1999,  2000,  2001,  2002,
    2004,  1873,  2005,  2006,  2007,  2008,  2009,  2010,  2011,  2012,
    2013,  2014,  2025,  2018,  2020,  2021,  2023,  2019,  2024,  2028,
    2027,  2029,  2030,  2031,  2026,  2016,  2022,  2017,  2032,  2033,
    2015,  2034,  2035,  2036,  2037,  2038,  2039,  2040,  2041,  2042,
    2043,  2044,  2046,  2045,  2047,  2048,  2049,  2050,  2051,  2052,
    2054,  2053,  2055,  2056,  2057,  2059,  2058,  2061,  2062,  1874,
    2060,  2063,  2064,  2065,  2066,  2067,  1875,  1876,  1877,  2068,
    2069,  1878,  2070,  2071,  2072,  1879,  2073,  2074,  2076,  2075,
    2077,  2078,  1880,  1881,  2079,  2080,  2081,  2082,  2083,  2084,
    2085,  2086,  2087,  2088,  2089,  2090,  2091,  2092,  2094,  2093,
    2095,  2096,  2097,  2098,  2099,  2100,  2101,  1882,  2102,  1883,
    2103,  2104,  1884,  2105,  1885,  2106,  2107,  1886,  2108,  2109,
    2110,  2111,  2112,  2113,  1887,  2114,  2115,  2116,  1888,  2118,
    2117,  2119,  1889,  2121,  2122,  1890,  2120,  1892,  2123,  2124,
    1891,  1893,  2125,  2126,  2128,  2127,  2129,  2130,  2131,  1894,
    2132,  1895,  2133,  2134,  2135,  2136,  2137,  2139,  2138,  2140,
    2141,  2142,  2143,  2145,  2147,  2146,  2144,  2148,  2149,  2150,
    2151,  2154,  2155,  2156,  2157,  2152,  2153,  1896,  2158,  2159,
    2160,  2162,  2163,  2165,  2164,  1897,  1898,  2166,  2167,  1901,
    2168,  2169,  2172,  2170,  2171,  2174,  2173,  2175,  2176,  1899,
    2177,  1900,  2178,  2179,   182,  1842,   165,  1843,  1852,     0,
    2231,  2230,   942,   959,  2357,  2358,   534,   779,     0,     0,
     780,     0,   533,   778,   163,  2423,   118,     0,   530,   531,
       0,     0,     0,  1591,     0,  1514,  1514,  1514,     0,     0,
    1514,  1514,     0,  1517,  1514,   163,  1514,     0,    67,  1696,
       0,     0,     0,     0,  1836,     0,  1524,     0,  1737,  1738,
       0,  1745,     0,  1746,  1740,  2228,     0,     0,     0,     0,
       0,   163,   976,     0,  1575,     0,   227,   236,   238,   239,
     235,     0,  2358,  2369,  1011,  1017,  1029,  2183,  2180,  1673,
     239,   931,   931,   931,   929,   931,  1599,  1596,     0,     0,
    1575,  1739,  2475,     0,     0,     0,  2471,     0,  2476,     0,
    1019,     0,     0,     1,     5,     0,     0,  1974,  2072,  1686,
    1684,  1831,     0,   820,   847,     0,   825,     0,   823,  1848,
    1847,  1846,     0,   836,   835,   833,     0,   403,     0,     0,
    2432,   827,   956,  2355,     0,   184,     0,    76,     0,     0,
       0,  2361,     0,     0,     0,     0,   117,     0,     0,     0,
     114,  1044,  1044,  2423,  2425,  2427,   534,   532,     0,     0,
       0,  1595,  1594,  1593,     0,  1591,  1903,  1853,  1914,     0,
    1804,     0,     0,     0,  1290,     0,  1858,     0,  1928,  1930,
    1863,     0,     0,  1051,  1051,  1051,     0,     0,     0,  1951,
    1952,  1813,     0,     0,     0,  1801,  1814,  1986,  1987,     0,
    1803,  1992,     0,     0,     0,     0,  2009,  1811,     0,     0,
    2041,  2043,     0,     0,  2047,  2048,  2049,  2050,  1788,  1106,
       0,  1051,  1800,  1810,  2065,  1794,  2073,  2077,  2078,     0,
    2087,     0,     0,     0,  2112,  2116,     0,     0,  2136,     0,
       0,  1051,  1787,  2154,  2155,  2156,  2157,     0,  1802,  1896,
    1812,     0,  2168,  1051,  1051,  1051,     0,     0,     0,  2175,
    2179,     0,     0,     0,  2393,  1105,     0,  1258,     0,  1284,
    1063,  1069,  1083,     0,  1098,  1116,  1117,  1119,  1213,  1118,
    1124,  1123,  1491,  1798,  1122,  1121,  1799,  1115,  1821,  1842,
    1820,     0,     0,     0,     0,     0,     0,     0,     0,  1669,
       0,     0,  1501,  1514,    69,     0,  2275,  2290,  2291,  2287,
    2292,  2310,  2293,  2297,     0,  2289,  2281,     0,  2296,     0,
    2285,  2294,     0,  2279,     0,  2295,  2300,  2311,  2283,  2288,
    2266,     0,  2273,  2277,  1833,  1396,  2242,  2243,     0,    75,
    1526,  1527,  1525,   910,     0,  1735,     0,  1749,     0,   971,
     451,   442,     0,  1668,  1667,     0,  1731,  2370,     0,     0,
     947,  1529,  1576,     0,  1528,  1728,     0,  1727,  1724,  1726,
     228,     0,     0,   258,  2275,     0,  2260,     0,  2364,  2361,
    2371,  2406,  2401,  2400,  2403,  2404,  1035,  2405,  1034,  2402,
    2399,  1044,  1030,  1032,  1033,  2186,  1635,     0,   713,     0,
    1681,  1636,     0,     0,  1681,     0,  1431,  1671,  1674,     0,
    2195,  1649,   776,   775,   774,  2196,  1667,     0,  1623,  1637,
       0,  1600,  1642,     0,  2197,     0,  1670,     0,  1431,  1681,
       0,  1616,     0,     0,     0,     0,   234,   925,   935,   927,
     922,     0,   928,   924,     0,  2488,  2240,   910,  1793,  1792,
    1840,  2472,  1791,  2480,  2482,  2468,  2470,  2477,  1013,     0,
    2375,     6,    61,     0,  1693,  2430,  2431,  2429,   729,     0,
    1051,  1849,  2424,   166,   834,     0,   404,   166,     0,     0,
       0,     0,     0,   405,   406,   342,   818,   831,     0,     0,
     830,  2432,     0,     0,   986,   988,   987,  1004,   186,   183,
     164,     0,   944,  1508,  1510,   961,  2360,     0,     0,  2362,
    2366,  1104,  1103,     0,   111,   116,     0,     0,     0,  2332,
     115,  2326,  2428,  1044,  1044,  1044,  2420,     0,  2408,  2415,
    2416,  2419,  2418,  2417,  2414,     0,  2407,  2410,  2411,  2413,
    2412,  2432,  2426,     0,   781,   781,   781,     0,  1578,  1581,
    1585,  1589,  1592,     0,     0,  1401,  1137,  1401,  1401,  1401,
    1291,     0,     0,     0,     0,     0,     0,     0,     0,  1401,
       0,  1174,  1147,     0,  1175,     0,     0,     0,     0,     0,
    1807,     0,     0,  2393,     0,     0,     0,  1263,     0,     0,
       0,  2393,     0,     0,     0,     0,     0,  1286,  1288,  1820,
    1401,     0,     0,  1401,     0,     0,     0,     0,     0,  1056,
       0,  1181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1401,  1401,     0,     0,  1401,     0,  1190,
       0,  1809,     0,     0,     0,  1808,     0,     0,  1806,  1805,
    1789,     0,  1194,  1196,  1195,     0,  1401,  1401,     0,     0,
    1127,  1126,  1128,     0,     0,     0,     0,     0,     0,  1102,
    1101,  1100,  1099,     0,     0,     0,  1107,     0,  1108,  1109,
       0,  1110,  1111,  1112,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1129,     0,     0,     0,  1790,  1222,     0,
    1515,  1496,  1503,  1498,     0,  1669,  1499,  1507,   417,     0,
    1504,  2324,  1500,     0,  1492,     0,    68,     0,  1719,     0,
       0,     0,  1713,  1715,  1718,  1714,     0,     0,  1720,  1717,
       0,  1716,  1697,  1701,  1705,  1698,  2276,  2274,  2308,  2307,
    2312,     0,  2309,  2305,  2298,  2333,  2302,     0,  2333,  2304,
    2303,  2333,  2299,  2306,  2333,  2271,     0,  1397,  1398,     0,
    2241,     0,  1832,     0,     0,   994,  1750,  1751,  1747,  1396,
    2229,  2232,     0,   452,     0,     0,   461,     0,     0,    64,
      65,     0,   978,     0,   977,   981,     0,     0,     0,  1532,
    1522,  1531,  1729,     0,   226,   251,   246,   254,   248,   250,
     249,   255,   256,   257,   252,   247,   253,   240,     0,  2274,
       0,  2271,  2365,     0,  2367,  2384,  1018,  2372,  1041,  1020,
    1040,     0,  1031,  2181,  2184,  2192,  1677,   712,     0,     0,
    1648,     0,   534,     0,     0,     0,     0,     0,     0,  1617,
       0,     0,   571,     0,  1641,  1432,  1675,  1676,  1681,     0,
       0,  1681,     0,  1654,  1671,     0,  1681,  1612,     0,     0,
    1604,  1609,  1605,     0,  1611,  1610,  1613,  1601,  1602,  1677,
    1628,  1655,  1671,  1640,  1647,     0,  1627,  1634,     0,  1645,
    1671,  1671,  1681,  1681,   938,   937,   936,   932,   933,   938,
       0,  1597,  1325,     0,     0,  2469,  2483,  2467,  2478,  2479,
    2466,  1014,  2376,  1012,  2377,     0,     7,     4,  1687,  1685,
    1694,  1695,   730,   729,   525,   528,   527,     0,     0,  1851,
       0,   826,     0,  1669,   824,     0,     0,  1669,   353,  1669,
     407,   729,   838,     0,     0,   828,   957,     0,     0,   440,
    1004,   990,  1006,     0,   187,   189,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    77,    78,    94,   946,   945,     0,
     943,   969,   968,   966,     0,   967,   965,   960,   962,   963,
    2359,  2363,   535,   729,  1669,     0,   345,     0,     0,     0,
       0,     0,   534,     0,     0,  2409,   103,   782,     0,     0,
       0,  1583,  1511,  1579,  1513,  1831,     0,     0,     0,  1587,
       0,     0,  1402,  1401,     0,  1269,     0,     0,     0,     0,
    1292,     0,     0,     0,     0,     0,     0,     0,  1243,     0,
    1269,  1052,     0,  1201,     0,     0,     0,     0,     0,     0,
    1372,  1373,  1374,  1375,  1383,  1376,  1377,  1378,  1385,  1390,
    1379,  1380,  1386,  1387,  1388,  1381,  1389,  1384,  1382,  1391,
       0,  1371,     0,  1394,  1392,  1395,  1393,     0,  1264,  1256,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1401,     0,     0,     0,  1401,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1401,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1170,     0,  1823,  1822,     0,     0,     0,     0,  1131,     0,
    1130,  1334,     0,  2378,  2394,     0,  2198,  1259,  1261,     0,
    1054,  1053,  1055,  1066,  1059,  1064,  1057,  1061,     0,  1113,
    1908,  1067,     0,     0,  1095,  2393,  1410,  1096,  1081,  1086,
    1087,     0,  1084,  1085,     0,  1089,     0,  1088,  1092,  1093,
    1094,  1097,     0,     0,     0,     0,  1120,  1125,  1285,  1044,
    1824,     0,  1494,   417,   420,   419,  1505,   418,  1553,     0,
     912,     0,     0,    70,    72,  1710,  1707,  1706,  1708,  1712,
    1711,  1709,     0,  1721,  2301,     0,  2282,     0,  2286,  2280,
    2284,     0,     0,  2272,     0,  2278,  1400,  1982,  2058,     0,
    1403,  2245,  1519,  2487,     0,  1748,     0,     0,     0,   972,
       0,  1044,   450,   449,   448,   447,     0,   463,   445,     0,
      66,     0,     0,  1732,     0,     0,     0,     0,   949,  1530,
       0,  1725,     0,     0,     0,     0,     0,     0,     0,  2368,
    2386,  2385,  2373,  1044,  1422,  1045,  1045,  1820,  2186,  2189,
    2190,  2193,  2191,     0,  2188,  2187,  2202,     0,  1679,  1682,
    1683,     0,     0,  1663,  1657,  1656,  1652,  1658,  1653,  1666,
    1665,  1664,  1625,  1624,  1442,  1443,  1441,  1435,  1436,  1440,
    1439,  1620,  1672,  1662,  1660,  1650,  1681,  1661,  1659,  1606,
    1607,  1608,     0,  1431,     0,  1679,  1681,  1671,     0,  1681,
    1681,  1644,  1646,     0,   926,   935,   923,   930,  1343,  1342,
       0,  1299,     0,  1301,  1298,  1297,  1296,     0,  1342,  2473,
    2481,  2485,     0,  1431,  2383,  2381,   526,  1553,  1553,     0,
    1850,     0,     0,     0,     0,     0,     0,     0,   167,   176,
       0,     0,   351,   352,  1553,   350,   393,   394,   397,   398,
     399,     0,     0,     0,     0,     0,     0,     0,     0,   120,
     400,  1553,  1553,   347,   373,   374,   377,   378,   379,   380,
     381,   343,     0,   348,   908,   908,     0,  1553,  1553,   908,
    1553,     0,     0,  1553,  1553,     0,     0,  1553,     0,     0,
     908,     0,  1553,   906,     0,     0,  1553,  1553,  1553,  1553,
     908,     0,     0,  1553,   440,  1553,     0,     0,   918,     0,
       0,  1553,     0,     0,  1553,     0,  1553,   854,   905,   538,
     558,   559,   819,   853,   855,   867,   436,     0,   884,   907,
       0,   840,   842,  2433,  2434,  2435,   993,   985,   992,   989,
    1004,  1002,   991,   771,   770,     0,  1005,   185,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1509,   970,
     964,   112,   729,  1553,  1553,  1553,  1553,   349,   382,   383,
     386,   387,   388,   389,   392,   390,   391,     0,     0,  1669,
       0,     0,  2327,     0,  2461,     0,     0,     0,   165,   536,
       0,     0,   783,     0,     0,     0,     0,     0,  1403,     0,
    1834,  1586,  1325,  1590,  1589,     0,  1197,     0,  1236,     0,
    1238,  1239,  1240,     0,     0,     0,     0,     0,  1198,     0,
    1145,  1199,  1200,     0,     0,     0,     0,  1242,     0,  1176,
       0,     0,  1148,  1149,  1142,  1134,     0,  1215,     0,     0,
    1150,     0,     0,     0,     0,     0,  1216,  1287,     0,  1289,
    1824,     0,  1248,  1203,  1155,     0,  1246,     0,  1156,  1217,
    1218,  1219,  1182,  1205,  1206,     0,  1221,     0,  1207,     0,
       0,     0,     0,  1158,  1252,  1250,     0,     0,     0,     0,
    1254,  1191,  1160,     0,     0,     0,  1159,     0,     0,     0,
       0,     0,     0,     0,  1162,     0,  1143,  1251,  1253,  1211,
       0,  1171,     0,  2387,  1333,  2395,  1334,     0,     0,  2389,
    2379,  2384,  2392,  1135,     0,     0,     0,     0,     0,  1825,
    1060,  1065,  1058,  1062,  2393,     0,     0,     0,     0,  1079,
    1078,     0,     0,     0,  2393,  1410,  1082,     0,     0,  1232,
    1233,  1282,     0,  1497,  1495,  1506,  1551,  1552,  1554,     0,
    2325,   914,   913,  1502,   912,    73,     0,  1704,  1722,  1699,
    2337,     0,  2336,     0,  2320,  2323,  1831,     0,     0,     0,
    2255,  2249,  2256,  2258,  2252,  2257,  2259,  2250,  2251,  2246,
    2253,  1404,  1433,     0,   995,   997,   998,   996,  1004,     0,
       0,  2235,  2236,  2234,  2233,   453,     0,  1467,  1468,  1453,
    1454,  1452,  1455,   462,  1456,  1466,     0,   474,     0,   453,
    1734,  1733,     0,   979,   982,   983,   954,   953,   955,   948,
     950,   951,   518,  1536,     0,     0,     0,  1542,  1523,  1533,
       0,  1951,  2154,  2157,   241,   244,   243,   245,     0,     0,
       0,     0,     0,     0,  1039,  1325,  1483,  1036,  1024,  1433,
    1423,  1023,  1046,  1042,     0,  2185,     0,  2152,  2213,     0,
       0,     0,     0,     0,  2203,  1678,     0,  1629,     0,  1651,
       0,     0,  1622,     0,  1643,  1603,  1631,  1621,  1403,  1671,
    1618,  1619,   940,   939,   934,  1342,  1325,     0,     0,  1322,
    1344,     0,  1344,  1325,  1325,     0,  1325,  1396,  1339,     0,
       0,  2484,  1424,  2382,     0,     0,   822,   170,   173,   171,
       0,   172,     0,     0,   402,   401,     0,  1669,   395,   124,
     123,   125,   126,  1450,  1451,  1447,  1448,  1446,  1449,   128,
     127,   122,   837,     0,     0,     0,  1669,   375,   354,   355,
     358,   359,   360,   909,   812,   973,   888,     0,   604,   812,
     767,   772,   772,   886,     0,   973,     0,     0,     0,     0,
       0,   973,     0,     0,     0,  1553,     0,   899,   849,     0,
       0,     0,     0,     0,   900,     0,   850,  1553,     0,     0,
       0,     0,     0,   973,     0,     0,   438,     0,   973,   868,
     921,   920,   919,     0,   973,   973,     0,   564,   565,   563,
       0,     0,   556,   539,   729,   851,   437,   852,   603,     0,
     915,   600,   606,  1827,     0,     0,     0,   134,  2437,     0,
    1363,   188,    95,    84,    80,    99,  1460,  1461,  1459,  1457,
    1458,   100,    82,    83,    87,    86,    88,    89,    90,    85,
      91,    81,    92,   101,   102,    79,     0,     0,     0,     0,
    1669,   384,     0,     0,  1553,   344,   361,   362,   365,   366,
     367,   368,   369,   372,   370,   371,     0,  2328,  2330,     0,
       0,   338,   337,     0,   129,  2455,     0,     0,   603,   104,
     436,   537,   540,   805,   807,   806,   797,   796,   105,   107,
     109,  1512,  1589,  1325,  1422,  1832,  1403,     0,  1588,     0,
       0,  1237,  1270,     0,  1293,     0,  1139,   690,   690,  1280,
    1278,   675,   690,  1274,  1279,  1276,     0,   715,     0,   714,
       0,     0,     0,  1244,  1241,     0,     0,     0,     0,  1267,
       0,     0,     0,  1144,     0,  1227,  1249,  1247,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1255,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1132,  1044,  2396,  2398,  1015,     0,  2388,  2390,
    2199,  2200,  2201,   814,  1260,     0,  1076,  1072,     0,  1070,
    1409,  1091,  1090,     0,     0,     0,  1080,  1045,  1223,  1044,
       0,  1283,  1826,   416,   570,  1493,    71,  1702,  2334,     0,
    2345,     0,     0,     0,     0,     0,     0,     0,  2244,  1434,
    1563,     0,  1004,  1008,  1841,  1741,  2237,  2238,     0,   454,
     455,   457,  1045,   471,   451,     0,   443,   446,     0,     0,
     952,  1029,     0,  1555,  1540,  1547,  1541,     0,     0,     0,
    1539,  1816,  1815,  1822,  2371,     0,     0,  2265,     0,     0,
       0,  2374,  1403,  1403,  1477,     0,     0,  1021,  1026,  1022,
    1025,     0,  1043,  1050,  1049,  1817,  1824,     0,     0,     0,
       0,   717,   716,   725,     0,     0,     0,  2198,     0,   721,
     723,   722,  2208,   720,  1680,  1431,  1639,  1638,  1438,  1437,
    1614,  1431,  1633,  1681,     0,     0,  2378,  1337,     0,  1324,
    1323,  1345,     0,  1325,  1344,  1344,     0,  1304,  1303,  1567,
    1570,     0,  1302,  1361,  1327,  1029,  2474,  2486,     0,   728,
     727,   569,   724,   568,   175,   174,   180,   181,   422,   408,
     421,   396,   121,   409,   410,   376,     0,   356,   605,   813,
     871,     0,     0,     0,   772,   599,   812,   781,   773,   812,
     812,     0,     0,   549,   546,   890,   552,   869,   861,   870,
     881,   883,     0,   548,   566,     0,     0,   554,   812,   856,
     897,   898,   912,   543,     0,   579,   580,   578,   560,   567,
     544,   545,   892,     0,  1418,  1420,  1428,   551,   550,     0,
     547,     0,   903,   876,     0,   577,   575,   572,   574,   573,
     576,   555,   553,   866,     0,   908,   908,   885,     0,   587,
     588,   590,   591,  1830,     0,   917,   887,     0,   592,   601,
     593,     0,     0,     0,   144,     0,     0,   839,     0,   137,
     135,   146,     0,     0,     0,  1366,     0,  1367,  1364,  1365,
       0,    96,    98,   415,   414,   413,   412,   385,     0,     0,
       0,  1669,   363,  2329,     0,     0,  2462,   341,   339,   340,
       0,     0,   190,   585,   586,   584,   583,     0,   425,     0,
    1879,   423,     0,   435,     0,  1752,   729,   541,     0,     0,
       0,     0,  1403,  1444,  1835,  1582,     0,  1172,  1294,     0,
       0,   691,  1271,   737,     0,  1281,   677,   676,  1273,  1275,
    1277,  1138,  1146,  1214,  1141,  1140,     0,     0,     0,  1179,
    1180,  1265,  1268,     0,     0,  1152,     0,  1154,     0,     0,
    1229,  1204,  1220,  1183,  1208,     0,  1157,  1133,     0,  1184,
       0,  1189,  1187,     0,  1161,     0,     0,  1168,     0,  1166,
       0,  1167,     0,  1169,  1210,  1212,  1335,  2397,  1016,     0,
       0,  1262,  1068,     0,  1077,  1074,     0,  1071,  1046,  1234,
    1224,     0,  1700,  2335,     0,  2270,  2322,  2321,  2338,  2338,
    2338,     0,  1405,     0,  1520,   999,  1004,  1008,     0,  1000,
    1752,   458,     0,     0,     0,   478,     0,   476,   444,   980,
    1044,  1537,  1549,     0,  1557,     0,     0,  1534,  1544,     0,
       0,     0,  1543,   242,     0,  2262,  2263,  2261,  1433,  1411,
       0,     0,  1489,     0,  1484,  1037,     0,  1048,  1047,     0,
    2215,     0,  2214,  2226,  2227,  2224,  2225,  2223,  2204,     0,
    2210,  2209,     0,     0,     0,  2220,  2211,     0,     0,  1630,
    1632,  1626,   941,  2384,  1396,  1329,  1325,  1300,  1325,  1311,
       0,     0,  1325,  1307,  1305,  1309,     0,  1403,     0,  1326,
    1358,  1044,  1819,  1425,  1428,   357,   873,     0,   812,   768,
     769,   781,     0,   781,   781,     0,     0,   860,     0,   961,
       0,   865,   725,   561,   896,   895,   562,     0,   858,     0,
    1429,  1430,  1421,   439,   857,   878,   863,  1721,   889,   603,
     916,   749,   671,   620,   611,   690,   614,   613,   657,   628,
     625,   675,   673,   643,   675,   675,   650,   649,   667,   653,
     633,   737,   737,   632,   670,   737,   654,   652,   656,     0,
     658,   675,   663,   651,   655,   672,   648,   645,   669,   690,
     627,   626,   629,   668,   737,     0,   661,   690,   694,   631,
     737,   744,     0,     0,   690,   692,  1829,   145,   133,     0,
       0,   841,   843,     0,     0,   844,  2439,     0,  2441,     0,
    1007,     0,    93,     0,     0,   346,   411,   364,  2331,     0,
     201,  1044,     0,     0,   191,   193,   194,     0,     0,     0,
     536,  1754,  1753,   424,   521,   542,     0,     0,     0,  1589,
    1584,     0,  1580,     0,  1295,     0,     0,     0,     0,   731,
     742,   740,   734,     0,   738,   739,  1272,     0,  1245,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1136,     0,
    1225,     0,     0,     0,     0,     0,     0,  1165,  1163,  1164,
    1433,  2378,   815,  1073,     0,  1235,     0,     0,     0,  2343,
    2343,  2343,  1562,  1561,     0,  1560,  1564,  1001,  1009,     0,
     456,   459,     0,     0,     0,   475,     0,   519,     0,     0,
       0,  1558,  1546,  2375,  1535,  1538,  1824,  2264,  1028,     0,
    1406,  1488,  1485,     0,  1478,  1480,  1482,     0,  1818,     0,
       0,  2219,  2205,   726,     0,     0,     0,     0,  2206,  1330,
    1328,  1338,     0,  1296,  1325,  1325,     0,  1296,     0,     0,
       0,  1569,  1422,  1571,  1362,     0,  1340,     0,  1427,     0,
       0,   872,     0,     0,     0,     0,     0,     0,   902,     0,
     915,   862,   882,   904,   694,   973,  1419,   877,   879,   949,
       0,   589,     0,   753,   619,   612,   630,   679,   674,     0,
     679,   679,   639,   657,   634,     0,   737,   647,   638,   659,
     662,   664,   666,   679,     0,   737,   636,   623,   679,   702,
       0,     0,     0,   698,     0,   747,     0,   705,   607,   695,
     697,     0,     0,   660,   737,   616,   745,   744,   618,   737,
     744,   679,     0,   693,   679,     0,   131,   136,   147,   148,
     832,  2438,     0,  2436,     0,  1003,  1368,    97,     0,     0,
     204,   202,   203,     0,   197,   199,   194,  2449,     0,  2456,
       0,     0,  2454,   426,   428,   436,   522,     0,     0,  1428,
     810,     0,     0,  1445,  1173,   688,   686,   689,   687,   733,
     732,   736,     0,   735,   744,     0,  1177,  1178,  1266,  1257,
    1202,     0,  1153,  1226,     0,     0,  1209,  1185,  1188,  1186,
    1192,  1193,  1036,  1036,   581,  2391,  1075,  1703,  2346,     0,
       0,  2342,  2340,     0,  2341,  2339,  2313,     0,  2268,  2269,
    2267,  2254,     0,     0,     0,  1044,   464,     0,   481,   480,
     477,  1433,  1548,  1550,  1556,  1545,     0,  1407,  1422,   718,
    1481,     0,  1038,  2217,  2216,  2218,  2212,     0,     0,     0,
       0,  1312,     0,  1316,  1321,  1317,     0,  1308,  1306,     0,
    1444,  1350,  1351,     0,     0,  1356,  1360,  1433,  1428,   875,
       0,   602,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   901,  1795,   891,   893,   859,     0,   864,   557,
       0,   752,     0,   757,   683,   684,   685,   640,   680,   682,
       0,   642,   610,   635,   665,   641,     0,   637,   624,   708,
     707,  1051,   700,   711,     0,     0,   706,   696,   704,   699,
     615,   617,   621,   622,   608,     0,   609,  1828,   138,   845,
     278,  2440,  1019,     0,  2445,   119,  2453,  2463,   201,     0,
       0,   142,     0,   192,   725,   195,  2375,  1752,     0,   431,
     784,     0,   809,     0,   786,   788,   743,   741,     0,     0,
    1228,  1230,  1336,   582,  2319,  2318,  2317,  2314,     0,     0,
       0,     0,     0,     0,  2344,  2348,  1559,     0,     0,     0,
     472,     0,   468,   470,     0,   506,   520,  1415,  1428,     0,
    1433,     0,  1486,  1479,  2222,  2221,  2207,  1331,     0,     0,
       0,     0,     0,  1369,  1568,  1346,  1346,  1357,  1341,  1426,
     874,     0,     0,   784,     0,     0,  1797,  1796,   915,     0,
     750,     0,   754,   755,   756,     0,   748,   681,     0,   816,
       0,   710,  1051,   703,     0,   140,   304,     0,   290,   276,
       0,     0,     0,   280,   149,   152,   150,     0,   151,   157,
       0,   158,   159,   160,   161,   162,   153,   302,   303,   156,
     154,   155,     0,  1844,     0,  1845,  2443,     0,     0,  2442,
     168,   198,     0,     0,   134,   143,  2457,   709,   429,   427,
       0,  2371,     0,  1553,   106,   785,   801,   800,   790,  1428,
       0,     0,   108,   787,   803,   794,   110,   789,   802,   792,
     678,  1151,  2315,  2349,  2352,  2350,  2351,  2353,  2347,     0,
    1742,  1045,     0,   465,   466,     0,   484,     0,  1553,     0,
       0,  1553,  1553,  1553,  1553,   499,   507,   509,     0,  1416,
    1417,     0,  1412,  1414,  1408,  1469,   719,  1755,  2378,  1313,
       0,  1318,     0,  1310,     0,     0,  1354,  1352,     0,   784,
     594,   786,   788,   894,     0,   751,     0,     0,   737,     0,
     737,   701,   139,     0,   132,     0,     0,   289,   292,     0,
       0,   295,   285,   284,   286,     0,   279,   278,   278,   332,
     283,   329,   328,   321,  2375,     0,     0,     0,  2464,   200,
    1044,   146,     0,   433,   432,   799,     0,   791,   808,   811,
       0,   795,   793,  1565,  1573,     0,   718,     0,   473,   472,
     469,     0,   482,     0,  1553,  1553,     0,     0,     0,     0,
       0,   479,   508,  1553,  1428,     0,  1027,     0,  1763,  1332,
       0,     0,  1370,     0,  1347,     0,     0,     0,   598,   597,
     595,   596,     0,   763,     0,   762,     0,   759,   758,   644,
     817,   646,   141,   305,   316,   319,   311,   291,     0,     0,
       0,   281,   278,     0,   265,   263,   264,   270,   271,   272,
     273,   274,   275,   266,   269,   267,   268,   278,     0,   209,
       0,     0,  2444,     0,  2446,     0,   178,   177,   169,     0,
     278,  2450,     0,  2458,  2375,   798,   804,     0,     0,  1743,
     460,   467,   492,   485,   488,     0,   517,     0,     0,  1464,
    1462,  1463,   513,  1465,   514,   512,   510,   503,     0,   501,
       0,  1413,  1470,     0,     0,     0,     0,  1756,  1758,     0,
    1487,  1315,  1320,  1349,  1348,  1363,     0,   880,   765,   766,
     764,     0,     0,     0,     0,   278,   312,     0,   287,     0,
       0,     0,     0,   207,   335,     0,   205,   323,   323,  2447,
    2448,   179,  2465,     0,   148,   168,   434,  1572,  1574,  1769,
     492,     0,   490,     0,   486,   483,   487,   515,   516,     0,
     500,     0,   511,     0,     0,     0,     0,     0,  1757,     0,
       0,  1764,  1766,     0,     0,     0,     0,   313,   319,   309,
     317,   278,     0,     0,   277,   296,   331,   208,     0,   333,
       0,   278,     0,   322,   324,   326,     0,   130,  2459,     0,
    1755,   489,     0,   497,   493,   495,   498,   506,   505,   502,
    1044,  1761,  1762,     0,  1759,     0,     0,  1765,  1355,  1353,
     761,   760,     0,   310,     0,     0,   308,   288,   293,   278,
       0,   278,   220,   219,     0,   211,   259,   330,     0,   210,
    2451,   278,     0,  1763,   491,     0,     0,   504,     0,     0,
    1473,  1475,  1760,  1768,  1767,   314,     0,   278,     0,   278,
       0,   278,     0,     0,     0,     0,     0,   206,   278,  2460,
       0,  1771,   496,   494,  1045,  1471,  1044,     0,   306,   278,
     294,   299,   336,     0,   214,   260,   261,     0,   217,  2452,
    1770,     0,  1775,  1476,  1474,   278,   278,   295,   298,   334,
       0,     0,   212,   213,   225,   224,   216,     0,     0,     0,
    1782,   278,   278,   300,   233,   231,   278,   221,   229,   223,
       0,   230,   262,   218,  1773,  1774,  1772,  1777,     0,     0,
    1779,  1780,     0,  1744,     0,   215,   232,  1781,  1776,     0,
    1783,  1785,     0,   222,  1778,     0,  1044,  1784,     0,  1045,
    1786
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    56,   575,  1377,    57,    58,    59,    60,    61,  1249,
      62,   774,  1186,  1663,  1664,    63,   515,    64,   971,  1434,
    1435,  2840,  2841,  1436,    65,  1989,  2878,  2879,  2880,  1453,
     485,   486,  1848,  1849,   996,  2861,  2827,  3588,  2831,  3695,
    3824,  3734,  1921,  3165,  3589,  3590,  3704,   510,  1987,  1391,
    3848,  1828,  3948,  1829,    66,   605,   969,  1413,  1414,  3183,
    3184,  3421,  3185,  3413,  3414,  3415,  3416,  4071,  3922,  4016,
    4072,  4144,  4180,  4186,  4187,  4114,  4196,  4197,  4198,  4184,
     841,  4199,    67,   538,   539,   843,  1277,  2234,  1278,    68,
    4115,  4182,  3923,  3924,  3831,  3925,  3707,  3926,  3835,  3927,
    3710,  3928,  3929,  3930,  3931,  4063,  3932,  3830,  4107,  3919,
    3920,  4109,  4161,  4178,  3933,  3717,  3825,  4003,  3718,  3826,
    4058,  3915,  4059,  4102,  4157,  3916,  4004,  4105,  4007,  3934,
    3940,  4073,  3935,  3941,  3936,  3722,  3842,  3939,  3840,  3938,
    4111,  4068,  2473,  2860,   593,   594,   616,  1979,   595,   985,
     944,  1393,  1861,  1862,  2338,  2339,  2455,  2456,  2457,  1853,
    1854,  1855,  1967,  1968,  1969,  1835,  1836,  1837,  1397,  1832,
    1833,   596,   945,   955,  1856,  1857,  1858,  2461,  1971,  1972,
    1973,  1974,  1859,  1656,  1860,  2729,  2479,  2871,  3606,  3193,
    3741,  3954,  2872,  2873,  2406,  2789,  2386,    69,   527,   821,
    1246,  2208,  1247,  2618,  2619,  2620,  1702,  1703,  3486,  1707,
    2207,  3640,  3869,  3641,  3642,  2622,  3773,  2626,  2986,  2987,
    3264,  3488,  3645,  3965,  3871,  4035,  3963,  4031,  3964,  4033,
    4126,  4084,  4085,  3881,  3978,  3979,  4039,  4087,  3785,  3786,
    3787,  2227,  2631,  3491,  3427,  1961,  1383,  1384,   487,   488,
     489,   613,  2480,  1908,  2481,  2482,  2804,  1910,  1911,  2593,
    1311,  2801,  2778,  3462,  2867,  2808,  2809,  2810,  2811,  2812,
    2818,  2745,  2347,  2348,  2411,  2821,  3604,  3349,  3364,  3149,
    3150,  3151,  3152,  3153,  3154,  3155,  2895,  2896,  3557,  3558,
    3559,  2891,  2892,  3394,  3378,  3379,  3380,  3605,  3572,  3213,
    2672,  2673,  3652,  2681,  2682,  2720,  3030,  2721,  1387,  3214,
    3215,  3216,  3388,  3381,  2820,  3343,  3550,  3553,  3686,  3907,
    2349,  2746,  2350,  2749,   900,   490,  2351,  2352,  1467,  1468,
    3744,  3752,  3756,  3745,  3757,  3753,  3746,  3747,  3748,  3759,
    3755,  2486,  3428,  3429,  2738,  2951,  3688,    70,  1401,   938,
     947,   943,   961,   600,  1402,  1922,  2417,  3400,   583,  1912,
    3335,  3079,  3339,  1913,  2758,  1914,  3066,  3321,  1915,  3095,
    3337,  3547,  2759,  2760,  1916,  1917,  1918,  3078,  3087,  3678,
    2353,   123,  2153,  2816,  2393,    71,  1359,  1354,    72,   912,
     907,   908,  1357,  1358,  1794,  2283,    73,   608,  1440,    74,
    1257,  2219,  2220,  2221,    75,   962,    76,    77,   609,  1447,
    1448,  1449,    78,  1242,   130,    79,   829,  1252,  1254,  1255,
      80,   604,   963,   964,   965,   966,  1927,    81,  1694,  2184,
    2185,  2186,  2187,  1410,  2419,  1411,  1412,  1936,  2979,    82,
      83,   572,  2108,   544,   850,   545,   546,  1734,  2247,  3463,
     861,   862,   863,  2657,  1289,  1290,  1291,  2252,  2662,  1041,
     739,   740,   741,   742,  1134,  1135,  3382,   743,  1144,  1622,
     744,   745,   746,   747,   748,   749,  1649,  2919,  2920,  3230,
    2138,  2139,  2140,   750,  2026,  2906,  2039,   751,  1127,  1607,
    1539,  3222,  2911,  1484,  2009,  2516,  2590,  2102,  1066,  1067,
    1031,  2016,  1490,  1801,  1802,  1803,  1804,  1805,  3309,  3308,
    3310,  3658,  3512,  3660,  3516,  2294,  1806,  1807,  2695,  3510,
    3798,  2103,  2104,  2105,  3240,  2696,  3046,  2714,  2715,  3527,
    2285,  1808,  2702,  3806,  3524,  3525,  3897,  3896,  3526,  3314,
    3315,  3059,  3060,  2836,  2837,  2838,  3662,  1530,  1531,  1537,
    1229,  1230,  1485,  2182,  2607,  3498,  3649,  2129,  3280,  3647,
    3792,  1919,  2784,  2785,  2249,  2250,  2718,  3063,  3092,  1314,
    3464,  2609,  1767,  1768,  3202,  4185,  2730,  2431,  3972,  2204,
    2205,  3886,  4043,  4129,  4130,  4131,  3012,  3013,  3284,  3285,
    2251,  2654,  3014,  3499,  3797,    84,   494,    85,  1661,  2144,
    1183,  2158,   973,  1471,  1472,   762,   507,    86,   516,  2183,
      87,   534,  1720,   813,   833,  1260,  1261,  2228,  2632,  2639,
    2229,  2644,  3273,  2634,  2991,  2992,  2148,  2149,  2635,  2994,
    3270,  3254,  3255,  2974,  3483,    88,   560,  3057,  2709,  2710,
    3863,  3864,   834,    89,   493,  1018,  1998,  1477,  1997,  1019,
    1020,  2000,   634,   635,    90,   914,   557,  1336,  1337,  1338,
    1783,    91,   549,   901,  2685,  2691,  1762,   825,  1179,  1318,
     904,  1319,  1748,  2267,  1300,    92,   934,   933,    93,   579,
    1379,    94,   775,  1202,  1673,  2597,  2962,  1203,  1204,  2159,
      95,   535,   838,   839,    96,   529,   826,  1713,    97,   520,
      98,    99,   817,  2980,  3866,  4029,   524,  1696,  1238,  3194,
    3888,  3987,  3988,  3990,  4051,  4052,  4080,  4172,  4206,  4190,
    4209,  4210,  4213,  4220,  4221,   753,   921,   754,  3542,   755,
     756,  2640,  2641,  3064,   757,  2642,   758,  2739,   974,  1474,
     513,   465,   590,   922,  2615,   760,  3724,   941,   989,   467,
     468,   100,   865,   548,  1293,  1294,  1295,  1743,  1744,   905,
    2117,  1745,  1746,  2264,  2259,  3292,  3036,  3028,   101,   818,
     472,  1240,  1241,  2193,   102,   559,   103,  1231,  1690,  1691,
    2179,  2606,  2180,   104,   846,   105,   800,  1684,   801,  1207,
     802,   803,  1221,  1215,  1224,  1218,  3628,  3475,  3476,  2167,
    1182,   990,   991,  1676,  2161,  2162,  3249,  3478,  2965,  3634,
    3635,   106,   131,   475,   611,   980,  1283,   107,   108,   109,
     110,  1286,  1372,  2243,  1373,  2109,  1374,  1375,  1815,  1732,
    1603,  1604,  2949,  1124,  1125,  2112,  2563,  2564,   864,   620,
    1006,   998,   124,   125,   126,   623,   624,   127,   959,   960,
    2418,  2833,  3167,  3403,  3404,  3594,  3729,  1000,  3600,  4023,
    4148,  1001,  1002,  2862,  3602,  3852,  4025,  4121,  1003,  2470,
    3180,  3730,  3950,   111,   923,   569,  1370,  1365,  1367,  1811,
    2301,   112,   113
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3643
static const int yypact[] =
{
    4338,  2059,   758, -3643,  -142,   753, 42290,   696,   865,   865,
     407,  2756, -3643, -3643, -3643, -3643, -3643,  2507, -3643, 42290,
     758, -3643, 22960, -3643, -3643,   642,   150,   203,   865,   758,
   -3643, 42290, -3643,   587,  1135,   758, -3643, -3643, 37610, -3643,
     407, 42290, -3643,   798, -3643, 37610,  1072,   940,   708,   759,
    1047, -3643, -3643, 42290,   908,  -122,  1352,  1341, -3643, -3643,
    1183, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, 23549, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643,  1385, 42290,  1435, 42290, -3643,  1395,
   42290, 35855, 42290,  1104,  1493, -3643, -3643,  1544, -3643, -3643,
     865,   407, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643,  1056, -3643, -3643,  1166,
   -3643, -3643, -3643, -3643, -3643,  1698,  1512, -3643,  1556, 35855,
   -3643, 42290, -3643, -3643, -3643,   905, -3643,  1226, -3643,  1248,
    1538,  1571,  1595,   108, 11002,  1557,  1557,  1557, 42290,  1596,
    1557,  1557, 42290, -3643,  1557, -3643,  1557,   865, -3643, -3643,
    3557, 42290,  1467,   196,   568, 35855,   236, 42290, -3643, -3643,
   11002, -3643,  1611, -3643, -3643, -3643,   865,  1778,  1660,   922,
   42290, -3643, -3643,   865,   932,    18,  1289, -3643, -3643,  1416,
   -3643,  4422,   168, -3643, -3643, -3643,  2109, -3643, -3643,  5463,
    1416, -3643, -3643, -3643,  1284, -3643, -3643, -3643, 42290,   865,
    1587, -3643, -3643,   314,   314,   314, -3643,   314, -3643,   314,
   -3643,  -122,  1299, -3643, -3643,  1308, 42290,   562,   660, -3643,
   -3643,  1282,   668, -3643,  1364, 32930, -3643, 42290, -3643, -3643,
   -3643, -3643,  1555, -3643, -3643, -3643,  2083, -3643, 22960, 42290,
    1456, -3643, -3643, -3643, 22960,  1321, 42290, -3643, 22960, 22960,
     207,    22,  1027, 42290, 42290,  1764, -3643,  1939, 32930,  1545,
   -3643,   340,   685,  1544,  1945, -3643,  1512, -3643, 42290, 42290,
   42290, -3643, -3643, -3643, 38195,   108,  1372,  1389,  1392, 15244,
   -3643,  1398,  1407,  1412, 11002,  1418,  1421,  1425,  1442,  1444,
    1448,  1479,  1486,  1500,  1500,  1506,  1511,  1517,  1531,  1081,
    1546, -3643,  1550,  1565,  1570, -3643, -3643,  1578,  1583,  1610,
   -3643,  1614,  1621,  1623, 11608,  1628,  1637, -3643, 20011,  1643,
    1645,  1650,  1658,  1674,  1676,  1678,  1699,  1702, -3643, -3643,
   11002,  1704, -3643, -3643,  1706, -3643,  1714,  1718,  1726,  1728,
    1745,  1747,  1751,  1766,  1768,  1771,  1773,  1784,  1808,  1820,
    1822,  1824, -3643,  1508,  1841,  1844,  1656,  1846, -3643,  1857,
   -3643,   329,  1859,  1500,  1500,  1500,  1862,  1868,  1876,  1879,
    1899, 15244, 15244, 15244, 11002, -3643, 42290, -3643, 42290,   845,
    3287, -3643,  2954, 15244,   788, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643,  1401,  1499, -3643, -3643, -3643, -3643, -3643,  1902,
    1452,  1905, 42290, 42290, 42290,  1730, 42290, 42290, 35855,  1604,
   42290, 32930, -3643,  1557,  1576,  3720,  1804,  1761,  2391, -3643,
   -3643, -3643, -3643, -3643,  1915, -3643, -3643,  1781, -3643,  2057,
   -3643, -3643,   156, -3643,   101, -3643, -3643, -3643, -3643, -3643,
   -3643,  2066,  1904, -3643, -3643,   128, -3643, -3643, 42290, -3643,
   -3643, -3643, -3643,  2079,  2040,   845,  2483,   979, 22960, -3643,
     839, -3643,  -181, -3643, -3643,  2269, -3643, -3643, 32930, 22960,
   -3643, -3643, -3643, 20600, -3643, -3643,  2487, -3643,  1935, -3643,
   -3643,  1499,  3676, -3643,  1804,  2197, -3643,  2206,  2105,    22,
    2006, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643,  1960,  2109, -3643, -3643, -3643, -3643,  2404, -3643,  2117,
      21, -3643,  1980,  1957,    21, 33515,  2331,  1231, -3643,   264,
   -3643,  2406, -3643, -3643, -3643, -3643,  2112,  2097, -3643, -3643,
     355,  2209, -3643,  2453, -3643,    37, -3643,  2127,  2331,    21,
    1231, -3643,  2357,  2482,   565,  -145, -3643, -3643,   893, -3643,
   -3643,  2551, -3643, -3643, 22960, -3643, -3643,  2079, -3643, -3643,
   -3643,  2037, -3643,  2302,  2155, -3643, -3643,    53, -3643,  2076,
      -1,  2537, -3643,   747, 34100, -3643, -3643, -3643,  2576,  2592,
    1500,  2092, -3643, -3643, -3643,  2697, -3643, -3643,  2115,  2619,
    2619,  2619,  2721, -3643, -3643, -3643, -3643, -3643,  2296,  2172,
   -3643,  1456, 22960,  2517,  2153, -3643, -3643,  2395, 11002, -3643,
   -3643,  4677,   248, -3643, -3643,   484, -3643,  2711,  2359, -3643,
   -3643, -3643, -3643,  2611, -3643, -3643,  2697,  2669,  2619,  2565,
    2176, -3643, -3643, -3643, -3643, -3643, -3643,   209, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643,   227, -3643, -3643, -3643, -3643,
   -3643,  1456, -3643, 22960, -3643, -3643, -3643, 22960, -3643,  2177,
   -3643,  2181, -3643, 11002, 11002,   322,  2726,  2783,  2783,  2783,
     845,  2220, 11002, 11002, 11002, 11002, 11002, 11002, 11002,   952,
    2195, -3643, -3643,  8578, -3643,  2196, 11002, 11002,  2285, 11002,
    1499, 11002, 24138, -3643,  3293, 11002,   341,  2672, 11002, 11002,
   11002, 11002,  3269, 11002, 11002, 24138,  2797,  2203, -3643,  2200,
    1114, 11002, 11002,  1402, 11002, 11002, 11002, 11002, 11002, -3643,
    8578, -3643, 11002, 11002, 11002, 11002, 15244, 11002, 11002, 11002,
   11002, 11002, 11002,  2783,  2783, 11002, 11002,  1415,  8578, -3643,
   11002,  1499,  1882,  1882, 11002,  1499,  7366, 11002, -3643, -3643,
   -3643,  2210, -3643, -3643, -3643, 24138,  2783,  2783, 11002, 11002,
    2726,  2726,  2726,   230,  2212,   749, 11002, 25316,  2208, -3643,
   -3643, -3643, -3643, 11002, 11002, 11002, -3643, 15244, -3643, -3643,
    1627, -3643, -3643, -3643, 12214, 15244, 15244,  2207, 15244, 15244,
   15244, 15244, 15244,  2560, 15244, 15244, 15850, 16456, 15244, 15244,
   15244, 15244,  1037,  2726, 35855, 15244, 11002, -3643, -3643, 42290,
   -3643, -3643, -3643,  2211, 22960,  1604, -3643, -3643,   -74,  2673,
   -3643, -3643,  2215, 22960, -3643,  2221, -3643,  2567, -3643,  2568,
    2578,  2580, -3643, -3643, -3643, -3643,  2799,  2585, -3643, -3643,
    2587, -3643, -3643,  2249, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643,  2346, -3643, -3643, -3643,  2255, -3643, 32930,  2255, -3643,
   -3643,  2255, -3643, -3643,  2255,   748,  4524, -3643, -3643, 42290,
   -3643, 42875, -3643, 20600,  -142, -3643, -3643, -3643,  2600,   301,
    2256, -3643, 22960, -3643,    86,    86,  2492,  1432, 35855, -3643,
   -3643,   173,  2262,  2338,  2266, -3643,  2342, 22960, 22960, -3643,
   -3643, -3643, -3643,    18, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643,  2268,  2728,  2278,
   32930,   800, -3643, 42290, -3643,  1439, -3643, -3643, -3643,  2281,
   -3643, 11002, -3643,  2284, -3643,   107,  2654, -3643,  -142, 11002,
   -3643,  2294,  1512, 42290, 42290, 42290, 22960, 42290, 22960, -3643,
      24,    24, -3643, 31175, -3643, -3643, -3643, -3643,    21, 42290,
   42290,    21, 32930, -3643,  1231, 42290,    21, -3643,  2663,  2388,
   -3643, -3643, -3643,  2727, -3643, -3643,  2723,  2303, -3643,  2654,
   -3643, -3643,  1231, -3643, -3643, 22960, -3643, -3643,  1231, -3643,
    1231,  1231,    21,    21,  2354, -3643, -3643,  2305, -3643,  2354,
    2443, -3643,   814,   314,  2541, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643,    74, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643,   151, -3643, -3643, -3643,  2082,  2786, -3643,
   35855,  2232,   494,   941,  2232,  1018,  -142,   171, -3643,   171,
   -3643,  2554,  2574,   204, 22960, -3643,  2311, 38780, 22960, -3643,
   -3643, -3643,  1268,  2319,  2322,   845,  2771,  2775,  2777,  2781,
    2784,  2787,  2789,  2793,  2794,  2796,  2807,  2810,  2815,  2816,
    2822,  2826,  2829,  2831,  2349, -3643, -3643, -3643, -3643, 22960,
   -3643, -3643, -3643, -3643,  2379, -3643, -3643, -3643, -3643,  2258,
   -3643, -3643, -3643,   155,  1465,  2405,  2428,   125, 32930,  2805,
   42290, 42290,  1512, 42290, 42290, -3643, -3643,  -147,  2646,  2649,
    2650,  2399, -3643, -3643, -3643,  1155, 42290,  2817, 27665, -3643,
     364,   442, -3643,  2783,  2401, -3643,  2403,  2407,  2408, 11002,
      77,   222,   761,  1334,   510,   880,   380,   290, -3643,  2409,
    2411, -3643,   971, -3643,   384,   426,   988,  1084,  2415,  2424,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
    2832, -3643,   861, -3643, -3643, -3643, -3643,  2426, -3643, -3643,
    1139,   446,   452,   251,  2436,   463,  1174,  1309,  2432, 24138,
   42290,  2783,  2433,  1159,  1167,  2783,  2434,   513,  1171,  1345,
    1472,  1519,  1177,  1190,  1200,   545,  1552,  3218,  1225,   833,
     843,   849,   889,  1240,  2438,  2439,   899,   199,  2783,  2440,
    1250,   278,  2435,  2441,  1271,  9184,  9790, 10396,   693,   915,
   -3643,  2444, -3643,  2200,  2448,  2450,   320,  1276, -3643, 11002,
   -3643, -3643,   783,    93,  2495,   191,   842, -3643,  2598, 42290,
    2143,   166, -3643, -3643, -3643, -3643, -3643, -3643,   797, -3643,
    2455, -3643,  2458,  1688,  2461, 11002,   260,  2461,  2241,  2138,
    2138, 15244,  2823,  2651, 11608,  1039, 11608,  1039,  2461,  2461,
    2461, -3643, 15244,  2466, 15244, 15244, -3643,  2726,   845,  2452,
    -217, 42290, -3643,   -74, -3643, -3643, -3643, -3643,    76, 32930,
     111, 22960, 35855,  2467, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643,  4163, 22960, -3643, 42290, -3643,  2544, -3643, -3643,
   -3643, 21189, 21189, -3643, 21189, -3643, -3643,   311,   312,  3069,
    2497, -3643, -3643, -3643, 22960, -3643,  2852,   604, 22960,  2311,
    2474, -3643, -3643, -3643, -3643, -3643,  1361,  2581, -3643,  2475,
   -3643, 11002,  -142, -3643, 32930, 32930, 22960, 22960,   962, -3643,
    1242, -3643,  3676, 17062,  2887,  2899, 21189, 21189, 21189, -3643,
   -3643, -3643, -3643, -3643,  1351,   845, -3643,  2476, -3643, -3643,
   -3643, -3643, -3643, 39365,   185, -3643, -3643,  -142,  2906, -3643,
     845,  2489, 42290, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,   577, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643,    21, -3643, -3643, -3643,
   -3643, -3643,  2702,  2331,  2209,  2906,    21,  1231, 22960,    21,
      21, -3643, -3643,  1783, -3643,   893, -3643, -3643, -3643, -3643,
   42290,   904,  2641, -3643,  2494, -3643, -3643, 22960, -3643,  2496,
   -3643,  2922,  3059,  2331, -3643, -3643, -3643,    76,    76,  2785,
   -3643,  -142,  2622,  2628,  2629,  2631,  2632,  2671, -3643, -3643,
    -142,  -142, -3643, -3643,    76, -3643,  1207, -3643, -3643, -3643,
   -3643,  -142,  -142,  -142,  -142,  1631,  -142,  -142,  1573, -3643,
   -3643,    76,    76, -3643,  1767, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643,  1152, -3643,  2246,  3051,  2754,    76,    76,  3051,
      76,  2755,  2757,    76,    76,  2599,  3001,    76,  2892,  2626,
    2323,  2894,    76, -3643,  2627,  3011,    76,    76,    76,    76,
    3051,  2770,  3096,    76, -3643,    76,  2773,  2776,   187,  2779,
    2782,    76,   877, 42290,    76,  2788,    76, -3643, -3643,  5363,
   -3643, -3643, -3643, -3643, -3643, -3643,  -101, 21780, -3643, -3643,
     174, -3643,  2729, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643,  2549, -3643, -3643, 11002,  2552,
    1631,  -142,  -142,  1064,  -142,  1631,  -142,  -142,  -142,  -142,
    -142,  1631,  1631,  -142,  1525,  -142,  1631,  4677, -3643, -3643,
   -3643, -3643,   163,    76,    76,    76,    76, -3643,  2144, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, 35855,  2883,  2072,
     -49, 35855, -3643, 42290, -3643,   376, 42290,  2553,  -129,  2695,
     403,   403, -3643, 22960, 22960, 22960, 42290,  2595,  2497, 27665,
   -3643, -3643,   814, -3643,  2543, 12820, -3643,  2556, -3643, 11002,
   -3643, -3643, -3643,   158, 11002, 11002,  3015,  2276, -3643, 34685,
   -3643, -3643, -3643, 11002, 34685,  2276, 11002, -3643,  2561, -3643,
    2931,  2940, -3643, -3643, -3643, -3643, 11002, -3643, 11002, 11002,
   -3643, 11002, 11002, 11002, 11002, 11002, -3643, -3643, 15244, -3643,
    2558,  2569, -3643, -3643, -3643,  2570, -3643, 11002, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, 11002, -3643, 11002, -3643, 11002,
   11002, 11002, 11002, -3643, -3643, -3643, 13426, 11002, 11002,  2575,
   -3643, -3643, -3643, 11002, 11002, 11002, -3643, 11002,  1403, 11002,
    1860, 11002,  1873, 11002, -3643, 11002, -3643, -3643, -3643, -3643,
   11002, -3643,  1601, -3643, -3643,  2199, -3643,   783,  2582, -3643,
   -3643,  1439, -3643, -3643,  2571,  2573,  2577, 35855, 11002, -3643,
   -3643, -3643, -3643, -3643, -3643, 15244,   332,  2583, 15244, -3643,
    2241,  3269,  3269,  1898, 11002,   260,  2241, 11002,  2591,  2584,
   -3643, 11002, 42290, -3643, -3643, -3643, -3643, -3643, -3643, 35855,
   -3643, -3643, -3643, -3643,   111, -3643,  2221, -3643,  2311, -3643,
   -3643,  1606, -3643, 32930,  2586, -3643,  2588,  2668,  2670,  2675,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643,  2331,  1242, -3643,  2596, -3643, -3643,  2395,  2683,
    2617,  2952, -3643, -3643, -3643, 42290, 15244, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643,  3169,  2614,  2615, 42290,
     845, -3643,  2689, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643,   736, -3643, -3643,  2621,  2621, 18831, -3643, -3643, -3643,
    3067,   -48,   -48,   -48, -3643, -3643, -3643, -3643,  2872, 32930,
    3044,  3046,  3050,   747, -3643,   459, -3643,   183,  3010,  2331,
   -3643,  3056, 36440, -3643, 28250, -3643,  2633,  3005,  2643,    76,
   30590,   914, 25904, 31760, -3643, -3643,  1064, -3643,    81, -3643,
   31175, 31175, -3643,  2912, -3643, -3643, -3643, -3643,  2497,  1231,
   -3643, -3643, -3643,  2652, -3643, -3643,   864,  3020,  3026, -3643,
    2905,   764,  2905,   864,   864, 24138,   814,  2738, -3643,  1631,
    2961, -3643, -3643, -3643, 35270, 32345, -3643, -3643, -3643, -3643,
    3165, -3643,  3167,   223, -3643, -3643,  1108,   941, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643,  1018,  1108,  1108,   171, -3643,   146, -3643,
   -3643, -3643, -3643, -3643, 24727,   758, -3643,   497, -3643, 24727,
   -3643,  1268,  1268, -3643, 24727,   758,  1064,  1631, 24727,  1631,
   39950,   758,  -142,  -142,  2184,    76,  1631, -3643, -3643,  3034,
   42290,  3038, 24727, 24727, -3643, 35855, -3643,    76,  1157,  1631,
    1064,  1064, 24727,   758, 24138,   903, -3643,  -142,   758, -3643,
   -3643, -3643, -3643, 22960,   758,   758,  1802, -3643, -3643, -3643,
    1631, 39950, -3643, -3643,  5132, -3643, -3643, -3643, 18242, 42290,
     325,   149, -3643,  2676,  1126,  1319,  2750,   292,  2678,  2681,
   40535,   845,  1631, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643,  -142,  1361,  1108,  1108,
    1465, -3643,  2936,  3097,    76, -3643,  2058, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643,  2774, -3643,  3275,  2864,
    2693, -3643, -3643,   295, -3643, -3643,  1313, 22960, 17653, -3643,
    2930, -3643,  3154, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643,  2691,   814,  2946,  1236,  2497,  2706, -3643, 11608,
    1288, -3643,   845, 11002,   845,  1586, -3643,  2703,  2703, -3643,
   -3643,  2705,  2703,  3081, -3643,  3082,  2708, -3643,  2712, -3643,
    1305,  2714,  2717,  1401, -3643, 11002, 11002,  1344,  1357,   -92,
     935,   960,   336, -3643,  1376,  3298, -3643, -3643,  1378,  1394,
    1396,  1409,   978,  1413,  1709, 11608,  1458,   388,   338, -3643,
    1460,   980,  1011,  1475, 11002,  1490, 11002,  1494, 11002,  1496,
    1515,  1535, -3643,  1960,  2199, -3643, -3643,  2719, -3643, -3643,
   -3643, -3643, -3643,  2713,   845,  2722, -3643, -3643, 11002, -3643,
     788, -3643, -3643, 15244,   343,  2724, -3643,   845, -3643, -3643,
    2725,  1401, -3643, -3643, -3643, -3643, -3643,  2746, -3643, 42290,
     778,  2732, 28835, 32930, 32930, 32930,  2730, 11002, -3643, -3643,
    2984, 22960, -3643,  3121, -3643, -3643, -3643, -3643,  2734,  2731,
   -3643, -3643, -3643,  2241,  3084,  2973, -3643, -3643,  2741, 32930,
   -3643,  2109, 24138, -3643,  2743, -3643,  2743,  1218,  2745,  1720,
   -3643, -3643, -3643,  2739,  2006, 17062,  3168,  2176, 32930, 32930,
   32930, -3643,  2497,  2497,   137,  2798,  3124, -3643, -3643, -3643,
   -3643, 41120, -3643, -3643, -3643, -3643,   918, 42290,  3105, 42290,
    7972, -3643, -3643,  3289, 11002, 32930,   -55,   842,    76, -3643,
   -3643, -3643, -3643, -3643, -3643,  2331, -3643, -3643, -3643, -3643,
   -3643,  2331, -3643,    21,  1783,  -187,    93, -3643,  1912, -3643,
   -3643, -3643,  3123,   864,  2905,  2905,  3125,  3016,   715,  2761,
   -3643,    76, -3643, -3643, -3643,  2109, -3643, -3643, 11002, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643,  1152, -3643, -3643, -3643,
   -3643,  2764,  3118,  3127,  1268, -3643, 24727, -3643, -3643, 24727,
   24727,   114, 39950, -3643, -3643, -3643, -3643, -3643, -3643,  2766,
   -3643, -3643,  1361, -3643, -3643, 32345,  -142, -3643, 24727,  2766,
   -3643, -3643,   213, -3643,  -142, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, 39950,  2768, -3643,  1449, -3643, -3643,  1778,
   -3643, 39950, -3643, -3643, 39950, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643,  2792,  2547,  2023, -3643,  2772,  2769,
   -3643, -3643, -3643, -3643, 42290, -3643, -3643, 22960, -3643, -3643,
   -3643,  4337, 42290,  2995, -3643, 11002, 11002,  3037, 42290,  3039,
   -3643,  3312, 42290,  3369, 39950, -3643,  2795, -3643,  2791, -3643,
    1722, -3643, -3643, -3643, -3643, -3643, -3643, -3643,  2800, 42290,
    1108,  2072, -3643, -3643,  -142,  1313, -3643, -3643, -3643, -3643,
    3041,  3043, 42290, -3643, -3643, -3643, -3643,  2921, -3643, 22960,
    3351, -3643,  2953, -3643,  2806,   129,  3462, -3643,  2808,  2809,
    2813, 27665,  2497,  3146, -3643, -3643,  3269, -3643,   845, 11002,
    1041, -3643, -3643,   201,  1156, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643,  2821,  3269,  3269, -3643,
   -3643,  2959, -3643, 11002, 11002, -3643, 11002, -3643,   884,  2824,
    2846, -3643, -3643, -3643, -3643, 11002, -3643, -3643,  3269, -3643,
   11002, -3643, -3643, 11002, -3643, 11002, 11002, -3643,  1541, -3643,
    1581, -3643,  1603, -3643, -3643, -3643,  2281, -3643, -3643,   749,
   42290, -3643, -3643,  1733, -3643, -3643, 11002, -3643, 36440, -3643,
   -3643,  3030, -3643, -3643,  3240, -3643, -3643, -3643,  -111,  -111,
    -111, 14032,   845,  3294, -3643, -3643, -3643,  3121,  3189, -3643,
     197, -3643, 42290,  2838,  1437, -3643,  1755, -3643, -3643, -3643,
    1960,  2830, -3643,    76, 14032,  2621,  2953, -3643, -3643,  1218,
   24138, 28250, -3643, -3643, 32930,  2176,  2176,  2176,  2331,  3243,
    2683,  2683, -3643, 26492, -3643, -3643,  2985, -3643, -3643, 29420,
   -3643,   -31, -3643, -3643, 15244,  1550, -3643,   845, -3643, 35270,
   -3643,   845,    76,  2841,  2842, -3643, -3643, 41705, 11002, -3643,
   -3643, -3643, -3643,  1439,  2983, -3643,   814, -3643,   864, -3643,
    3208,  3210,   864, -3643, -3643, -3643, 24138,  2497, 14032, -3643,
      55,  1960,   845,  2845,  1449, -3643,   -60, 11002, 24727, -3643,
   -3643, -3643,  2848, -3643, -3643,  3333,  3334, -3643, 24727,  2258,
   42290, -3643,  3289, -3643, -3643, -3643, -3643,  4337, -3643, 24138,
   -3643, -3643, -3643, -3643, -3643, 42290, -3643, 22960, -3643, 18242,
   -3643,  2853, -3643,  2703,  2703,  2703, -3643, -3643, -3643, -3643,
   -3643,  2705,  3075, -3643,  2705,  2705, -3643, -3643, -3643, -3643,
   -3643,   201,  1103, -3643, -3643,   201, -3643, -3643, -3643,   103,
    1314,  2705, -3643, -3643, -3643, -3643, -3643, -3643, -3643,  2703,
   -3643, -3643, -3643, -3643,   201,  2703, -3643,  2703,  2202, -3643,
     282,   122,  2703,  2703,  2703,  2854,  2847, -3643,   845,  3269,
    3381, -3643, -3643,  2996,  -142,  3325, -3643,  1776, -3643,  2859,
   -3643, 40535, -3643,  1631,  1018, -3643, -3643, -3643, -3643,  2993,
      66, -3643,  3023,  2863,  2865, -3643, -3643,  -142,  2869,  2876,
    5363, -3643, -3643, -3643,  3449, -3643, 42290, 42290, 42290,  2543,
   -3643, 31175, -3643,   515,   845,  2877,  2879,  2881,  2882,  3435,
     139, -3643,  3453, 34685, -3643, -3643, -3643,  1786, -3643,  2886,
    2888,   314,  2889,  1646,  1021,  1795,  3178,  3251, -3643,  3101,
   -3643,  1664,  1095,  1666,  1670,  1690,  1711, -3643, -3643, -3643,
     882,    93, -3643, -3643,  1805, -3643,  3234,  3149,   558,  2923,
    2923,  2923,  1550,   845,  1814, -3643, -3643, -3643, -3643,  3277,
   -3643, -3643,  2903,  2904, 42290, -3643,  2973,  2281, 24138, 14032,
    2907,  2908, -3643,    -1, -3643, -3643,  2897,  2176, -3643,  3463,
    3309, -3643, -3643, 35855,  2910, -3643, -3643,  3203, -3643,   212,
    3120, -3643, -3643, -3643,   -55,  2998,  3003,    76,   845, -3643,
   -3643,  2494,  2014,  2958,   864,   864,  2801,  2962, 11002, 11002,
    2932, -3643,  2946, -3643, -3643,   253,  2281, 11002, -3643,  1361,
    2973, -3643,  1729,  2935,  2937, 42290,  2938,  2943, -3643,  2834,
     325, -3643, -3643, -3643,  2202,   758, -3643, -3643,  2766,   736,
    2956, -3643, 42290,  3235, -3643, -3643, -3643,  -146, -3643,  2944,
    -146,  -146, -3643,  2117, -3643,  2967,   201, -3643, -3643,  2986,
   -3643, -3643, -3643,  -146,  2960,   201, -3643, -3643,  -146, -3643,
   35855,  -142,  2187, -3643,  3000, -3643,  3437,  3320, -3643,  2202,
   -3643,  3324,  3224, -3643,   201, -3643, -3643,  3533, -3643,   201,
    3533,  -146,  3226, -3643,  -146, 42290, -3643, -3643, -3643, -3643,
   -3643, -3643, 42290, -3643,   897, -3643, -3643, -3643,  1817,  -142,
   -3643, -3643, -3643,  2968,  2971, -3643, -3643, -3643,  1319, -3643,
   42290,  4337, -3643, -3643, -3643,  2930, -3643,  1009,  1825,  1449,
    2970,  1853,  1864, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, 34685, -3643,  3533,  3237, -3643, -3643, -3643, -3643,
   -3643, 11002, -3643, -3643,  3268,  3418, -3643, -3643, -3643, -3643,
   -3643, -3643,   183,   183, -3643, -3643, -3643, -3643, -3643,  3065,
    3070, -3643, -3643,  3071, -3643, -3643,   133,  2141, -3643, -3643,
   -3643, -3643, 14032,  3355,  3085, -3643, -3643, 42290,  3031, -3643,
   -3643,   882, -3643, -3643, -3643, -3643, 11002, -3643,  2946,  2184,
   -3643, 26492, -3643, -3643, -3643, -3643, -3643,  3007,  3008,  7972,
     749, -3643,  3042, -3643, -3643, -3643,  3047,   845,   845, 42290,
    3146, -3643, -3643,  1268,  1268, -3643,   253,   882,  1449, -3643,
    1881, -3643, 42290, 42290,  1885, 42290, 42290,   -48,   -48,   -48,
    1525,  1525, -3643, -3643, -3643, -3643, -3643,  3372, -3643, -3643,
    1903, -3643,   762,  3257, -3643, -3643, -3643, -3643,  -146, -3643,
     314, -3643, -3643, -3643, -3643, -3643,   314, -3643, -3643, -3643,
   -3643,  1500, -3643, -3643,  3278,  3048, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643,  3013, -3643, -3643,  3130, -3643,
   48140, -3643, -3643,  -122,  3040, -3643, -3643, -3643,  1054, 42290,
   22960,  3037,  3191, -3643,  3289, -3643,    -1,   129,  2953, -3643,
     411, 42290, -3643,  3280,   153,   810, -3643, -3643,  3022,  1757,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,   147,  3266,
    1631,  1631,  1631,  1631,  2141, -3643, -3643,  3068, 22960, 15244,
    3126,  1922, -3643, -3643,  1410,  2469, -3643,  1277,  1449, 11002,
    2331, 32345, -3643, -3643, -3643, -3643, -3643, -3643, 11002,  3027,
   11002,  3028,  1947, -3643, -3643,  3448,  3448, -3643, -3643, -3643,
   -3643,  1961,  1972,   411,  1974,  1991, -3643, -3643,   325,  3029,
   -3643, 42290, -3643, -3643, -3643,   286, -3643, -3643,  1997, -3643,
    2021, -3643,  1500, -3643, 11002,  3486,  3057, 42290,   144, -3643,
   49310, 49310, 42290, -3643, -3643, -3643, -3643,  5338, -3643, -3643,
     808, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643,  3606, -3643,  3032, -3643, -3643,  3035,   973, -3643,
   -3643, -3643,  4337,  3457,   292, -3643, -3643, -3643, -3643, -3643,
    3036,  2006,  -142,    76, -3643,   411, -3643, -3643, -3643,  1449,
    3049,  3274, -3643,   153, -3643, -3643, -3643,   810, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, 24138,
   -3643, -3643,  1361, -3643, -3643, 42290, -3643,  3122,    76,  3513,
    3516,    76,    76,    76,    76,  3045,  2469, -3643,  3496, -3643,
   -3643, 11002, -3643, -3643,   845,  3264, -3643,  3580,    93,   845,
   42290,   845, 42290, -3643, 42290,   866, -3643, -3643,  3247,   411,
   -3643,   153,   810, -3643,  2973, -3643,  1058,  1058,   201,   314,
     201, -3643,   845, 11002, -3643, 11002,  3077, -3643, -3643,  3473,
   42290, -3643, -3643, -3643, -3643, 11002, -3643, 48140, 48140, -3643,
   -3643, -3643, -3643,  3626,    -1,  3596,  3305,  3599,  2454, -3643,
   -3643,  3312,  4337, -3643, -3643, -3643,  1631, -3643, -3643, -3643,
     178, -3643, -3643,  3058, -3643,    76,  2184,  3060, -3643,  3126,
   -3643,  3064, -3643,  -142,    76,    76,  2280,  2280,  1361, 35855,
    3170, -3643, -3643,    76,  1449, 42290, -3643,   924,  3413, -3643,
    2033,  2044, -3643,  3623, -3643,  3624,  3072,  3076, -3643, -3643,
   -3643, -3643,  2046, -3643,  3667, -3643,   818,  3326,  3336, -3643,
   -3643, -3643,   845,   845, -3643,   143, -3643, -3643,  3460,  3538,
   11002,   845, 45215,  3080, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, 48725, 11002, -3643,
     808,  3606, -3643,  3337, -3643,  3339, -3643, -3643, -3643,  3562,
   48140, -3643,  3559, -3643,    -1, -3643, -3643, 24138, 14032, -3643,
   -3643, -3643,  3093, -3643, -3643,    -5, -3643,  -142,  -142, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,  2054, -3643,
   35855, -3643, -3643,  3652,  3653,  3555,  3656,   924, -3643,  -116,
   -3643, -3643, -3643, -3643, -3643, 40535, 40535, -3643, -3643, -3643,
   -3643,  3150,  3581,  3129, 11002, 48140, -3643,  3561, -3643,  3497,
    1871,  3441,  3103, -3643,  3104,  1597,  3594, 49310, 49310, -3643,
   -3643, -3643, -3643,  3576, -3643, -3643, -3643, -3643, -3643,  3282,
   -3643,  2064, -3643, 14638, -3643, -3643, -3643, -3643, -3643, 35855,
   -3643,  3170, -3643,  3119,   314,   314,  3674,   314, -3643,  3677,
    3678,  -116, -3643,  3128,  2068,  1058,  1058, -3643,   219, -3643,
     845, 45800,  3670, 42290, -3643, -3643, -3643, -3643, 11002, -3643,
   37025, 46385,  3132, -3643, -3643, -3643,  3288, -3643,  2454,  3518,
    3580, -3643,  3093, -3643,  3131, -3643,  2241,  2469, -3643, -3643,
    3133, -3643, -3643,   314, -3643,   314,   314, -3643, -3643, -3643,
   -3643, -3643, 11002, -3643,  3586,  3205, -3643,  3137, -3643, 48140,
    1811, 48140, -3643, -3643,  3536,  3138,  1569, -3643,  3135, -3643,
   -3643, 48140,  3688,  3413, -3643, 14638,  3141, -3643, 11002,  3142,
    3143, -3643, -3643, -3643, -3643,   845,  3694, 48140, 42290, 43460,
    3330, 46970,  3571, 42290,  4337,  3572,  3575, -3643, 48140, -3643,
     314,  3546, -3643, -3643,   845, -3643, -3643,  3244, -3643, 44045,
   -3643,  2373, -3643,  3185, -3643, -3643,  3647,  2265, -3643, -3643,
   -3643,  3425,  3166, -3643, -3643, 48140, 48140, -3643, -3643, -3643,
   30005, 11002, -3643, -3643, -3643, -3643, -3643,   747,    40, 19420,
    3316, 44630, 47555, -3643, -3643, -3643, 27080, -3643, -3643, -3643,
    3592, -3643,   845, -3643, -3643, -3643, -3643, -3643, 35855,  2071,
   -3643, -3643, 24138, -3643, 30005, -3643, -3643, -3643, -3643, 22369,
    3171, -3643,    76, -3643, -3643, 24138, -3643, -3643, 14032, -3643,
   -3643
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3643, -3643, -3643, -3643, -3643,    70, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643,  1622, -3643, -3643, -3643, -3643, -3643,
    1826, -3643,   606, -1680, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643,   607,  1451,  3160, -3643,   367, -3643,    52, -3643,
   -3643, -3643, -2739,   -64,  -236, -3643, -3643,   386,    20,  2843,
    -234, -3591, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643,   373,   372, -3643, -3643,   195, -3643, -3643, -1351, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643,  -419,  -370,  1685,
   -3643, -3643, -3643,  3754, -3643,  3250, -3643,  1158,  2080, -3643,
   -3643, -3643,   471,   211, -3643,   214, -3643,   215, -3643,   216,
   -3643,   217,   218,   220,   231, -3643,   232, -3643, -3643,  -368,
   -3643, -3643, -3643, -3643,   233, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643,  -238, -3643, -3643,   -89, -3643, -3643,  -230,   239,
   -3643,  -184,   241, -3643,   245, -3643,  -105, -3643,  -103, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643,  2855, -3643, -3643, -3643, -2126, -3643, -3643, -2013,  2445,
   -3643, -1655, -3643, -3643, -1658, -3643, -3643, -1628,   976, -3643,
   -3643,  1237,  -301, -3643, -1328, -1776, -1756, -3643, -3643, -3643,
   -1851, -1845,  -731,  2185, -1122, -2051, -3643, -3643, -3643,   235,
   -3643, -3643, -2402,  1923,  2442, -3643,  2431, -3643, -3643,  1059,
   -3643, -3643,  1223,  1640, -3643,   868,  2606, -1169, -3643, -3643,
   -3643, -3643, -3643, -3643,    78,   224,   -17, -3643, -3088,   588,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3642, -3643,
   -3643, -3643,  -270, -3643, -3643,  -185, -3643, -3643,  -226, -3643,
      71, -2168, -3643, -3643, -3643, -3643,  2412, -1245, -3643,  3375,
   -3643,  -496,   676,  1958, -2247, -1333, -3643,  -816,  -809, -2326,
   -3643, -3643, -3643, -3119,  1013,  1397, -3643,   773,  1959, -1785,
   -3643,  1466, -3643, -3643,   802, -3643, -2524, -3643, -3643, -3643,
     760, -3643,   763, -3643, -3643, -3643, -1161,   726,  -335, -3643,
     328, -2336, -2365, -3643,   553, -3643,   509, -3483, -3643,  -545,
   -1960, -2248,    23, -3643, -3643,   520, -2934,   870, -3643, -3643,
   -3643, -2933, -1770, -3643,    94, -3643, -3643, -3643, -3643, -2843,
   -3643, -3643, -1389, -2113, -3643, -3643,  3890,  3892,  -982, -2520,
   -2694,    95,    92, -3643, -3643, -3643,  2446, -1199,   160,   152,
     157,  1917, -1015,   300, -2224, -3643,   346, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643,  1998,  -666, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -2258,   835, -3643, -3643,  1513, -3643, -3643, -3643,
   -1700,  -483, -2003, -3100, -3643, -3643, -3643, -3643, -3643, -3643,
    1270, -3643, -3643,  2121,  2559, -3643, -3643, -3643, -3643, -3643,
   -3643,   584,  1705, -3643, -3643, -3643, -3643, -3643, -3643,   846,
    2478, -3643, -3643, -3643,   -11, -3643, -3643, -3643, -3643,  2213,
   -3643, -3643, -3643, -3643,  2520, -3643, -3643, -3643, -3643, -3643,
   -3643,  1322, -3643,  1744, -3643, -1362, -3643, -3643,   957,  -927,
    1692,  -564,  1829,   345, -3643,  3368, -3643, -3643, -3643, -1548,
   -1284, -3643,  3078,  -775, -2256,  2216,  -620, -1715,   981,  -640,
    2991, -3643, -1082, -1056, -3643, -3643,  -607, -3643, -3643, -3643,
    -612, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643,  1353, -3643, -3643, -3643, -3643, -1632, -3643, -3643,
   -3643, -3643, -3643,  1406, -3643,  1916, -3643,  -451, -3643,  2880,
   -3643, -3643, -3643, -2150, -1744,  1648,   900, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -2213, -3643, -3643, -3643,
   -3643, -3643,  1842, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -1608, -3643, -1793,   284, -3643,   427, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643,   -43,   784,   -42, -2412, -1045,  1605, -3643,
   -3643, -1208,  2918, -1901, -3643, -3643, -3643,  1823, -3643, -3643,
   -3643, -3643, -3643,   871, -2419, -1315, -3643, -3643, -2941,  -854,
   -2132,  -835, -3643, -2138,   444, -1727, -1677,  -456,    85, -1166,
   -3643, -3643, -3643, -3643, -3643,  -191, -3643, -3643, -3643,   465,
    1719, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643,  -536,  -667, -3643,  1973,  2377, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643,  2735,  2715,  1787, -3643, -3643,
   -2163, -3643, -3643,  1752, -3643,   710, -2207, -1710,   986, -3643,
   -3643,   982, -2997, -3643, -3643, -3643, -3643, -3643, -3643,   926,
   -3643,    26,  3426, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
    2509,  -999,  3352, -3643, -3643, -3643, -3643, -3643, -3643,  2204,
   -3643, -3643, -3643, -3643, -3643, -3643,  2680,  3443,  -546, -1197,
   -3643,  -517,  2655,  2214,  -832, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,  2321,   898,
   -3643, -3643, -3643,  2733, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643, -3643,  1020,
     -82, -3643,    14,  -121, -3643,   -46, -3643, -3643, -3643, -3643,
   -3643,  -216, -3643, -3643,  -218,  -639,  -926, -1273,   636, -1678,
   -1908,  1010,  2718, -2961,  -650, -1105, -1078, -1835,    59, -3643,
   -3643,  3188,    88,  1131,  -297,    -6, -2558,  -109,  -549, -3643,
   -2569, -3643, -3643, -3643, -3643,  2274, -3643, -3643, -3643, -3643,
    1336, -3643, -3643, -3643,   983, -3643,   722,   512, -3643, -3643,
     159, -3643,  2324, -3643, -3643, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643,  2744,  3478,  3182,
   -3643,  2804, -3643, -3643, -3643, -3643, -3643,   404, -3643,  1298,
   -3643, -1921,  2589,   578, -3643,  1436,  -241,  -500, -3643, -3643,
     397, -3643, -3643,   298,  3494,  3190, -3643, -3643, -3643, -3643,
   -3643, -2574,  -839, -3643, -3134, -2627, -1584, -3643, -3643, -2001,
   -2799, -3643, -3643,  -987, -3643, -3643, -3643, -3643, -1904, -3643,
   -3643, -3643,    89,  3556,  3558, -3643, -3643,   876, -3643,   598,
   -3643, -3643, -3643, -3643, -3643, -3643, -3643,  3422, -3643, -3643,
   -3643, -3643,  3423, -3643, -3643, -3643, -3643, -3643,  3424, -3643,
   -3643, -3643, -3643, -3643,  1536, -3643, -3643, -3643, -3643, -3643,
   -3643, -3643, -3643
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2433
static const yytype_int16 yytable[] =
{
     466,   997,  1005,   903,   899,   983,  1378,   929,  1380,   509,
    1591,  1287,   592,   508,  1042,  1044,   514,  1544,   526,  2110,
    1050,  2253,  1479,  1935,   533,   528,   464,  1026,  1068,  2203,
    1567,  1697,   540,  1469,  1470,   543,   942,  1592,  1178,   540,
    1769,  1315,  1309,   752,  1343,  2236,  2442,   561,  1932,  2773,
    2608,  1081,  2670,  2674,  2676,  1613,  1657,  2723,  2638,  2518,
    1813,  3313,  1621,  1315,  2521,  1838,  1509,  1344,  1909,  3045,
    3002,  1099,   972,   975,  1101,  2883,  1705,  1105,  2875,  2346,
    2707,   512,  2412,  1112,  1113,  1114,  2341,   581,  3161,  1623,
    1624,  2235,   133,  1627,  1628,  1629,  1630,  2494,  1632,  1633,
    1635,  1637,  1638,  1639,  1640,  1641,  2342,  2304,  2305,   584,
    2569,   466,  2769,  2282,   466,   591,   597,  2659,  2329,  1120,
    1121,  1122,  1385,  3318,  2316,  2747,  1970,  1776,  2462,  1386,
    1013,  1163,  2688,  2689,  2463,  1162,  2698,   586,  1816,  3495,
     588,  2334,  2335,  2893,  2708,  1786,  1227,  2898,  3333,  3627,
    3241,  2595,   580,  1789,  1790,  3386,  1700,  2356,  2357,  3440,
    2359,  2151,  3359,  2362,  2363,  2354,  1259,  2366,   473,  2358,
    1851,  1980,  2375,  1129,  1130,  2897,  2378,  2379,  2380,  2381,
    2373,  1129,  1130,  2385,   610,  2387,  2248,   525,  3352,  3357,
    2382,  2396,  3358,   532,  2400,  1851,  2402,   868,   869,  2337,
    2298,  2565,  1711,  2459,  1222,  2390,  1129,  1130,  2318,  3469,
    2741,  3366,  2737,  2423,  1129,  1130,   601,  3385,  2433,  2014,
    1219,  3209,  1181,  2460,  2439,  2440,  3742,  3072,  2146,  2444,
    3544,   518,  3530, -1359,  3210,  2877,  2686,  1129,  1130,  2750,
    2017,  1340,  2600,   868,   869,  1129,  1130,  1361,  3211,  3849,
    3075,  2414, -2380,  2446,  2447,  2448,  2449,  3947,  2496,   868,
     869,   806,   976,  2151,  1812,  1654,  1129,  1130, -1359,  1894,
    1382,  1840,  3493,  1298,  1382,  3010, -1399,  -430,   688,  1253,
    1228, -2316,  1382,  2733,  2734,  4005,  3503,  3410,  1759,   602,
    1368,  3033,  4034,  1129,  1130,  4204,  3411,  3148,  1739,  -821,
    1389,  2476,  3209,  -523,   835,  1129,  1130,  2946,   521,  3319,
    2451,  -524,  3248,   986,  1897,  3210,  3034,  3554,  2647,  1227,
    4032,   631,  2466,  4036,  1923,   570,  3828,  1313,  1164,  3211,
    1233,  1320,  1976,  2814,  1482,  1129,  1130,   132,   542,  2391,
     868,   869,  3191,  2726,  1760,  1352, -2380,  1129,  1130,   918,
     993,  1129,  1130,  1129,  1130, -2380,  3528,   810,  1129,  1130,
     978,  4005,  3043,  2655,  1108,  1834,  1740,  3289,  1462,  3953,
     615,  4049,  3646,  1459,  1460,  1461,   132,  2692,   632,  1129,
    1130,  2077,  3470,  1345,  2471,  2141,  1462,   246,  3290,   248,
    1834,  1990,  3743,  2142,  1463,  1129,  1130,  2845,  2846,  1129,
    1130,  4050,  1508,  1129,  1130,  2472,   809,  3555,  3668,  3816,
    3191,   836,  1464,  1437,  1991,  1068,  3044,  2128,  2857,  3291,
     522,  2829,  1325,  3563,  1353,   541,  1406,  3412,  1248,   603,
    1812,  3521,  3567,  1924,  1362,   979,  2830,  1809,   811,  1852,
    4124,  1129,  1130,  2852,  1653,  2656,  3556,  1533,  2483, -2380,
    1534,  3580,  2727,  1228,  1483,  1741,  3582,  1129,  1130, -2247,
   -2248,  1129,  1130,  3035,  1852,  1175,  3522,  1129,  1130,  2467,
     712,  3038,  3738,   591,  2997,   597,  3829,  4205,  1129,  1130,
     571,   606,  1369,   837,  3742,  3636,  1771,  3947,  3612,  1774,
    3049,  2372,   765,  1458,  1778,  1048,   597,  3011,  2815,  2706,
    1655,  2653,   633,  2404,  3058,   804,   812,  2260,  1838,   591,
    1654,   814,  1166,  1131,  1761,   919,  1132,  3082,  2858,  2751,
    1791,  1792,  3071,  2755,   827,  3073,  3074,  1341,  1129,  1130,
    1109,  1657,  2147,  1618,  2340,  3648,  1626,  2771,  2772,  2152,
    1814,  1441,  3320,   519,  3084,   977,  1131,  2782,  1285,  1132,
    3192,  3324,   915,  1647,  1131,  2817,  2261,  1132,  2741,  1742,
    1129,  1130,  2341,  3334, -2247, -2248,  1259,  1385,  2930,  3076,
     932, -1399,  2716,  2412,  1386,  2130,  1909,  1131,  3813,   591,
    1132,   946,  2342,  1493,  1494,  1131,  2133,  3669,  1132,  2136,
    2278,  1259,   581,   466,   807,  2885,  2652,  4030,   581,  1299,
     970,  2484,   581,   581,  1532,  2462,  1131,   984,   946,  1132,
    3065,  2463,   591,  1546,  3465, -1359,  2415,  1165,  3192,   957,
    3469,  1220,  1014,  1015,  1016,  1559,  1560,  1561,  1021,  3195,
    2754,  3070,  2756,  1131,  1566,  1348,  1132,  1385,  2127,  2767,
    1970,  2152,  1438,  2412,  1386,  1131,  3473,  1660,  1132,  1442,
    3743,  2458,  2779,  1443,  2015,  2766,  2687,   956,  2788,  1177,
    2947,  4166,  1839,   967,  1444,   896,   773,  2774,  1677,  -196,
    3737,  3360,  1069,  2802,  1223,  1131,  2742,  2697,  1132,  2503,
    2459,  2735,  2968,  2969,  2970,   819,  3441,  1131,  1701,  2731,
    1132,  1131,   830,  1131,  1132,  2842,  1132,   848,  1131, -1399,
    2460,  1132,  1712,  2660,  3189,  1981,  1699,  3793,  1129,  1130,
    3942,  3657,  1011, -2316,  1840,  1439,  2392,  1816,   916,  1131,
    3914,  1718,  1132,  1975,  2890,   994,  3902,  3005,  3006,  3007,
    1126,  1725,  1128,  3751,  3267,  1131, -1399,  -430,  1132,  1131,
    3346, -2316,  1132,  1131,  2850,  1655,  1132,  1133,  3212,  2882,
    2736,  3008,  3009,  3504,  1321,  1133,  1171,   466,  1173,  -821,
     946,   466,   591,  -523,   466,   591,  1312,  3344,  3345,  3085,
    2844,  -524,  1958,  1775,  3365,  2897,  1129,  1130,  2897,  2897,
    1133,  1131,  3368,  1172,  1132,  1445,  3269,  1176,  1133,  3391,
    1180,   523,  2847,  3470,  2262,  2897,  4057,  1131,  2113,  3176,
    1132,  1131,  1232,  2078,  1132,  3316,  1752,  1131,  3858,  3367,
    1132,  1133,   581,  3523,  3384,  3387,  3389,  3390,  1131,  1133,
    4026,  1132,   591,   581,   958,  3294,  2613,   581,  2638,  3212,
    3884,  1788,   920,  1598,  1599,  3303,  3274,  3338,  3177,  3307,
    1133,  3817,  1818,  2485,  3323,  1326,  1976,  1110,  1129,  1130,
    2859,  2024,  1439,  3383,  1598,  2043,  1164,  2465,  1129,  1130,
    1129,  1130,  3735,  1535,  1129,  1130,  1536,  1133,  1131,   591,
     618,  1132,  2958,   995,  2190,  2093,  3278,  1239,  1446,  1133,
    2743,  2082,  2083,  3742,  2890,  3909, -1399,  3911,  1256, -2247,
   -2248,   771,  3471,  3520,  2025,  1129,  1130,  1830,  3302,  2049,
    1131,  2216,  3306,  1132,  1129,  1130,  1798,  2983,   581,  1133,
    1250,  3050,  3051, -2432,  1129,  1130,   114,   828, -1831, -2247,
   -2248,  1133,  2270,  2099,  2100,  1133,  3226,  1133,  1381,  2274,
    1129,  1130,  1133,  1681,  1205,  2577,  2578,  3999,   562,  2915,
    2916,  2932,  2933,  3981,  2272,  3682,  2955,  2956,  1315,  1990,
    1129,  1130,  1349,  1133,  2277,   823,   581,  2280,  2281,  2303,
    2341,  4028,  2748,  2748,  1482,  2120,  1986,  2236,  2005,  1133,
     134,   935,  1991,  1133,  3908,  1129,  1130,  1133,  1315,  3810,
    2342,  3200,   469,   563,  2023,  1726,  1129,  1130,  2030,  1838,
     474,  2931,  2535,  1129,  1130,  1129,  1130,  1769,  1769,  2287,
    2462,  2703,  2191,  1129,  1130,  2498,  2463,   581,  2397, -1691,
    2340,  1475,  2704,  2235,  3042,  1133,   517,   128,  1608,  2323,
    2346,  3725,  2787,  3607,  3845,   116,  1129,  1130,   530,  2137,
    2031,  1133,  2135,  2114,  3846,  1133,  1129,  1130,  1831,  2627,
    2291,  1133,  3299,  2576,  3472,  2006,  1069,  2744,  1131,  3743,
    2041,  1132,  1133,   831,   564,  1646,  2042,  3473,  1236,  1069,
    3893,  1799,  3054,  3433,  2245,  1800,  2146,  2045,  1642,  3983,
     994,  1909,  1466,  2237,  1350,  2459,  1473,  3837,  2324,  3650,
    3984,  2196,  2693,  3277,  1498,  3081,  2581,  2582,  1439,  2713,
    3509,  3513,  3514,  1243,  2675,  2460,  1244,  1351,   129,  1129,
    1130,  2115,  1133,  3894,  2325,  1839,  2373, -1692,  3903,  1593,
    2150,  2044,  2110,  2021,  1166,  3899,  1131,  2057,  3434,  1132,
    1841,   591,  1970,  3209,  2288,  2154,  1482,  2216,  2458,  3683,
    2217,  3725,  3725,  1682,  1133,  1313,  3210,  2575,  2121,  1710,
    2623,  2289,  3832,  3833,  3474,  1165,  1385,  2585,  1592,  2065,
    3211,   547,  2290,  1386,  1129,  1130,  3312,  3205,   591,  4000,
    1834,   868,  3353,  1650, -1691,  2212,  2213,  3854,   581,   958,
    2326,  3889,  1146,   555,  1129,  1130,  1851,   581,   808,  2398,
    2426,  2271,  1129,  1130,   936,  1727,  1129,  1130,  1131,  2192,
    2711,  1132,  1129,  1130,    42,  1840,  1601,  2705,  1131,  2263,
    1131,  1132,   832,  1132,  1131,  1129,  1130,  1132,   824,  3227,
     937,   591,  4100,  4101,  2912,  1129,  1130,  1592,   995,   999,
    1007,  1842,  3895,  1686,  2197,  1689,  3684,   581,  3838,  2291,
    2106,  4229,  3847,  1652,  1245,  1131,   581,  1975,  1132,  2427,
    1129,  1130,   591,  2412,  1131,  2327,  1551,  1132,  2464,  1237,
    2977,   581,   581,  3444,  1131,  1129,  1130,  1132, -2432,  3609,
    1683,  1798, -1692,   619,  2412,  1129,  1130,  1643,  3725,  3725,
    1131,   556,  3205,  1132,   591,  3410,  3055,  1729,  3985,  2786,
    1654,  1820,  1133,  2198,  3411,  1737,  1129,  1130,   565,  1644,
    1131,  1129,  1130,  1132,  2116,  2218,  2094,   466,   466,   466,
     581,   466,   581,  1129,  1130,  1355,  1592,  1770,  3206,  2199,
     566,  1798,  1683,  1772,   466,  1131,   591,  2728,  1132,   466,
    1129,  1130,  1693,  1753,  1754,  1755,  1131,  1757,  1976,  1132,
    2775,  2428,  2122,  1131,  2465,  1131,  1132,  2292,  1132,   581,
    1773,  2825,   567,  1131,  3592,  1777,  1132,  2990,  2123,    55,
    1133,  1602,   573,  3725,  1149,  2748,  2217, -1669,  2964,  1129,
    1130,   625,   981,   982,  2018,  1756,  1131,  1758,  3725,  1132,
    2147,  1834,  1129,  1130,   470,  2200,  1131,   471,  1356,  1132,
    1843,  3725,  1458,  3207,   591,  2107,  1749,  3839,  3890,  1844,
    3891,  1129,  1130,  1129,  1130,  1845,  3904,   568,   581,  2293,
    2776,  1928,   581,  3796,  1787,   553,  2429,   688,  2340,  1129,
    1130,  1129,  1130,  1316,  1482,  3412,  1799,  2372,  1129,  1130,
    1800,   558,  1133,  3206,  1129,  1130,  1834,  1482,  1129,  1130,
    2863,  3061,  1133,   581,  1133,   896,  3725,  2069,  1133,  1131,
    3740,  3986,  1132,  2328,  1645,  1852,  2842,  2070,  3725,  3725,
    2201,  1730,   591,  2071,   466,   466,  2222,  1988,   466,  4074,
    4074,  1317,  2823,  1925,  2037,  1166,  1799,  1930,  3090,  1133,
    1021,   554,  2004,  1129,  1130,  1129,  1130,  2197,  1133,  2826,
    1984,  1985,  3616,  2022,  1850,  1933,  3905,  1846,  1133,   574,
    1129,  1130,  3725,  2072,  1131,  2777,  2884,  1132,  3217,  3593,
    1012,  2954,  3725,  2076,  1133,  1129,  1130,  2824,  1934,  1129,
    1130,  1129,  1130,  3906,  1131,  1655,  2580,  1132,  3795,  2095,
    2141,  2218,  1131,  2458,  1133,  1132,  1131,  2993,  3019,  1132,
    1129,  1130,  1131,  2245,  1555,  1132,  2198,   582,  1963,  2913,
    3725,  2864,  3725,  1069,  2050,  1131,  1654,  1578,  1132,  1133,
    1129,  1130,  3725,  2155,  1592,  1131,  1129,  1130,  1132,  1405,
    1133,   551,  2199,   576,  2914,   552,  1439,  1133,  3725,  1133,
    3725,  1731,  3725,  3091,  2029,  2523,  1847,  1133,  2246,  3725,
    1131,  3208,  2925,  1132,  2935,  2554,  1839,   585,  2529,   587,
    3725,  2032,  1050,  1101,  1105,  1131,  1129,  1130,  1132,   712,
    1133,  1129,  1130,  2119,  2430,  1131,  3725,  3725,  1132,  1465,
    1133,  3608,  1129,  1130,  2613,  2936,   598,  3581,  1129,  1130,
    3583,  2544,  3725,  3725,  1048,  3451,  1131,  3725,  2200,  1132,
    1708,  1131,  3676,  3677,  1132,  3262,  1158,  1159,  1160,  1161,
    3776,   661,  3529,  1131,   470,  2143,  1132,   471,  2202,  4145,
    3212,  3543,   599,   591,  4042,   581,   591,  2110,  3958,  3777,
    1131,  1129,  1130,  1132,   116,  2222,   606,   581,  4146,  2160,
    3354,  3146,  1709,  1133,  3617,  2166,  2166,  3263,  2166,  1129,
    1130,  1129,  1130,  1049,  1834,  1129,  1130,  2033,   581,  2222,
    2591,  2044,   581,   531,  3543,   607,  3208,  2223,  3457,  1131,
     666,   896,  1132,  2201,  2125,  1129,  1130,  1812,   591,   591,
     581,   581,  1131,  2865,   610,  1132, -1589,  1069,   617,  1975,
    2166,  2166,  2166,   537,   612,  2464,  1129,  1130,  1133,  2465,
     537,  1131,  4069,  1131,  1132,  2803,  1132,  2258,   626,   769,
    2165,  2165,  2040,  2165,  1129,  1130,  2269,  2323,  1133,  1131,
     614,  1131,  1132,  2188,  1132,   628,  1133,  1239,  1131, -1589,
    1133,  1132,  2053,   482,  1131,  1999,  1133,  1132,  1131,   761,
    2054,  1132,  1129,  1130,  2058,  1256,  2215,  2046,  1166,  1133,
    2062,  1655,   581,  2224,  2225,  2165,  2165,  2165,   629,  1133,
     766,  1851,   677,  2063,  2286,  1614,  1678, -1589,  1964,  1679,
    2211,   581,  1680,  2064,  1654,  1287,  2324,  2224,  2225,  2866,
    2684,  2317,   630,  1131,  1133,  1131,  1132,   805,  1132,  2765,
    2996,  1146,   909,   910,   820,   913,  1129,  1130,  2068,  1133,
    1131,  3039,  2325,  1132,   688,  2265,  3300,  3040,   816,  1133,
   -1589,  3203,   822,  2073,  2226,  1131,  2497,  2279,  1132,  1131,
    1315,  1131,  1132,  2081,  1132,   840,  1315,   832,  3789,  3790,
    1133,  3041,  3219,  3220,   911,  1133,  2297,   693,  2452,  1965,
    1131,   842,  2468,  1132,  2086,  1129,  1130,  1133,  2795,  2101,
    2796,  3791,  3361,  3232,  1167,  3362,  1129,  1130,  1129,  1130,
    1131,  2887,   808,  1132,  1133,  2019,  1131,  2399,  2326,  1132,
    2753,  2202,   930,  3764,  3765,  3766,  3767,   948,  2903,  2307,
    2519,  2413,  2047,  1549,  2583,  2519,   931, -1669,  2314,  2315,
     939,  2797,  1592,   968,  2780,  2781,  1398,  1399,  1769,  2319,
    2320,  2321,  2322,  1133,  2330,  2331,  1131,  2020,  1166,  1132,
     958,  1131,  2798,   987,  1132,   988,  1133,  2909,  2059,  1166,
    3347,  2711,  1131,  3350,  3351,  1132,   114,  4140,  1131,   896,
    2910,  1132,   981,   982,  1456,  1133,   992,  1133,  1615,  2137,
    3363,   591,  1264,  2327,  1023,   591,  2799,  2469,  1592,  2917,
     466,  2921,   688,  1133,  2786,  1133,  1834,   581,   581,   581,
    2492,  1024,  1133,  2495,  1025,  2237,  1514,  2922,  1133,  2923,
    1027,  1131,  1133,  1149,  1132,  1166,  2474,  2287,  2573,  1028,
    1966,  1592,  2924,   591,  1029,  4226,  2926,   920,   591,  1131,
    1032,  1131,  1132,  1033,  1132,  1131,   712,  1034,  1132,  2424,
    2425,  1146,  2432,  3856,  2434,  2435,  2436,  2437,  2438,  1655,
    2594,  2441,  2556,  2443,  1035,  1131,  1036,  1133,  1132,  1133,
    1037,  1048,  2488,  2489,  2490,  2558,  3867,  1419,  1420,  1302,
    1852,  2929,  1169,  2934,  1133,   720,  1131,  1170,  3873,  1132,
     114,  3876,  3877,  3878,  3879,  2060,  1166,  1174,  2937,  1133,
    2989,  1038,  1851,  1133,  1131,  1133,  3077,  1132,  1039,   949,
    1518,  3326,  3327,  2939,  2343,  3868,  1851,  2941,   896,  2943,
     924,   925,  1040,   926,  1133,   927,  1654,  2889,  1043,  2287,
    1100,   591,  1131,  1045,  3396,  1132,  1303,  3088,  2944,  1046,
    2464,   851,  2061,  1166,  1133,  3094,  3032,  2953,  3096,  3955,
    1133,  1963,  2288,  1047,  3665,  3666,  2592,  1185,  2945,   950,
     868,   869,  1304,   591,  3237,  1963,  1151,  1152,  1051,  2289,
    1817,  2519,  1052,  2678,  2683,  2066,  1166,   591,  1129,  1130,
    2290,   115,  1616,  2993,  3967,  3968,  1131,  1053,  3169,  1132,
    1133,  2328,  1054,  3980,   712,  1133,  2332,  2333,  1617,   116,
    1055,  1167,  3431,  3432,  3238,  1056,  1133,  1519,  1206,  2621,
    1592,  1522,  1133,  1432,  1433,  2722,  2519,  1208,  1523,  1048,
    2884,  3975,  2369,  2621,  2562,  1166,  3239,  2800, -1669,  2598,
    2599,   851,  1057,  1149,  2110,  1131,  1058,  1963,  1132,   951,
    2643,  1327,   640,  1059,  2454,  1060,  1131,  3369,  1131,  1132,
    1063,  1132,  1167,   591,  2288,  1133,  1167,  2291,  2454,  1064,
    1933,   852,   868,   869,   117,  1070,  2664,  1071,  2666,  3450,
    1328,  2289,  1072,  1133,   591,  1133,   591,   591,  1104,  1133,
    1073,   896,  2290,  1934,  1770,  1770,  2594,  3456,  1214,  3458,
    3370,  1146,   118,  3459,  1524,  3371,  1074,  1834,  1075,  1133,
    1076,  1154,  1155,  1156,  1157,  1158,  1159,  1160,  1161,  1593,
    1216,  1834,   118,  3460, -1669,  3448,  3537,  1329,   591,   591,
    1133,  1077,  1330,   661,  1078,  1821,  1080,  -603,  1082,  2507,
    3534,   853,  2927,  1166,  3461,  1441,  1083,  2343,  1133,  1822,
    1084,  3372,   119,  2999,  3000,  3172,  3173,  1526,  1085,  2344,
    1086,   852,  3531,  3629,  2740,  2508,  3243,  1166,  2413,  2291,
    2663,  1655,  1305,  2413,  2752,  2292,  1133,  1087,  2413,  1088,
    2762,  1852,  2413,  1089,  2761,   665,  1151,  1152,  3265,  3266,
    3761,  3511,   666,  1834,  2761,  1852,  2413,  2413,  1090,   591,
    1091,  2336,  2783,  1092,  1146,  1093,  2413,  2791,  1593,  3401,
    3402,  2323,  2509,  2793,  2794,  2510,  1094,   581,   670,  3437,
    3445,  1964,  4065,  2511,  2343,  2761,  2197,  1654,  3452,  1166,
    1133,   853,  2413,  2813,  1217,  1964,  2371,  2293,  3466,  1166,
    1095,  1654,  1026,  1225,  2839,  3754,  3758,  3481,  3482,   952,
    3595,  2333,  1096,  1442,  1097,  -603,  1098,  1443,  3610,  3611,
     477,  3630,  3631,  1486,  1487,  1488,  3632,  3633,  1444,  4173,
    2324,  1331,  -746,  1102,   120,  1499,  1103,  2292,  1106,  1133,
    2763,  2764,  2792,  1149,   677,  2198,  3614,  3611,  1527,  1107,
    1133,  1111,  1133,  1933,  1115,  3225,  2325,  3615,  3611,  1306,
    1116,   581,  2413,  1529,  1823,  2790,  1552,  1964,  1117,  1556,
     953,  1118,   954,  1654,  3670,  3266,  1934,  3937,  3673,  3611,
    1307,  1154,  1155,  1156,  1157,  1158,  1159,  1160,  1161,  1574,
    1575,  1119,  2369,  1579,  1168,  3244,  3680,  3681,  1226,  2293,
    1234,  1332,   121,   688,  4230,  4176,  4177,  3671,  3672,  3047,
    3674,  3675,  1594,  1595,  3571,  3774,  3775,  1821,   692,   693,
    1308,  1235,  2326,  1251,  2843,  1262,  2868,   981,   982,  1263,
    1933,  1822,  3778,  3373,  1280,  1824,  1282,  3969,  1965,  3374,
    3803,  3804,   896,  1281,  3754,  1285,  1149,  1288,  3758,  1445,
    1864,  3417,  1296,  1934,  3808,  3611,   896,  1865,  1866,   122,
    1825,  -910,  1297,  1333,  3779,  3809,  3611,  3811,  3611,  1867,
    1868,  3946,  1301,  2623,  1313,  3375,  1322,   854,   855,   856,
     857,   858,   859,  2160,  3812,  3611,  1232,   591,   591,   591,
    3818,  3819,  1323,  2512,   860,   581,  1324,  2327,  -603,   495,
    1869,  1339,  3754,  3758,  1870,  1871,  2345,  1342,  2343, -1669,
    1872,  1346,  3970,   591,  3820,  3819,  1593,  1873,  1826,  -603,
    2344,  1347,  1655,  1360,  3689,  1874,  3991,  3804,   896,  1069,
    3689,  1363,   591,   591,   591,  1875,  1655,  3992,  3804,  3997,
    3266,  1364,  1446,  3376,  4061,  3018,  2519,  4040,  4041,  1876,
    1366,  3020,  2851,  3022,  3865,  3442,   496,  4081,  4082,   591,
    2976,  4099,  3171,  1382,  4218,  4219,  1877,   854,   855,  1371,
     857,  1334,   859,  1878,  1879,  1376,  3780,  3622,  3623,  1966,
    1880,  1592,   497,  2370,   860,  1382,  1823,  1388,  1881,  1151,
    1152,  1390,  -848,  1392,  1882,   712,  2371,  1582,  1583,  3538,
    3973,  3973,  3539,  3281,  3282,  1335,  1827,  1395,  1655,   480,
    1867,  1868,   718,  1396,   498,  1400,  -603,   720,  3250,  3251,
     721,   477,  1883,  1156,  1157,  1158,  1159,  1160,  1161,  2513,
    2413,   536,  1403,  2413,  2413,  1404,  2761,  1407,  2450,  3017,
    3479,  3480,  3377,  -729,  -729,  1870,  1227,  1408,  4139,   591,
    4141,  3781,  2413,  -729,  1933,  1409,  1450,  1824,  1873,  1884,
     499,  1885,  1451,  1452,  1455,  1457,  1874,  2761,  1886,  3782,
    1458,  1476,  3540,  3541,  1146,  2761,  4159,  1934,  2761,   981,
     982,  1478,  1825,  1887,  1164,  1482,  -603,  1489,  1501,  1503,
    1876,  2514,  3783,  1110,  1538,  2328,  1548,  1549,  3100,  1625,
    1550,   581,  1631,  1590,  1382,  1600,  3156,  1877,  1609,  1659,
    3971,  1651,   466,  1658,  4191,  4192,  3166,  1209,  2761,  2515,
    1662,  1665,  1666, -1399,  1154,  1155,  1156,  1157,  1158,  1159,
    1160,  1161,  1667,  3175,  1668,  1882,  1888,  1669,  3162,  1670,
    1826,  1671,  3865,  1672,  3083,  1674,  3186,  1675,   476,  1695,
    1698,  1706,  3086,   581,  1889,  3639,  1714,  1715,  1890,   640,
    1716,  1717,  1722,   763,   764,  3199,  3101,   767,   768,  1592,
    1723,   770,  1724,   772,  1747,  1733, -1399,   -63,  1738,  2007,
    1228,  1751,   500,  3910,  1779,  1780,  2287,  1781,  1050,  1101,
    1105,  1210,  1287,  1782,  3286,  1891,  1211,  1784,  1793,  1795,
    1892,  1797,  1885,  1810,  1819,  1439, -1399,  1893, -1399,  1886,
    2722,  1920,  1937,  1939,  1894,  1895,  1938,  1940,  3188,  1941,
    -603,  3691, -1399,  1942,  1887,  1959,  1943, -1399,  1827,  1944,
     477,  1945,  3178,  3537,  3242,  1946,  1947,  2477,  1948,  1212,
     661, -1399,  2664,  1957,  3651,  1896,  1146,  2051, -1399,  1949,
     501,  2055,  1950,   896,  1213, -1399,  1149,  1951,  1952,  1897,
    1898,  1899,  1900,  -777,  1953, -1399,  2621,  4086,  1954,  3784,
    2168,  1955,  2169,  1956,  2079,  1145, -1399,  1888,  1978,  1977,
    1983, -1399,  1901,  1993,  2643,  3276,  1994,  1995,   591,  2002,
   -1399,  1227,   665,  1996,  2008,  1889,  2010,   591,  2028,   666,
    2011,  2012,  2027,  2592,  2036,  3561,  3562,   502,  2034,   478,
     480,  2288,   503,   591,  2240,  2241,  2242,  2035,  3565,  3727,
    2038,  2258,  2044,  3568,  2048,   670,  2052,  2056,  2289,  2084,
     504,  2074,  2075,  2080,  2111,  2085,  2663,  2096,  1902,  2290,
    1593,  2097,  3821,  2098,  2118, -1231,  3584, -1114,  1893,  3586,
    2124,  1161,  2413, -1399,  1903,   505,  1895,  1904,  2134,  4086,
    2189,  2156,  2413,  2163,  2761,  2181,  2195,  2209, -1399,  2238,
     506,  2239,  2206,  1593,  4211, -1399,  2254,  1146,  2266,  2761,
    1905,   581,  2268,  2413, -1399,  2273,  2295,  -603,  2296,  3788,
    2299,   677,  2300,  1906,  2519,  2302,  2308,  4222,  2306,  1151,
    1152,  1592,  2309,  2310,  4211,  2311,  2312,  2313,  4091,  4092,
    4222,  4094,  2343, -1399,  2355,  2360,  2291,  2361,  2364,  2365,
    2367, -1399,  2374,  1901,  1592,  1228,  2368,  2376,  1149,  2377,
    2383,  1592,  2384,  2388,  2389,  2416,  2453,  1592,  3515,  2394,
    1184,  2420,  2395,  2497,  2422,  2475,  2493,  2525,  2401,  2501,
     688,  2506,  -848, -1399,  2524,  2839,  2526,  4132,  2142,  4133,
    4134, -1399,  2536,  2537,  3500,   692,   693, -1399,  2549,  1867,
    1868,  2570, -1399,  2571,  1147,  2568,  2579,  2572,  2589,  1902,
    3430,  3430,  3430, -1399,  2588,  1770,  2601,  2603,  2602,  2604,
    2611,  2614,  2616, -1399,  2605,  1903,  1148,   591,  1904,   479,
   -1399,  2617,  -729,  -729,  1870,  2624,  2625,  1701,  2629,  2645,
   -1399,  2170,  -729,  2633,  4170,  2646,  2648,  1873,  2649,   480,
    3951, -1399,  2650, -1399,  2292,  1874, -1399,  2246,  2245,  2668,
    3788,  3949,  2171,  2667,  1906, -1399,  1156,  1157,  1158,  1159,
    1160,  1161,  3398,  2669,  2690,  2172,  2694,  2699,  3489,  1876,
    4203,  2722,  1593,  2700,  2701,  2173,   481,  2717,  -529,  1149,
    2724,   482,  2725,  1382,  2768,  3422,  1877,   591,  2770,  2828,
    2832,  1151,  1152,  2834,  1129,  1130,  2822, -1399,  2848,   981,
     982,  2849,  2853,  2854,  2855,  2856,  2293,  2478, -1399, -1399,
    1894,  2881,  1812,  2003,  1882,  2890,   483,  2894, -1399,  2899,
    2900,  2901,  2174,  2175,   484,  2902, -1399,  2904, -1399,  3430,
    2905,  3651,  2948,  2950,  3546,  2952,  2961,  2957,  2960,  2966,
   -1399,  2973,  2971,  2519,  2978,  2982,  3551,  2981,  1243, -1399,
    2176, -1399, -1399,  2985,  2988, -1399, -1399,  2995,  2998,  3001,
    3004,  1146,   712,  3015,  3016,  3021,  3538,  3029,  3068,  3539,
    3048,  1150,  3052,  3053,   591,  3056,  3067,  3069, -1399,   718,
    3080,  1885,  3089,  3099,   720,  3098,  3157,   721,  1886,  1510,
    1511,  1512,  1513,  1514,  3160,  3164,  3163,  3168,  3181,  3587,
    3182,  3187,  3286,  1887,  3097,  3171,  3591,  -440,  3170,  3201,
    2222,  2177,  3174,  1510,  1511,  1512,  1513,  1514,  3221,  3190,
    3196,  3197,  1151,  1152,  3186,  3198, -1399,  1155,  1156,  1157,
    1158,  1159,  1160,  1161,  3218,  1153,  3229,  3228,  3246,  3540,
    3541,  1146,  3247,  3256,  3268,  3258,   591,  3279, -1399,  1136,
    1137,  3261,  3287,  3295,  3296,  3304,  1888,  3305,  2067,  3317,
    3325,  2178,  3328,  3329,  3348,  3342,  3392,  3395,  2414,  3570,
    3399,  3397,  3405,  3409,  1889,  3418,  3419,  3426,  3439,  3420,
    4128,  3949,  3423,  1138,  1515,  1516,  1517,  1518, -1399,  3424,
    3435,  3643,  3436,  1139,  3437,  3438,  3443,  1867,  1868,  3446,
    3453,  3447,  3449,  3454,  3455,   591,  3467,  3596,  1515,  1516,
    1517,  1518,  3468,  3477,  3484,  3485,  3487,  3019,  3497,  3496,
    3494,   815,  3482,  3663,  3501,  3502,  3507,  1893,  3505, -1314,
    1140,  3508,  1870, -1319,  3552,  1895,  3430,  3430,  2918,  3430,
    3430,  1141, -1399,  1149,  3519,  1873,  4128,  3532,  3383,  3533,
    3535,  3788,  2519,  1874, -1399,  3536,  3560,  1154,  1155,  1156,
    1157,  1158,  1159,  1160,  1161,  3574,  3575,  3564,  1142,  3549,
    3576, -1399,  3566, -1399,  3578,  3579,  3386,  1876,  3585,   776,
     777,  3597,  3613,  4200,  1519,  3598,  1520,  1521,  1522,  3618,
    3620,  1382,  3621,  3624,  1877,  1523, -1399, -1399,  3625,  3626,
   -1399, -1399,  1901,  3732,   581,  3637,  3644,  3638,  1519,  3679,
    1520,  1521,  1522,  3659,  3685,  3430,  4228,  4200,  3661,  1523,
    3654,  3655,  1882,  1149,  3693,  3692,  1143,  3445,  3694,  3763,
    3728,  3736,  3750,  3769,  1131,  3760,  3772,  1132,  3805,  3800,
    3802,  3814,   581,  3823,  -307,  1030,  3841,  3850,  3844,  3853,
    3860,  3874,  3872,  3843,  3875,   591,  3883,  3880,  1902,  3885,
    3887,   778,  3859,  2817,  3914,  3917,  -325,  3943,  3944,  3733,
    3945,  1524,  3957,  3960,  1903,  1062,  3962,  1904,  3989,  3993,
    3994,  3977,  3998,  4001,  3995,  3815,  1151,  1152,  3996,  1885,
     779,  1079,   759,  4002,  4009,  1524,  1886,  4008,  4013,  4021,
    4019,  3827,  4020,   780,  4024,  4030,  3834,  3770,  4044,  4045,
    4046,  1887,  4047,  1906,  4056,  4055,  4057,  4062,   759,  4064,
    4066,  4067,  4070,  1525,  1526, -2167,   781,  4076,   782,  4079,
    4093,  4090,  4106,  4095,  4096,  1123,  4137,  4120,  4122,   783,
    1265,  4098,  4136,  4142,  4150,  4125, -1472,  1525,  1526,  1266,
    4119,  4138,  4143,  4147,  4153,  4155,  4158,  4156,  1267,   784,
    4162,  4164,  4167,  1187,  1888,  4168,  1151,  1152,  2876,  4171,
    1268,  1269,  1270,  1593,  4179,  4175,  4181,  4188,  4189,  3643,
    3976,  4212,  1889,  4216,   785,  4225,  1271,  3836,  2596,  3407,
     786,  3408,  1004,  2445,  2732,  3601,  3851,  3952,  4077,  3599,
    1394,  4078,  3603,  3731,  3663,  4223,  3663,  4183,  3892,   550,
     906,  3705,  2230,  3003,  3706,  3708,  3709,  3711,  3712,  4193,
    3713,  1154,  1155,  1156,  1157,  1158,  1159,  1160,  1161,   787,
    4103,  3714,  3715,  3716,  3918,  1893,  4006,   759,  4104,  3719,
    3855,  3720,   759,  1895,  4075,  3721,  4018,  4017,  2145,  2405,
    1931,  1454,  3739,  1907,  1863,  1527,  1188,  2984,  3093,  2628,
    3260,  1704,  3961,  3870,  3490,  4152,  4089,  3882,  1133,  1528,
    1529,  4127,   759,  3771,   627,  1962,  3425,  2403,  3179,  1527,
    1189,  2594,  3341,   591,  1190,  2874,  2410,  2819,   759,  3982,
    3330,  3393,  3355,  1528,  1529,  3356,  3687,  3545,  3577,  3959,
    3569,  1154,  1155,  1156,  1157,  1158,  1159,  1160,  1161,  3293,
    1901,   491,  3898,   492,  3901,  3857,  3900,  1191,  2487,  3862,
    3861,  3749,  3690,  1992,  2407,  3332,  2284,  2807,  1796,   759,
     759,   759,   759,  3548,  1192,  3331,  2630,  1960,  1929,  2214,
    4088,   759,  2612,  2975,  3257,  2651,  2567,  3726,   928,  3245,
    1292,  2522,  2959,   788,  2712,  1547,  3301,   789,  2566,  2244,
    3807,  1593,  4053,  3667,  4054,  3406,  1902,  1500,  2586,  1415,
    3336,  3966,  3974,   790,  3664,  4174,  3653,  2658,  1692,  2491,
    2610,   791,  1903,  1719,   591,  1904,  3271,  2636,  3492,   792,
    1272,  3272,  3311,  4027,  1193,  2001,   917,  1022,  2275,  2839,
    2839,  1763,   902,  2157,  1785,  3340,  1721,  1273,  4123,  2276,
    3259,  4048,  4151,  4224,   793,  4097,  1194,  4227,  3573,  1736,
    3275,  1906,  2255,  3037,  1480,  1481,  3506,   794,   795,   847,
    3297,  3656,  2194,  1491,  1492,  1728,  1279,  1495,  1496,  1497,
    1685,  3768,  3762,   591,  1502,  2963,   849,  1504,  1505,  1284,
    1506,   621,  1507,   622,  1008,  1009,  1010,  1982,     0,  1540,
    1541,  1542,  1543,     0,  1545,  4037,  4038,  4108,     0,     0,
       0,   796,  1553,  1554,  4116,  1557,  1558,     0,     0,     0,
       0,  1562,     0,  1563,  1564,  1565,     0,     0,  1568,  1569,
    1570,  1571,  1572,  1573,     0,     0,  1576,  1577,     0,  1580,
     797,  1581,     0,     0,     0,  1584,     0,  1588,  1589,  4217,
       0,     0,     0,     0,  1195,     0,     0,     0,     0,  1596,
    1597,     0,   798,  1196,   799,     0,     0,  1605,     0,  1274,
       0,     0,     0,     0,  1610,  1611,  1612,     0,  1197,     0,
       0,     0,  4160,     0,     0,     0,     0,  4165,     0,     0,
       0,     0,     0,     0,     0,     0,  1198,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   759,  1648,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1275,  4201,     0,     0,     0,     0,     0,
       0,     0,     0,  1593,     0,  1199,  1200,     0,     0,     0,
    1276,     0,     0,     0,     0,     0,  1187,     0,     0,     0,
       0,     0,   591,     0,     0,     0,  1593,     0,  4201,     0,
    1201,   759,   759,  1593,     0,     0,     0,     0,     0,  1593,
     759,   759,   759,   759,   759,   759,   759,     0,     0,   470,
       0,   759,   471,     0,   759,   759,     0,   759,     0,   759,
       0,     0,     0,   759,     0,     0,   759,   759,   759,   759,
       0,   759,   759,     0,     0,     0,     0,     0,     0,   759,
     759,     0,   759,   759,   759,   759,   759,     0,   759,     0,
     759,   759,   759,   759,   759,   759,   759,   759,   759,   759,
     759,     0,  1735,   759,   759,     0,   759,     0,   759,  1188,
    1750,     0,   759,     0,   759,   759,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   759,   759,     0,     0,
       0,     0,     0,  1189,   759,     0,     0,  1190,     0,     0,
       0,   759,   759,   759,     0,   759,     0,     0,     0,     0,
       0,     0,   759,   759,   759,     0,   759,   759,   759,   759,
     759,     0,   759,   759,   759,   759,   759,   759,   759,   759,
    1191,     1,     2,   759,   759,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1192,     3,  3102,
    3103,     0,     4,     0,     0,  3104,     0,  3105,     0,  3106,
    3107,     0,     0,     0,     0,     0,     5,     6,     0,     0,
       0,     0,     0,  4012,     7,     0,  3108,     0,     8,     9,
       0,     0,     0,     0,     0,     0,     0,     0,  4012,     0,
       0,     0,     0,    10,     0,     0,     0,     0,     0,     0,
       0,  4022,     0,     0,     0,     0,     0,  1193,     0,     0,
       0,     0,    11,     0,   844,   777,     0,     0,     0,     0,
       0,     0,     0,  3109,     0,     0,  3110,     0,     0,  1194,
       0,     0,     0,    12,  3111,     0,     0,     0,     0,     0,
       0,    13,    14,    15,     0,     0,     0,     0,     0,     0,
       0,  3112,     0,    16,    17,     0,     0,     0,     0,   759,
    2013,     0,     0,     0,     0,     0,    18,   759,  3113,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3114,     0,  3115,     0,    20,   778,     0,     0,     0,
       0,     0,     0,     0,     0,  3116,  3117,     0,     0,     0,
      21,     0,  4012,     0,     0,    22,     0,   777,    23,     0,
       0,     0,  4118,     0,     0,   779,     0,  1195,     0,     0,
       0,     0,     0,     0,     0,     0,  1196,     0,   780,     0,
       0,    24,     0,    25,     0,  3118,     0,     0,     0,     0,
       0,  1197,     0,     0,     0,     0,  2088,  2090,  2092,    26,
       0,   781,     0,   782,     0,     0,     0,     0,     0,  1198,
       0,     0,  4149,  3119,   783,     0,    27,     0,     0,     0,
      28,     0,  3120,  3121,     0,  3122,     0,     0,     0,     0,
    4012,     0,  4012,     0,   784,     0,  2126,     0,   778,  4169,
       0,     0,     0,     0,     0,  2131,     0,  2132,  1199,  1200,
    4012,     0,     0,     0,     0,  3123,  3124,  3125,     0,   785,
       0,     0,     0,     0,     0,   786,     0,   779,     0,     0,
       0,     0,     0,  1201,  3126,  3127,  3128,     0,     0,     0,
     780,  3129,  4012,  4012,  3130,     0,     0,  4215,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   759,     0,     0,
    3131,  3132,     0,   781,   787,   782,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,   783,     0,     0,     0,
       0,     0,  2210,     0,     0,     0,     0,     0,    30,     0,
       0,     0,  3133,  3134,     0,     0,   784,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    32,
       0,     0,     0,     0,     0,     0,     0,  3135,     0,     0,
       0,   785,     0,     0,     0,     0,     0,   786,     0,     0,
       0,    33,     0,     0,    34,     0,    35,     0,     0,    36,
       0,     0,    37,    38,     0,     0,     0,     0,     0,     0,
      39,     0,    40,   759,   759,   759,     0,     0,     0,    41,
       0,     0,     0,     0,     0,    42,   787,   759,  3136,     0,
       0,     0,  3137,    43,     0,     0,     0,     0,    44,     0,
      45,     0,     0,    46,  3138,     0,     0,     0,   788,     0,
       0,     0,   845,   759,     0,     0,     0,     0,     0,   759,
       0,     0,   759,     0,   759,     0,     0,    47,   790,     0,
     759,    48,   759,   759,     0,     0,   791,     0,     0,     0,
       0,     0,     0,     0,   792,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3139,     0,     0,  3140,
       0,     0,  3141,  3142,  3143,  3144,     0,     0,     0,   793,
       0,     0,     0,     0,    49,     0,     0,     0,     0,     0,
       0,     0,   794,   795,     0,     0,    50,     0,     0,     0,
      51,  1416,     0,    52,     0,     0,     0,     0,    53,   759,
       0,     0,     0,     0,  3145,  3146,     0,     0,     0,     0,
     788,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    54,   796,     0,  3147,  2421,
     790,     0,     0,     0,     0,     0,     0,     0,   791,     0,
      55,     0,     0,     0,     0,     0,   792,     0,     0,  1417,
    1418,  1419,  1420,  1421,  1422,   797,  1423,  1424,  1425,  1426,
    1427,  1428,  1429,     0,  1430,  1431,     0,     0,     0,     0,
       0,   793,     0,     0,     0,     0,     0,   798,     0,   799,
       0,     0,     0,     0,   794,   795,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2500,     0,     0,     0,
    2502,     0,     0,     0,     0,  2504,  2505,     0,     0,     0,
       0,     0,     0,     0,  2520,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2527,   796,  2528,
       0,     0,  2530,  2531,  2532,  2533,  2534,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2538,     0,
       0,     0,     0,     0,     0,     0,  2539,   797,  2540,     0,
    2541,  2542,  2543,     0,     0,     0,     0,  2546,  2547,  2548,
       0,     0,     0,     0,  2550,  2551,  2552,     0,  2553,   798,
    2555,   799,  2557,     0,  2559,     0,  2560,  1432,  1433,     0,
       0,  2561,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2584,   759,     0,  2587,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2805,     0,
       0,     0,     0,     0,     0,  1865,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1867,  1868,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1869,     0,
       0,     0,  1870,   759,     0,     0,     0,   759,     0,     0,
       0,     0,   759,   759,     0,  1873,     0,     0,     0,     0,
       0,   759,     0,  1874,   759,     0,     0,     0,     0,     0,
       0,     0,     0,  1875,   759,     0,   759,   759,     0,   759,
     759,   759,   759,   759,     0,     0,   759,  1876,     0,     0,
       0,     0,     0,     0,     0,   759,     0,     0,     0,     0,
       0,  1382,     0,   759,  1877,   759,     0,   759,   759,   759,
     759,  1878,     0,     0,   759,   759,   759,     0,  2806,     0,
       0,   759,   759,   759,     0,   759,  1881,   759,     0,   759,
       0,   759,  1882,   759,     0,     0,     0,     0,   759,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   759,     0,     0,     0,
    1883,     0,     0,   759,     0,     0,   759,     0,     0,     0,
       0,     0,   759,     0,     0,   759,     0,     0,     0,   759,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1885,
       0,     1,     2,     0,     0,     0,  1886,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1887,     4,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   759,     0,     5,     6,  1867,  1868,
       0,     0,     0,     0,     7,     0,     0,     0,     8,     9,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    10,     0,     0,     0,     0,     0,     0,
       0,  -729,  -729,  1870,  1888,     0,     0,     0,     0,     0,
       0,  -729,    11,     0,     0,     0,  1873,     0,     0,     0,
       0,     0,  1889,     0,  1874,     0,  1890,     0,     0,     0,
       0,     0,     0,    12,     0,     0,     0,     0,     0,     0,
       0,    13,    14,    15,     0,     0,     0,     0,  1876,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,  1382,     0,     0,  1877,   866,     0,  1892,     0,
    2886,     0,     0,     0,  2888,  1893,   823,   867,     0,    19,
       0,     0,     0,  1895,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1882,     0,    20,  2907,  2908,     0,     0,
       0,   868,   869,     0,     0,     0,     0,     0,     0,     0,
      21,     0,   870,     0,     0,    22,  2928,     0,    23,     0,
       0,     0,     0,     0,     0,  2938,     0,  2940,  1898,  2942,
       0,     0,     0,   871,     0,   872,     0,   873,     0,     0,
       0,    24,     0,    25,     0,     0,   874,     0,     0,     0,
    1901,     0,     0,     0,     0,     0,     0,     0,     0,    26,
    1885,     0,     0,     0,     0,     0,     0,  1886,     0,     0,
       0,     0,     0,     0,     0,     0,    27,     0,  2972,     0,
      28,     0,  1887,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1669,   875,     0,     0,     0,     0,   876,     0,
       0,   877,     0,     0,     0,     0,  1902,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1903,     0,     0,  1904,   878,     0,   879,     0,
       0,     0,     0,     0,   880,  1888,   881,     0,     0,     0,
       0,  3027,     0,     0,     0,  3031,     0,     0,     0,     0,
       0,     0,     0,  1889,     0,     0,     0,     0,     0,   882,
     883,  1906,     0,     0,     0,     0,     0,   759,     0,    29,
       0,   759,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   884,     0,     0,     0,     0,     0,     0,    30,  3062,
       0,     0,     0,   759,   759,     0,     0,     0,    31,     0,
       0,     0,   885,     0,     0,     0,  1893,     0,     0,    32,
       0,     0,     0,   759,  1895,     0,     0,     0,     0,     0,
       0,     0,   759,     0,   759,     0,   759,     0,     0,   886,
       0,    33,     0,     0,    34,     0,    35,     0,     0,    36,
       0,     0,    37,    38,     0,     0,   759,     0,     0,     0,
      39,   759,    40,     0,     0,     0,     0,     0,     0,    41,
       0,     0,     0,     0,     0,    42,     0,     0,     0,     0,
       0,     0,     0,    43,     0,   759,     0,     0,    44,     0,
      45,  1901,     0,    46,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   887,     0,     0,  3158,  3159,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    47,     0,     0,
       0,    48,     0,     0,     0,     0,   888,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   889,   890,     0,
       0,   891,   892,     0,     0,     0,     0,  1902,   759,     0,
       0,     0,   759,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   893,  1903,    49,     0,  1904,     0,     0,     0,
    3204,     0,     0,     0,     0,     0,    50,     0,     0,     0,
      51,     0,     0,    52,     0,     0,     0,     0,    53,     0,
       0,     0,     0,     0,  3223,  3224,   759,     0,     0,     0,
       0,     0,  1906,     0,     0,   894,  3231,     0,     0,     0,
       0,  3233,     0,     0,  3234,    54,  3235,  3236,   895,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      55,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -2194,     0,     0,     0,   896,     0,     0,
       0,     0,  3253,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   897,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3253,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   759,   759,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3298,
       0,     0, -2194,     0,     0,     0,     0,     0,   898,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3253,
       0,     0,     0,     0,     0,     0,     0,     0,  3322,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   759,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   759,   759,     0,   759,     0,     0,     0,     0,     0,
       0,     0,     0,   759,     0,     0,     0,     0,   759,     0,
       0,   759,     0,   759,   759,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   759,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   759,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   759,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   759,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   759,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   759,     0,     0,     0,
       0,     0,     0,     0,     0,   759,     0,     0,     0,     0,
    3253,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3517,
    3518,     0,     0,     0,     0,     0,     0,     0,  3062,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3619,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   759,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3253,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3062,     0,     0,
       0,     0,     0,     0,     0,     0,   759,   759,     0,     0,
    3027,     0,     0,     0,     0,   759,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   759,
    3794,     0,     0,     0,     0,     0,     0,     0,     0,  3799,
       0,  3801,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     759,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   759,  3822,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   759,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3723,     0,
       0,     0,  3062,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3912,     0,  3913,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3921,   759,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   759,     0,     0,
       0,     0,     0,     0,     0,     0,   759,     0,   759,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   759,     0,     0,     0,     0,     0,  3723,  3723,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4010,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4015,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3253,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   759,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4060,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   759,     0,   759,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   759,     0,  3723,  3723,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3956,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4110,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4135,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   759,     0,
    3723,     0,     0,     0,     0,     0,     0,     0,     0,  4154,
       0,     0,     0,     0,     0,  3723,   759,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3723,     0,
       0,     0,     0,     0,     0,     0,   759,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4202,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   759,  3723,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3723,  3723,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3253,
       0,   759,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3723,
       0,     0,     0,     0,     0,     0,   759,     0,     0,  3723,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     759,     0,     0,     0,     0,     0,     0,  3723,     0,  3723,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3723,
       0,     0,     0,   759,     0,     0,   759,     0,     0,     0,
       0,     0,     0,     0,     0,  3723,     0,  3723,     0,  3723,
       0,     0,     0,     0,     0,     0,  3723,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3723,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3723,  3723,     0,     0,     0,     0,   759,
       0,   135,     0,   636,   137,   138,   139,   140,     0,  3723,
    3723,     0,     0,   141,  3723,     0,   637,     0,   143,   144,
     145,   146,   147,   638,   149,     0,   150,     0,     0,   639,
     151,   640,   641,   642,   152,   643,     0,   153,   154,   155,
    1585,   156,     0,   157,   158,     0,   759,   159,   644,   645,
     160,   161,     0,   162,   646,   647,   164,     0,   165,   166,
     167,   168,   648,   170,     0,   649,   172,     0,   173,   174,
     175,   176,   177,   178,   179,   180,     0,   181,   182,     0,
     183,   184,   185,   650,   187,     0,   188,   651,   652,   189,
       0,     0,   190,   653,   654,     0,   191,   655,   656,     0,
     192,   193,   194,   657,   658,   659,     0,     0,     0,     0,
     660,   197,   661,     0,     0,   662,   198,     0,   199,     0,
       0,     0,   200,     0,   201,   202,   203,   204,     0,     0,
       0,   205,     0,     0,   206,   207,   208,     0,     0,     0,
     209,     0,   210,   211,     0,   212,   213,   214,     0,     0,
     215,   216,     0,   217,   218,   219,   220,   221,   663,     0,
     222,   223,   224,   664,   665,   225,   226,     0,   227,   228,
     229,   666,     0,   230,     0,     0,     0,   231,     0,   232,
       0,   233,     0,   234,   667,   236,   668,   238,     0,   239,
       0,   669,     0,   240,   241,     0,   242,   670,     0,   243,
     244,     0,     0,     0,   671,   246,   247,   248,   672,     0,
     249,   250,   251,     0,     0,   252,     0,     0,     0,   673,
     253,   254,   674,     0,     0,   255,     0,   256,   257,     0,
     258,   259,     0,     0,     0,   260,     0,     0,   261,   262,
       0,  1586,   263,     0,   675,   264,   265,     0,     0,     0,
       0,     0,   676,   267,     0,   268,     0,   269,     0,   270,
     271,     0,     0,   677,     0,     0,     0,     0,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   287,   678,   288,   289,   290,   291,
     679,   292,   293,     0,     0,     0,     0,   294,   295,   296,
     297,   680,   299,     0,     0,   681,   301,   682,   302,     0,
     303,   683,   684,   685,   686,   687,   308,   309,   310,   311,
     312,     0,   688,   313,   314,     0,     0,   315,   316,   317,
     318,   689,   690,   691,   319,   320,     0,   692,   693,     0,
     321,   322,   694,     0,   324,   325,   326,     0,   327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   328,   329,
     330,   695,   331,   332,   333,   334,   335,   696,   337,   338,
     339,   697,   698,   342,   699,     0,   343,   344,   345,     0,
     346,     0,   347,   348,   349,   350,   351,     0,   700,   353,
     354,     0,     0,   355,     0,     0,     0,   356,   357,   358,
     359,   360,     0,     0,   361,   362,   363,   364,   365,     0,
     366,   367,     0,   368,   369,   370,   701,   702,   371,     0,
     372,     0,   373,   374,     0,   375,   376,     0,     0,   703,
     377,   378,   379,   380,   381,   704,   383,   384,   385,   386,
       0,   705,   388,     0,     0,     0,   389,   390,   391,   392,
       0,     0,     0,   393,     0,     0,     0,   394,     0,   395,
     396,   397,   398,     0,   399,   400,   401,   402,   403,     0,
       0,     0,     0,     0,     0,   404,   405,     0,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   706,   707,   411,
     412,     0,   413,   414,   708,   416,   417,   418,   709,   710,
     419,   420,   421,   422,   711,   423,   424,     0,     0,   425,
     426,   427,   428,     0,   712,   429,   430,     0,   713,   714,
     715,   716,     0,     0,     0,     0,  1587,   435,   436,     0,
     717,   718,   719,   438,   439,   440,   720,   441,   442,   721,
     443,   444,     0,   445,   446,     0,     0,   447,     0,     0,
     448,     0,   449,     0,   722,   451,     0,     0,   723,   724,
     725,   726,   452,     0,     0,   453,   727,     0,   728,   454,
     455,   456,   729,     0,     0,     0,     0,     0,     0,   458,
     459,     0,   460,   461,   462,     0,     0,   730,     0,     0,
       0,   731,   732,     0,     0,     0,     0,   733,   734,     0,
       0,   735,   736,     0,     0,   737,   738,   135,     0,   636,
     137,   138,   139,   140,  3023,     0,     0,     0,     0,   141,
       0,     0,   637,     0,   143,   144,   145,   146,   147,   638,
     149,     0,   150,     0,     0,  3024,   151,   640,   641,   642,
     152,   643,     0,   153,   154,   155,     0,   156,     0,   157,
     158,     0,     0,   159,   644,   645,   160,   161,     0,   162,
     646,   647,   164,     0,   165,   166,   167,   168,   648,   170,
       0,   649,   172,     0,   173,   174,   175,   176,   177,   178,
     179,   180,     0,   181,   182,     0,   183,   184,   185,   650,
     187,     0,   188,   651,   652,   189,     0,     0,   190,   653,
     654,     0,   191,   655,   656,     0,   192,   193,   194,   657,
     658,   659,     0,     0,     0,     0,   660,   197,   661,     0,
       0,  3025,   198,     0,   199,     0,     0,     0,   200,     0,
     201,   202,   203,   204,     0,     0,     0,   205,     0,     0,
     206,   207,   208,     0,     0,     0,   209,     0,   210,   211,
       0,   212,   213,   214,     0,     0,   215,   216,     0,   217,
     218,   219,   220,   221,   663,     0,   222,   223,   224,   664,
     665,   225,   226,     0,   227,   228,   229,   666,     0,   230,
       0,     0,     0,   231,     0,   232,     0,   233,     0,   234,
     667,   236,   668,   238,     0,   239,     0,   669,     0,   240,
     241,     0,   242,   670,     0,   243,   244,     0,     0,     0,
     671,   246,   247,   248,   672,     0,   249,   250,   251,     0,
       0,   252,     0,     0,     0,   673,   253,   254,   674,     0,
       0,   255,     0,   256,   257,     0,   258,   259,     0,     0,
       0,   260,     0,     0,   261,   262,     0,     0,   263,     0,
     675,   264,   265,     0,     0,     0,     0,     0,   676,   267,
       0,   268,     0,   269,     0,   270,   271,     0,     0,   677,
       0,     0,     0,     0,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,   678,   288,   289,   290,   291,   679,   292,   293,     0,
       0,     0,     0,   294,   295,   296,   297,   680,   299,     0,
       0,   681,   301,   682,   302,     0,   303,   683,   684,   685,
     686,   687,   308,   309,   310,   311,   312,     0,   688,   313,
     314,     0,     0,   315,   316,   317,   318,   689,   690,   691,
     319,   320,     0,   692,   693,     0,   321,   322,   694,  3026,
     324,   325,   326,     0,   327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   328,   329,   330,   695,   331,   332,
     333,   334,   335,   696,   337,   338,   339,   697,   698,   342,
     699,     0,   343,   344,   345,     0,   346,     0,   347,   348,
     349,   350,   351,     0,   700,   353,   354,     0,     0,   355,
       0,     0,     0,   356,   357,   358,   359,   360,     0,     0,
     361,   362,   363,   364,   365,     0,   366,   367,     0,   368,
     369,   370,   701,   702,   371,     0,   372,     0,   373,   374,
       0,   375,   376,     0,     0,   703,   377,   378,   379,   380,
     381,   704,   383,   384,   385,   386,     0,   705,   388,     0,
       0,     0,   389,   390,   391,   392,     0,     0,     0,   393,
       0,     0,     0,   394,     0,   395,   396,   397,   398,     0,
     399,   400,   401,   402,   403,     0,     0,     0,     0,     0,
       0,   404,   405,     0,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   706,   707,   411,   412,     0,   413,   414,
     708,   416,   417,   418,   709,   710,   419,   420,   421,   422,
     711,   423,   424,     0,     0,   425,   426,   427,   428,     0,
     712,   429,   430,     0,   713,   714,   715,   716,     0,     0,
       0,     0,     0,   435,   436,     0,   717,   718,   719,   438,
     439,   440,   720,   441,   442,   721,   443,   444,     0,   445,
     446,     0,     0,   447,     0,     0,   448,     0,   449,     0,
     722,   451,     0,     0,   723,   724,   725,   726,   452,     0,
       0,   453,   727,     0,   728,   454,   455,   456,   729,     0,
       0,     0,     0,     0,     0,   458,   459,     0,   460,   461,
     462,     0,     0,   730,     0,     0,     0,   731,   732,     0,
       0,     0,     0,   733,   734,     0,     0,   735,   736,     0,
       0,   737,   738,   135,     0,   636,   137,   138,   139,   140,
       0,     0,     0,     0,     0,   141,     0,     0,   637,     0,
     143,   144,   145,   146,   147,   638,   149,     0,   150,     0,
       0,   639,   151,   640,   641,   642,   152,   643,     0,   153,
     154,   155,     0,   156,     0,   157,   158,     0,     0,   159,
     644,   645,   160,   161,     0,   162,   646,   647,   164,     0,
     165,   166,   167,   168,   648,   170,     0,   649,   172,     0,
     173,   174,   175,   176,   177,   178,   179,   180,     0,   181,
     182,     0,   183,   184,   185,   650,   187,     0,   188,   651,
     652,   189,     0,     0,   190,   653,   654,     0,   191,   655,
     656,     0,   192,   193,   194,   657,   658,   659,     0,     0,
       0,     0,   660,   197,   661,     0,     0,   662,   198,     0,
     199,     0,     0,     0,   200,     0,   201,   202,   203,   204,
       0,     0,     0,   205,     0,     0,   206,   207,   208,     0,
       0,     0,   209,     0,   210,   211,     0,   212,   213,   214,
       0,     0,   215,   216,     0,   217,   218,   219,   220,   221,
     663,     0,   222,   223,   224,   664,   665,   225,   226,     0,
     227,   228,   229,   666,     0,   230,     0,     0,     0,   231,
       0,   232,     0,   233,     0,   234,   667,   236,   668,   238,
       0,   239,     0,   669,     0,   240,   241,     0,   242,   670,
       0,   243,   244,     0,     0,     0,   671,   246,   247,   248,
     672,     0,   249,   250,   251,     0,     0,   252,     0,     0,
       0,   673,   253,   254,   674,     0,     0,   255,     0,   256,
     257,     0,   258,   259,     0,     0,     0,   260,     0,     0,
     261,   262,     0,     0,   263,     0,   675,   264,   265,     0,
       0,     0,     0,     0,   676,   267,     0,   268,     0,   269,
       0,   270,   271,     0,     0,   677,     0,     0,     0,     0,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   285,   286,   287,   678,   288,   289,
     290,   291,   679,   292,   293,     0,     0,     0,     0,   294,
     295,   296,   297,   680,   299,     0,     0,   681,   301,   682,
     302,     0,   303,   683,   684,   685,   686,   687,   308,   309,
     310,   311,   312,     0,   688,   313,   314,     0,     0,   315,
     316,   317,   318,   689,   690,   691,   319,   320,     0,   692,
     693,     0,   321,   322,   694,     0,   324,   325,   326,     0,
     327,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     328,   329,   330,   695,   331,   332,   333,   334,   335,   696,
     337,   338,   339,   697,   698,   342,   699,     0,   343,   344,
     345,     0,   346,     0,   347,   348,   349,   350,   351,     0,
     700,   353,   354,     0,     0,   355,     0,     0,     0,   356,
     357,   358,   359,   360,     0,     0,   361,   362,   363,   364,
     365,     0,   366,   367,     0,   368,   369,   370,   701,   702,
     371,     0,   372,     0,   373,   374,     0,   375,   376,     0,
       0,   703,   377,   378,   379,   380,   381,   704,   383,   384,
     385,   386,     0,   705,   388,     0,     0,     0,   389,   390,
     391,   392,     0,     0,     0,   393,     0,     0,     0,   394,
       0,   395,   396,   397,   398,     0,   399,   400,   401,   402,
     403,     0,     0,     0,     0,     0,     0,   404,   405,     0,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   706,
     707,   411,   412,     0,   413,   414,   708,   416,   417,   418,
     709,   710,   419,   420,   421,   422,   711,   423,   424,     0,
       0,   425,   426,   427,   428,     0,   712,   429,   430,     0,
     713,   714,   715,   716,     0,     0,     0,     0,     0,   435,
     436,     0,   717,   718,   719,   438,   439,   440,   720,   441,
     442,   721,   443,   444,     0,   445,   446,     0,     0,   447,
       0,     0,   448,     0,   449,     0,   722,   451,     0,     0,
     723,   724,   725,   726,   452,     0,     0,   453,   727,     0,
     728,   454,   455,   456,   729,     0,     0,     0,     0,     0,
       0,   458,   459,     0,   460,   461,   462,     0,     0,   730,
       0,     0,     0,   731,   732,     0,     0,     0,     0,   733,
     734,  1501,     0,   735,   736,     0,     0,   737,   738,   135,
       0,   636,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   637,     0,   143,   144,   145,   146,
     147,   638,   149,     0,   150,     0,     0,   639,   151,   640,
     641,   642,   152,   643,     0,   153,   154,   155,     0,   156,
       0,   157,   158,     0,     0,   159,   644,   645,   160,   161,
       0,   162,   646,   647,   164,     0,   165,   166,   167,   168,
     648,   170,     0,   649,   172,     0,   173,   174,   175,   176,
     177,   178,   179,   180,     0,   181,   182,     0,   183,   184,
     185,   650,   187,     0,   188,   651,   652,   189,     0,     0,
     190,   653,   654,     0,   191,   655,   656,     0,   192,   193,
     194,   657,   658,   659,     0,     0,     0,     0,   660,   197,
     661,     0,     0,   662,   198,     0,   199,     0,     0,     0,
     200,     0,   201,   202,   203,   204,     0,     0,     0,   205,
       0,     0,   206,   207,   208,     0,     0,     0,   209,     0,
     210,   211,     0,   212,   213,   214,     0,     0,   215,   216,
       0,   217,   218,   219,   220,   221,   663,     0,   222,   223,
     224,   664,   665,   225,   226,     0,   227,   228,   229,   666,
       0,   230,     0,     0,     0,   231,  2087,   232,     0,   233,
       0,   234,   667,   236,   668,   238,     0,   239,     0,   669,
       0,   240,   241,     0,   242,   670,     0,   243,   244,     0,
       0,     0,   671,   246,   247,   248,   672,     0,   249,   250,
     251,     0,     0,   252,     0,     0,     0,   673,   253,   254,
     674,     0,     0,   255,     0,   256,   257,     0,   258,   259,
       0,     0,     0,   260,     0,     0,   261,   262,     0,     0,
     263,     0,   675,   264,   265,     0,     0,     0,     0,     0,
     676,   267,     0,   268,     0,   269,     0,   270,   271,     0,
       0,   677,     0,     0,     0,     0,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     285,   286,   287,   678,   288,   289,   290,   291,   679,   292,
     293,     0,     0,     0,     0,   294,   295,   296,   297,   680,
     299,     0,     0,   681,   301,   682,   302,     0,   303,   683,
     684,   685,   686,   687,   308,   309,   310,   311,   312,     0,
     688,   313,   314,     0,     0,   315,   316,   317,   318,   689,
     690,   691,   319,   320,     0,   692,   693,     0,   321,   322,
     694,     0,   324,   325,   326,     0,   327,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   328,   329,   330,   695,
     331,   332,   333,   334,   335,   696,   337,   338,   339,   697,
     698,   342,   699,     0,   343,   344,   345,     0,   346,     0,
     347,   348,   349,   350,   351,     0,   700,   353,   354,     0,
       0,   355,     0,     0,     0,   356,   357,   358,   359,   360,
       0,     0,   361,   362,   363,   364,   365,     0,   366,   367,
       0,   368,   369,   370,   701,   702,   371,     0,   372,     0,
     373,   374,     0,   375,   376,     0,     0,   703,   377,   378,
     379,   380,   381,   704,   383,   384,   385,   386,     0,   705,
     388,     0,     0,     0,   389,   390,   391,   392,     0,     0,
       0,   393,     0,     0,     0,   394,     0,   395,   396,   397,
     398,     0,   399,   400,   401,   402,   403,     0,     0,     0,
       0,     0,     0,   404,   405,     0,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   706,   707,   411,   412,     0,
     413,   414,   708,   416,   417,   418,   709,   710,   419,   420,
     421,   422,   711,   423,   424,     0,     0,   425,   426,   427,
     428,     0,   712,   429,   430,     0,   713,   714,   715,   716,
       0,     0,     0,     0,     0,   435,   436,     0,   717,   718,
     719,   438,   439,   440,   720,   441,   442,   721,   443,   444,
       0,   445,   446,     0,     0,   447,     0,     0,   448,     0,
     449,     0,   722,   451,     0,     0,   723,   724,   725,   726,
     452,     0,     0,   453,   727,     0,   728,   454,   455,   456,
     729,     0,     0,     0,     0,     0,     0,   458,   459,     0,
     460,   461,   462,     0,     0,   730,     0,     0,     0,   731,
     732,     0,     0,     0,     0,   733,   734,     0,     0,   735,
     736,     0,     0,   737,   738,   135,     0,   636,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     637,     0,   143,   144,   145,   146,   147,   638,   149,     0,
     150,     0,     0,   639,   151,   640,   641,   642,   152,   643,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,   644,   645,   160,   161,     0,   162,   646,   647,
     164,     0,   165,   166,   167,   168,   648,   170,     0,   649,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   650,   187,     0,
     188,   651,   652,   189,     0,     0,   190,   653,   654,     0,
     191,   655,   656,     0,   192,   193,   194,   657,   658,   659,
       0,     0,     0,     0,   660,   197,   661,     0,     0,   662,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,   663,     0,   222,   223,   224,   664,   665,   225,
     226,     0,   227,   228,   229,   666,     0,   230,     0,     0,
       0,   231,  2089,   232,     0,   233,     0,   234,   667,   236,
     668,   238,     0,   239,     0,   669,     0,   240,   241,     0,
     242,   670,     0,   243,   244,     0,     0,     0,   671,   246,
     247,   248,   672,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,   673,   253,   254,   674,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,   675,   264,
     265,     0,     0,     0,     0,     0,   676,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,   677,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,   678,
     288,   289,   290,   291,   679,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   680,   299,     0,     0,   681,
     301,   682,   302,     0,   303,   683,   684,   685,   686,   687,
     308,   309,   310,   311,   312,     0,   688,   313,   314,     0,
       0,   315,   316,   317,   318,   689,   690,   691,   319,   320,
       0,   692,   693,     0,   321,   322,   694,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,   695,   331,   332,   333,   334,
     335,   696,   337,   338,   339,   697,   698,   342,   699,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   700,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
     701,   702,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,   703,   377,   378,   379,   380,   381,   704,
     383,   384,   385,   386,     0,   705,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   706,   707,   411,   412,     0,   413,   414,   708,   416,
     417,   418,   709,   710,   419,   420,   421,   422,   711,   423,
     424,     0,     0,   425,   426,   427,   428,     0,   712,   429,
     430,     0,   713,   714,   715,   716,     0,     0,     0,     0,
       0,   435,   436,     0,   717,   718,   719,   438,   439,   440,
     720,   441,   442,   721,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   722,   451,
       0,     0,   723,   724,   725,   726,   452,     0,     0,   453,
     727,     0,   728,   454,   455,   456,   729,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
       0,   730,     0,     0,     0,   731,   732,     0,     0,     0,
       0,   733,   734,     0,     0,   735,   736,     0,     0,   737,
     738,   135,     0,   636,   137,   138,   139,   140,     0,     0,
       0,     0,     0,   141,     0,     0,   637,     0,   143,   144,
     145,   146,   147,   638,   149,     0,   150,     0,     0,   639,
     151,   640,   641,   642,   152,   643,     0,   153,   154,   155,
       0,   156,     0,   157,   158,     0,     0,   159,   644,   645,
     160,   161,     0,   162,   646,   647,   164,     0,   165,   166,
     167,   168,   648,   170,     0,   649,   172,     0,   173,   174,
     175,   176,   177,   178,   179,   180,     0,   181,   182,     0,
     183,   184,   185,   650,   187,     0,   188,   651,   652,   189,
       0,     0,   190,   653,   654,     0,   191,   655,   656,     0,
     192,   193,   194,   657,   658,   659,     0,     0,     0,     0,
     660,   197,   661,     0,     0,   662,   198,     0,   199,     0,
       0,     0,   200,     0,   201,   202,   203,   204,     0,     0,
       0,   205,     0,     0,   206,   207,   208,     0,     0,     0,
     209,     0,   210,   211,     0,   212,   213,   214,     0,     0,
     215,   216,     0,   217,   218,   219,   220,   221,   663,     0,
     222,   223,   224,   664,   665,   225,   226,     0,   227,   228,
     229,   666,     0,   230,     0,     0,     0,   231,  2091,   232,
       0,   233,     0,   234,   667,   236,   668,   238,     0,   239,
       0,   669,     0,   240,   241,     0,   242,   670,     0,   243,
     244,     0,     0,     0,   671,   246,   247,   248,   672,     0,
     249,   250,   251,     0,     0,   252,     0,     0,     0,   673,
     253,   254,   674,     0,     0,   255,     0,   256,   257,     0,
     258,   259,     0,     0,     0,   260,     0,     0,   261,   262,
       0,     0,   263,     0,   675,   264,   265,     0,     0,     0,
       0,     0,   676,   267,     0,   268,     0,   269,     0,   270,
     271,     0,     0,   677,     0,     0,     0,     0,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   287,   678,   288,   289,   290,   291,
     679,   292,   293,     0,     0,     0,     0,   294,   295,   296,
     297,   680,   299,     0,     0,   681,   301,   682,   302,     0,
     303,   683,   684,   685,   686,   687,   308,   309,   310,   311,
     312,     0,   688,   313,   314,     0,     0,   315,   316,   317,
     318,   689,   690,   691,   319,   320,     0,   692,   693,     0,
     321,   322,   694,     0,   324,   325,   326,     0,   327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   328,   329,
     330,   695,   331,   332,   333,   334,   335,   696,   337,   338,
     339,   697,   698,   342,   699,     0,   343,   344,   345,     0,
     346,     0,   347,   348,   349,   350,   351,     0,   700,   353,
     354,     0,     0,   355,     0,     0,     0,   356,   357,   358,
     359,   360,     0,     0,   361,   362,   363,   364,   365,     0,
     366,   367,     0,   368,   369,   370,   701,   702,   371,     0,
     372,     0,   373,   374,     0,   375,   376,     0,     0,   703,
     377,   378,   379,   380,   381,   704,   383,   384,   385,   386,
       0,   705,   388,     0,     0,     0,   389,   390,   391,   392,
       0,     0,     0,   393,     0,     0,     0,   394,     0,   395,
     396,   397,   398,     0,   399,   400,   401,   402,   403,     0,
       0,     0,     0,     0,     0,   404,   405,     0,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   706,   707,   411,
     412,     0,   413,   414,   708,   416,   417,   418,   709,   710,
     419,   420,   421,   422,   711,   423,   424,     0,     0,   425,
     426,   427,   428,     0,   712,   429,   430,     0,   713,   714,
     715,   716,     0,     0,     0,     0,     0,   435,   436,     0,
     717,   718,   719,   438,   439,   440,   720,   441,   442,   721,
     443,   444,     0,   445,   446,     0,     0,   447,     0,     0,
     448,     0,   449,     0,   722,   451,     0,     0,   723,   724,
     725,   726,   452,     0,     0,   453,   727,     0,   728,   454,
     455,   456,   729,     0,     0,     0,     0,     0,     0,   458,
     459,     0,   460,   461,   462,     0,     0,   730,     0,     0,
       0,   731,   732,     0,     0,     0,     0,   733,   734,     0,
       0,   735,   736,     0,     0,   737,   738,   135,     0,   636,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,   637,     0,   143,   144,   145,   146,   147,   638,
     149,     0,   150,     0,     0,   639,   151,   640,   641,   642,
     152,   643,     0,   153,   154,   155,     0,   156,     0,   157,
     158,     0,     0,   159,   644,   645,   160,   161,     0,   162,
     646,   647,   164,     0,   165,   166,   167,   168,   648,   170,
       0,   649,   172,     0,   173,   174,   175,   176,   177,   178,
     179,   180,     0,   181,   182,     0,   183,   184,   185,   650,
     187,     0,   188,   651,   652,   189,     0,     0,   190,   653,
     654,     0,   191,   655,   656,     0,   192,   193,   194,   657,
     658,   659,     0,     0,     0,     0,   660,   197,   661,     0,
       0,   662,   198,     0,   199,     0,     0,     0,   200,     0,
     201,   202,   203,   204,     0,     0,     0,   205,     0,     0,
     206,   207,   208,     0,     0,     0,   209,     0,   210,   211,
       0,   212,   213,   214,     0,     0,   215,   216,     0,   217,
     218,   219,   220,   221,   663,     0,   222,   223,   224,   664,
     665,   225,   226,     0,   227,   228,   229,   666,     0,   230,
       0,     0,     0,   231,     0,   232,     0,   233,     0,   234,
     667,   236,   668,   238,     0,   239,     0,   669,     0,   240,
     241,     0,   242,   670,     0,   243,   244,     0,     0,     0,
     671,   246,   247,   248,   672,     0,   249,   250,   251,     0,
       0,   252,     0,     0,     0,   673,   253,   254,   674,     0,
       0,   255,     0,   256,   257,     0,   258,   259,     0,     0,
       0,   260,     0,     0,   261,   262,     0,     0,   263,     0,
     675,   264,   265,     0,     0,     0,     0,     0,   676,   267,
       0,   268,     0,   269,     0,   270,   271,     0,     0,   677,
       0,     0,     0,     0,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,   678,   288,   289,   290,   291,   679,   292,   293,     0,
       0,     0,     0,   294,   295,   296,   297,   680,   299,     0,
       0,   681,   301,   682,   302,     0,   303,   683,   684,   685,
     686,   687,   308,   309,   310,   311,   312,     0,   688,   313,
     314,     0,     0,   315,   316,   317,   318,   689,   690,   691,
     319,   320,     0,   692,   693,     0,   321,   322,   694,     0,
     324,   325,   326,     0,   327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   328,   329,   330,   695,   331,   332,
     333,   334,   335,   696,   337,   338,   339,   697,   698,   342,
     699,     0,   343,   344,   345,     0,   346,     0,   347,   348,
     349,   350,   351,     0,   700,   353,   354,     0,     0,   355,
       0,     0,     0,   356,   357,   358,   359,   360,     0,     0,
     361,   362,   363,   364,   365,     0,   366,   367,     0,   368,
     369,   370,   701,   702,   371,     0,   372,     0,   373,   374,
       0,   375,   376,     0,     0,   703,   377,   378,   379,   380,
     381,   704,   383,   384,   385,   386,     0,   705,   388,     0,
       0,     0,   389,   390,   391,   392,     0,     0,     0,   393,
       0,     0,     0,   394,     0,   395,   396,   397,   398,     0,
     399,   400,   401,   402,   403,     0,     0,     0,     0,     0,
       0,   404,   405,     0,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   706,   707,   411,   412,     0,   413,   414,
     708,   416,   417,   418,   709,   710,   419,   420,   421,   422,
     711,   423,   424,     0,     0,   425,   426,   427,   428,     0,
     712,   429,   430,     0,   713,   714,   715,   716,     0,     0,
       0,     0,     0,   435,   436,     0,   717,   718,   719,   438,
     439,   440,   720,   441,   442,   721,   443,   444,     0,   445,
     446,     0,     0,   447,     0,     0,   448,     0,   449,     0,
     722,   451,     0,     0,   723,   724,   725,   726,   452,     0,
       0,   453,   727,     0,   728,   454,   455,   456,   729,     0,
       0,     0,     0,     0,     0,   458,   459,     0,   460,   461,
     462,     0,     0,   730,     0,     0,     0,   731,   732,     0,
       0,     0,     0,   733,   734,     0,     0,   735,   736,     0,
       0,   737,   738,   135,     0,   636,   137,   138,   139,   140,
       0,     0,     0,     0,     0,   141,     0,     0,   637,     0,
     143,   144,   145,   146,   147,   638,   149,     0,   150,     0,
       0,   639,   151,   640,   641,   642,   152,   643,     0,   153,
     154,   155,     0,   156,     0,   157,   158,     0,     0,   159,
     644,   645,   160,   161,     0,   162,   646,   647,   164,     0,
     165,   166,   167,   168,   648,   170,     0,   649,   172,     0,
     173,   174,   175,   176,   177,   178,   179,   180,     0,   181,
     182,     0,   183,   184,   185,   650,   187,     0,   188,   651,
     652,   189,     0,     0,   190,   653,   654,     0,   191,   655,
     656,     0,   192,   193,   194,   657,   658,   659,     0,     0,
       0,     0,   660,   197,   661,     0,     0,   662,   198,     0,
     199,     0,     0,     0,   200,     0,   201,   202,   203,   204,
       0,     0,     0,   205,     0,     0,   206,   207,   208,     0,
       0,     0,   209,     0,   210,   211,     0,   212,   213,   214,
       0,     0,   215,   216,     0,   217,   218,   219,   220,   221,
     663,     0,   222,   223,   224,   664,   665,   225,   226,     0,
     227,   228,   229,   666,     0,   230,     0,     0,     0,   231,
       0,   232,     0,   233,     0,   234,   667,   236,   668,   238,
       0,   239,     0,   669,     0,   240,   241,     0,   242,   670,
       0,   243,   244,     0,     0,     0,   671,   246,   247,   248,
     672,     0,   249,   250,   251,     0,     0,   252,     0,     0,
       0,   673,   253,   254,   674,     0,     0,   255,     0,   256,
     257,     0,   258,   259,     0,     0,     0,   260,     0,     0,
     261,   262,     0,     0,   263,     0,   675,   264,   265,     0,
       0,     0,     0,     0,   676,   267,     0,   268,     0,   269,
       0,   270,   271,     0,     0,   677,     0,     0,     0,     0,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   285,   286,   287,   678,   288,   289,
     290,   291,   679,   292,   293,     0,     0,     0,     0,   294,
     295,   296,   297,   680,   299,     0,     0,   681,   301,   682,
     302,     0,   303,   683,   684,   685,   686,   687,   308,   309,
     310,   311,   312,     0,   688,   313,   314,     0,     0,   315,
     316,   317,   318,   689,   690,   691,   319,   320,     0,   692,
     693,     0,   321,   322,   694,     0,   324,   325,   326,     0,
     327,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     328,   329,   330,   695,   331,   332,   333,   334,   335,   696,
     337,   338,   339,   697,   698,   342,   699,     0,   343,   344,
     345,     0,   346,     0,   347,   348,   349,   350,   351,     0,
     700,   353,   354,     0,     0,   355,     0,     0,     0,   356,
     357,   358,   359,   360,     0,     0,   361,   362,   363,   364,
     365,     0,   366,   367,     0,   368,   369,   370,   701,   702,
     371,     0,   372,     0,   373,   374,     0,   375,   376,     0,
       0,   703,   377,   378,   379,   380,   381,   704,   383,   384,
     385,   386,     0,   705,   388,     0,     0,     0,   389,   390,
     391,   392,     0,     0,     0,   393,     0,     0,     0,   394,
       0,   395,   396,   397,   398,     0,   399,   400,   401,   402,
     403,     0,     0,     0,     0,     0,     0,   404,   405,     0,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   706,
     707,   411,   412,     0,   413,   414,   708,   416,   417,   418,
     709,   710,   419,   420,   421,   422,   711,   423,   424,     0,
       0,   425,   426,   427,   428,     0,   712,   429,   430,     0,
     713,   714,   715,   716,     0,     0,     0,     0,     0,   435,
     436,     0,   717,   718,   719,   438,   439,   440,   720,   441,
     442,   721,   443,   444,     0,   445,   446,     0,     0,   447,
       0,     0,   448,     0,   449,     0,   722,   451,     0,     0,
     723,   724,   725,   726,   452,     0,     0,   453,   727,     0,
     728,   454,   455,   456,   729,     0,     0,     0,     0,     0,
       0,   458,   459,     0,   460,   461,   462,     0,     0,   730,
       0,     0,     0,   731,   732,     0,     0,     0,     0,   733,
    1061,     0,     0,   735,   736,     0,     0,   737,   738,   135,
       0,   636,   137,   138,   139,   140,  1619,     0,     0,     0,
       0,  1620,     0,     0,   637,     0,   143,   144,   145,   146,
     147,   638,   149,     0,   150,     0,     0,   639,   151,   640,
     641,   642,   152,   643,     0,   153,   154,   155,     0,   156,
       0,   157,   158,     0,     0,   159,   644,   645,   160,   161,
       0,   162,   646,   647,   164,     0,   165,   166,   167,   168,
     648,   170,     0,   649,   172,     0,   173,   174,   175,   176,
     177,   178,   179,   180,     0,   181,   182,     0,   183,   184,
     185,   650,   187,     0,   188,   651,   652,   189,     0,     0,
     190,   653,   654,     0,   191,   655,   656,     0,   192,   193,
     194,   657,   658,   659,     0,     0,     0,     0,   660,   197,
     661,     0,     0,   662,   198,     0,   199,     0,     0,     0,
     200,     0,   201,   202,   203,   204,     0,     0,     0,   205,
       0,     0,   206,   207,   208,     0,     0,     0,   209,     0,
     210,   211,     0,   212,   213,   214,     0,     0,   215,   216,
       0,   217,   218,   219,   220,   221,   663,     0,   222,   223,
     224,   664,   665,   225,   226,     0,   227,   228,   229,   666,
       0,   230,     0,     0,     0,   231,     0,   232,     0,   233,
       0,   234,   667,   236,   668,   238,     0,   239,     0,   669,
       0,   240,   241,     0,   242,   670,     0,   243,   244,     0,
       0,     0,   671,   246,   247,   248,   672,     0,   249,   250,
     251,     0,     0,   252,     0,     0,     0,   673,   253,   254,
     674,     0,     0,   255,     0,   256,   257,     0,   258,   259,
       0,     0,     0,   260,     0,     0,   261,   262,     0,     0,
     263,     0,   675,   264,   265,     0,     0,     0,     0,     0,
     676,   267,     0,   268,     0,   269,     0,   270,   271,     0,
       0,   677,     0,     0,     0,     0,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     285,   286,   287,   678,   288,   289,   290,   291,   679,   292,
     293,     0,     0,     0,     0,   294,   295,   296,   297,   680,
     299,     0,     0,   681,   301,   682,   302,     0,   303,   683,
     684,   685,   686,   687,   308,   309,   310,   311,   312,     0,
     688,   313,   314,     0,     0,   315,   316,   317,   318,   689,
       0,   691,   319,   320,     0,   692,   693,     0,   321,   322,
     694,     0,   324,   325,   326,     0,   327,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   328,   329,   330,   695,
     331,   332,   333,   334,   335,   696,   337,   338,   339,   697,
     698,   342,   699,     0,   343,   344,   345,     0,   346,     0,
     347,   348,   349,   350,   351,     0,   700,   353,   354,     0,
       0,   355,     0,     0,     0,   356,   357,   358,   359,   360,
       0,     0,   361,   362,   363,   364,   365,     0,   366,   367,
       0,   368,   369,   370,   701,   702,   371,     0,   372,     0,
     373,   374,     0,   375,   376,     0,     0,   703,   377,   378,
     379,   380,   381,   704,   383,   384,   385,   386,     0,   705,
     388,     0,     0,     0,   389,   390,   391,   392,     0,     0,
       0,   393,     0,     0,     0,   394,     0,   395,   396,   397,
     398,     0,   399,   400,   401,   402,   403,     0,     0,     0,
       0,     0,     0,   404,   405,     0,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   706,   707,   411,   412,     0,
     413,   414,   708,   416,   417,   418,   709,   710,   419,   420,
     421,   422,   711,   423,   424,     0,     0,   425,   426,   427,
     428,     0,   712,   429,   430,     0,   713,   714,   715,   716,
       0,     0,     0,     0,     0,   435,   436,     0,   717,   718,
     719,   438,   439,   440,   720,   441,   442,   721,   443,   444,
       0,   445,   446,     0,     0,   447,     0,     0,   448,     0,
     449,     0,   722,   451,     0,     0,   723,   724,   725,   726,
     452,     0,     0,   453,   727,     0,   728,   454,   455,   456,
     729,     0,     0,     0,     0,     0,     0,   458,   459,     0,
     460,   461,   462,     0,     0,   730,     0,     0,     0,   731,
     732,     0,     0,     0,     0,   733,   734,     0,     0,   735,
     736,     0,     0,   737,   738,   135,     0,   636,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     637,     0,   143,   144,   145,   146,   147,   638,   149,     0,
     150,     0,     0,   639,   151,   640,   641,   642,   152,   643,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,   644,   645,   160,   161,     0,   162,   646,   647,
     164,     0,   165,   166,   167,   168,   648,   170,     0,   649,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   650,   187,     0,
     188,   651,   652,   189,     0,     0,   190,   653,   654,     0,
     191,   655,   656,     0,   192,   193,   194,   657,   658,   659,
       0,     0,     0,     0,   660,   197,   661,     0,     0,   662,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,   663,     0,   222,   223,   224,   664,   665,   225,
     226,     0,   227,   228,   229,   666,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   667,   236,
     668,   238,     0,   239,     0,   669,     0,   240,   241,     0,
     242,   670,     0,   243,   244,     0,     0,     0,   671,   246,
     247,   248,   672,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,   673,   253,   254,  2499,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,   675,   264,
     265,     0,     0,     0,     0,     0,   676,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,   677,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,   678,
     288,   289,   290,   291,   679,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   680,   299,     0,     0,   681,
     301,   682,   302,     0,   303,   683,   684,   685,   686,   687,
     308,   309,   310,   311,   312,     0,   688,   313,   314,     0,
       0,   315,   316,   317,   318,   689,   690,   691,   319,   320,
       0,   692,   693,     0,   321,   322,   694,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,   695,   331,   332,   333,   334,
     335,   696,   337,   338,   339,   697,   698,   342,   699,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   700,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
     701,   702,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,   703,   377,   378,   379,   380,   381,   704,
     383,   384,   385,   386,     0,   705,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   706,   707,   411,   412,     0,   413,   414,   708,   416,
     417,   418,   709,   710,   419,   420,   421,   422,   711,   423,
     424,     0,     0,   425,   426,   427,   428,     0,   712,   429,
     430,     0,   713,   714,   715,   716,     0,     0,     0,     0,
       0,   435,   436,     0,   717,   718,   719,   438,   439,   440,
     720,   441,   442,   721,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   722,   451,
       0,     0,   723,   724,   725,   726,   452,     0,     0,   453,
     727,     0,   728,   454,   455,   456,   729,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
       0,   730,     0,     0,     0,   731,   732,     0,     0,     0,
       0,   733,   734,     0,     0,   735,   736,     0,     0,   737,
     738,   135,     0,   636,   137,   138,   139,   140,     0,     0,
       0,     0,     0,   141,     0,     0,   637,     0,   143,   144,
     145,   146,   147,   638,   149,     0,   150,     0,     0,   639,
     151,   640,   641,   642,   152,   643,     0,   153,   154,   155,
       0,   156,     0,   157,   158,     0,     0,   159,   644,   645,
     160,   161,     0,   162,   646,   647,   164,     0,   165,   166,
     167,   168,   648,   170,     0,   649,   172,     0,   173,   174,
     175,   176,   177,   178,   179,   180,     0,   181,   182,     0,
     183,   184,   185,   650,   187,     0,   188,   651,   652,   189,
       0,     0,   190,   653,   654,     0,   191,   655,   656,     0,
     192,   193,   194,   657,   658,   659,     0,     0,     0,     0,
     660,   197,   661,     0,     0,   662,   198,     0,   199,     0,
       0,     0,   200,     0,   201,   202,   203,   204,     0,     0,
       0,   205,     0,     0,   206,   207,   208,     0,     0,     0,
     209,     0,   210,   211,     0,   212,   213,   214,     0,     0,
     215,   216,     0,   217,   218,   219,   220,   221,   663,     0,
     222,   223,   224,   664,   665,   225,   226,     0,   227,   228,
     229,   666,     0,   230,     0,     0,     0,   231,     0,   232,
       0,   233,     0,   234,   667,   236,   668,   238,     0,   239,
       0,   669,     0,   240,   241,     0,   242,   670,     0,   243,
     244,     0,     0,     0,   671,   246,   247,   248,   672,     0,
     249,   250,   251,     0,     0,   252,     0,     0,     0,   673,
     253,   254,  2545,     0,     0,   255,     0,   256,   257,     0,
     258,   259,     0,     0,     0,   260,     0,     0,   261,   262,
       0,     0,   263,     0,   675,   264,   265,     0,     0,     0,
       0,     0,   676,   267,     0,   268,     0,   269,     0,   270,
     271,     0,     0,   677,     0,     0,     0,     0,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   287,   678,   288,   289,   290,   291,
     679,   292,   293,     0,     0,     0,     0,   294,   295,   296,
     297,   680,   299,     0,     0,   681,   301,   682,   302,     0,
     303,   683,   684,   685,   686,   687,   308,   309,   310,   311,
     312,     0,   688,   313,   314,     0,     0,   315,   316,   317,
     318,   689,   690,   691,   319,   320,     0,   692,   693,     0,
     321,   322,   694,     0,   324,   325,   326,     0,   327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   328,   329,
     330,   695,   331,   332,   333,   334,   335,   696,   337,   338,
     339,   697,   698,   342,   699,     0,   343,   344,   345,     0,
     346,     0,   347,   348,   349,   350,   351,     0,   700,   353,
     354,     0,     0,   355,     0,     0,     0,   356,   357,   358,
     359,   360,     0,     0,   361,   362,   363,   364,   365,     0,
     366,   367,     0,   368,   369,   370,   701,   702,   371,     0,
     372,     0,   373,   374,     0,   375,   376,     0,     0,   703,
     377,   378,   379,   380,   381,   704,   383,   384,   385,   386,
       0,   705,   388,     0,     0,     0,   389,   390,   391,   392,
       0,     0,     0,   393,     0,     0,     0,   394,     0,   395,
     396,   397,   398,     0,   399,   400,   401,   402,   403,     0,
       0,     0,     0,     0,     0,   404,   405,     0,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   706,   707,   411,
     412,     0,   413,   414,   708,   416,   417,   418,   709,   710,
     419,   420,   421,   422,   711,   423,   424,     0,     0,   425,
     426,   427,   428,     0,   712,   429,   430,     0,   713,   714,
     715,   716,     0,     0,     0,     0,     0,   435,   436,     0,
     717,   718,   719,   438,   439,   440,   720,   441,   442,   721,
     443,   444,     0,   445,   446,     0,     0,   447,     0,     0,
     448,     0,   449,     0,   722,   451,     0,     0,   723,   724,
     725,   726,   452,     0,     0,   453,   727,     0,   728,   454,
     455,   456,   729,     0,     0,     0,     0,     0,     0,   458,
     459,     0,   460,   461,   462,     0,     0,   730,     0,     0,
       0,   731,   732,     0,     0,     0,     0,   733,   734,     0,
       0,   735,   736,     0,     0,   737,   738,   135,     0,   636,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,   637,     0,   143,   144,   145,   146,   147,   638,
     149,     0,   150,     0,     0,   639,   151,   640,   641,   642,
     152,   643,     0,   153,   154,   155,     0,   156,     0,   157,
     158,     0,     0,   159,   644,   645,   160,   161,     0,   162,
     646,   647,   164,     0,   165,   166,   167,   168,   648,   170,
       0,   649,   172,     0,   173,   174,   175,   176,   177,   178,
     179,   180,     0,   181,   182,     0,   183,   184,   185,   650,
     187,     0,   188,   651,   652,   189,     0,     0,   190,   653,
     654,     0,   191,   655,   656,     0,   192,   193,   194,   657,
     658,   659,     0,     0,     0,     0,   660,   197,   661,     0,
       0,  3252,   198,     0,   199,     0,     0,     0,   200,     0,
     201,   202,   203,   204,     0,     0,     0,   205,     0,     0,
     206,   207,   208,     0,     0,     0,   209,     0,   210,   211,
       0,   212,   213,   214,     0,     0,   215,   216,     0,   217,
     218,   219,   220,   221,   663,     0,   222,   223,   224,   664,
     665,   225,   226,     0,   227,   228,   229,   666,     0,   230,
       0,     0,     0,   231,     0,   232,     0,   233,     0,   234,
     667,   236,   668,   238,     0,   239,     0,   669,     0,   240,
     241,     0,   242,   670,     0,   243,   244,     0,     0,     0,
     671,   246,   247,   248,   672,     0,   249,   250,   251,     0,
       0,   252,     0,     0,     0,   673,   253,   254,   674,     0,
       0,   255,     0,   256,   257,     0,   258,   259,     0,     0,
       0,   260,     0,     0,   261,   262,     0,     0,   263,     0,
     675,   264,   265,     0,     0,     0,     0,     0,   676,   267,
       0,   268,     0,   269,     0,   270,   271,     0,     0,   677,
       0,     0,     0,     0,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,   678,   288,   289,   290,   291,   679,   292,   293,     0,
       0,     0,     0,   294,   295,   296,   297,   680,   299,     0,
       0,   681,   301,   682,   302,     0,   303,   683,   684,   685,
     686,   687,   308,   309,   310,   311,   312,     0,   688,   313,
     314,     0,     0,   315,   316,   317,   318,   689,   690,   691,
     319,   320,     0,   692,   693,     0,   321,   322,   694,     0,
     324,   325,   326,     0,   327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   328,   329,   330,   695,   331,   332,
     333,   334,   335,   696,   337,   338,   339,   697,   698,   342,
     699,     0,   343,   344,   345,     0,   346,     0,   347,   348,
     349,   350,   351,     0,   700,   353,   354,     0,     0,   355,
       0,     0,     0,   356,   357,   358,   359,   360,     0,     0,
     361,   362,   363,   364,   365,     0,   366,   367,     0,   368,
     369,   370,   701,   702,   371,     0,   372,     0,   373,   374,
       0,   375,   376,     0,     0,   703,   377,   378,   379,   380,
     381,   704,   383,   384,   385,   386,     0,   705,   388,     0,
       0,     0,   389,   390,   391,   392,     0,     0,     0,   393,
       0,     0,     0,   394,     0,   395,   396,   397,   398,     0,
     399,   400,   401,   402,   403,     0,     0,     0,     0,     0,
       0,   404,   405,     0,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   706,   707,   411,   412,     0,   413,   414,
     708,   416,   417,   418,   709,   710,   419,   420,   421,   422,
     711,   423,   424,     0,     0,   425,   426,   427,   428,     0,
     712,   429,   430,     0,   713,   714,   715,   716,     0,     0,
       0,     0,     0,   435,   436,     0,   717,   718,   719,   438,
     439,   440,   720,   441,   442,   721,   443,   444,     0,   445,
     446,     0,     0,   447,     0,     0,   448,     0,   449,     0,
     722,   451,     0,     0,   723,   724,   725,   726,   452,     0,
       0,   453,   727,     0,   728,   454,   455,   456,   729,     0,
       0,     0,     0,     0,     0,   458,   459,     0,   460,   461,
     462,     0,     0,   730,     0,     0,     0,   731,   732,     0,
       0,     0,     0,   733,   734,     0,     0,   735,   736,     0,
       0,   737,   738,   135,     0,   636,   137,   138,   139,   140,
       0,     0,     0,     0,     0,   141,     0,     0,   637,     0,
     143,   144,   145,   146,   147,   638,   149,     0,   150,     0,
       0,   639,   151,   640,   641,   642,   152,   643,     0,   153,
     154,   155,     0,   156,     0,   157,   158,     0,     0,   159,
     644,   645,   160,   161,     0,   162,   646,   647,   164,     0,
     165,   166,   167,   168,   648,   170,     0,   649,   172,     0,
     173,   174,   175,   176,   177,   178,   179,   180,     0,   181,
     182,     0,   183,   184,   185,   650,   187,     0,   188,   651,
     652,   189,     0,     0,   190,   653,   654,     0,   191,   655,
     656,     0,   192,   193,   194,   657,   658,   659,     0,     0,
       0,     0,   660,   197,   661,     0,     0,   662,   198,     0,
     199,     0,     0,     0,   200,     0,   201,   202,   203,   204,
       0,     0,     0,   205,     0,     0,   206,   207,   208,     0,
       0,     0,   209,     0,   210,   211,     0,   212,   213,   214,
       0,     0,   215,   216,     0,   217,   218,   219,   220,   221,
     663,     0,   222,   223,   224,   664,   665,   225,   226,     0,
     227,   228,   229,   666,     0,   230,     0,     0,     0,   231,
       0,   232,     0,   233,     0,   234,   667,   236,   668,   238,
       0,   239,     0,   669,     0,   240,   241,     0,   242,   670,
       0,   243,   244,     0,     0,     0,   671,   246,   247,   248,
     672,     0,   249,   250,   251,     0,     0,   252,     0,     0,
       0,   673,   253,   254,   674,     0,     0,   255,     0,   256,
     257,     0,   258,   259,     0,     0,     0,   260,     0,     0,
     261,   262,     0,     0,   263,     0,   675,   264,   265,     0,
       0,     0,     0,     0,   676,   267,     0,   268,     0,   269,
       0,   270,   271,     0,     0,   677,     0,     0,     0,     0,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   285,   286,   287,   678,   288,   289,
     290,   291,   679,   292,   293,  4083,     0,     0,     0,   294,
     295,   296,   297,   680,   299,     0,     0,   681,   301,   682,
     302,     0,   303,   683,   684,   685,   686,   687,   308,   309,
     310,   311,   312,     0,   688,   313,   314,     0,     0,   315,
     316,   317,   318,   689,     0,   691,   319,   320,     0,   692,
     693,     0,   321,   322,   694,     0,   324,   325,   326,     0,
     327,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     328,   329,   330,   695,   331,   332,   333,   334,   335,   696,
     337,   338,   339,   697,   698,   342,   699,     0,   343,   344,
     345,     0,   346,     0,   347,   348,   349,   350,   351,     0,
     700,   353,   354,     0,     0,   355,     0,     0,     0,   356,
     357,   358,   359,   360,     0,     0,   361,   362,   363,   364,
     365,     0,   366,   367,     0,   368,   369,   370,   701,   702,
     371,     0,   372,     0,   373,   374,     0,   375,   376,     0,
       0,   703,   377,   378,   379,   380,   381,   704,   383,   384,
     385,   386,     0,   705,   388,     0,     0,     0,   389,   390,
     391,   392,     0,     0,     0,   393,     0,     0,     0,   394,
       0,   395,   396,   397,   398,     0,   399,   400,   401,   402,
     403,     0,     0,     0,     0,     0,     0,   404,   405,     0,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   706,
     707,   411,   412,     0,   413,   414,   708,   416,   417,   418,
     709,   710,   419,   420,   421,   422,   711,   423,   424,     0,
       0,   425,   426,   427,   428,     0,   712,   429,   430,     0,
     713,   714,   715,   716,     0,     0,     0,     0,     0,   435,
     436,     0,   717,   718,   719,   438,   439,   440,   720,   441,
     442,   721,   443,   444,     0,   445,   446,     0,     0,   447,
       0,     0,   448,     0,   449,     0,   722,   451,     0,     0,
     723,   724,   725,   726,   452,     0,     0,   453,   727,     0,
     728,   454,   455,   456,   729,     0,     0,     0,     0,     0,
       0,   458,   459,     0,   460,   461,   462,     0,     0,   730,
       0,     0,     0,   731,   732,     0,     0,     0,     0,   733,
     734,     0,     0,   735,   736,     0,     0,   737,   738,   135,
       0,   636,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   637,     0,   143,   144,   145,   146,
     147,   638,   149,     0,   150,     0,     0,   639,   151,   640,
     641,   642,   152,   643,     0,   153,   154,   155,     0,   156,
       0,   157,   158,     0,     0,   159,   644,   645,   160,   161,
       0,   162,   646,   647,   164,     0,   165,   166,   167,   168,
     648,   170,     0,   649,   172,     0,   173,   174,   175,   176,
     177,   178,   179,   180,     0,   181,   182,     0,   183,   184,
     185,   650,   187,     0,   188,   651,   652,   189,     0,     0,
     190,   653,   654,     0,   191,   655,   656,     0,   192,   193,
     194,   657,   658,   659,     0,     0,     0,     0,   660,   197,
     661,     0,     0,   662,   198,     0,   199,     0,     0,     0,
     200,     0,   201,   202,   203,   204,     0,     0,     0,   205,
       0,     0,   206,   207,   208,     0,     0,     0,   209,     0,
     210,   211,     0,   212,   213,   214,     0,     0,   215,   216,
       0,   217,   218,   219,   220,   221,   663,     0,   222,   223,
     224,   664,   665,   225,   226,     0,   227,   228,   229,   666,
       0,   230,     0,     0,     0,   231,     0,   232,     0,   233,
       0,   234,   667,   236,   668,   238,     0,   239,     0,   669,
       0,   240,   241,     0,   242,   670,     0,   243,   244,     0,
       0,     0,   671,   246,   247,   248,   672,     0,   249,   250,
     251,     0,     0,   252,     0,     0,     0,   673,   253,   254,
     674,     0,     0,   255,     0,   256,   257,     0,   258,   259,
       0,     0,     0,   260,     0,     0,   261,   262,     0,     0,
     263,     0,   675,   264,   265,     0,     0,     0,     0,     0,
     676,   267,     0,   268,     0,   269,     0,   270,   271,     0,
       0,   677,     0,     0,     0,     0,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     285,   286,   287,   678,   288,   289,   290,   291,   679,   292,
     293,     0,     0,     0,     0,   294,   295,   296,   297,   680,
     299,     0,     0,   681,   301,   682,   302,     0,   303,   683,
     684,   685,   686,   687,   308,   309,   310,   311,   312,     0,
     688,   313,   314,     0,     0,   315,   316,   317,   318,   689,
       0,   691,   319,   320,     0,   692,   693,     0,   321,   322,
     694,     0,   324,   325,   326,     0,   327,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   328,   329,   330,   695,
     331,   332,   333,   334,   335,   696,   337,   338,   339,   697,
     698,   342,   699,     0,   343,   344,   345,     0,   346,     0,
     347,   348,   349,   350,   351,     0,   700,   353,   354,     0,
       0,   355,     0,     0,     0,   356,   357,   358,   359,   360,
       0,     0,   361,   362,   363,   364,   365,     0,   366,   367,
       0,   368,   369,   370,   701,   702,   371,     0,   372,     0,
     373,   374,     0,   375,   376,     0,     0,   703,   377,   378,
     379,   380,   381,   704,   383,   384,   385,   386,     0,   705,
     388,     0,     0,     0,   389,   390,   391,   392,     0,     0,
       0,   393,     0,     0,     0,   394,     0,   395,   396,   397,
     398,     0,   399,   400,   401,   402,   403,     0,     0,     0,
       0,     0,     0,   404,   405,     0,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   706,   707,   411,   412,     0,
     413,   414,   708,   416,   417,   418,   709,   710,   419,   420,
     421,   422,   711,   423,   424,     0,     0,   425,   426,   427,
     428,     0,   712,   429,   430,     0,   713,   714,   715,   716,
       0,     0,     0,     0,     0,   435,   436,     0,   717,   718,
     719,   438,   439,   440,   720,   441,   442,   721,   443,   444,
       0,   445,   446,     0,     0,   447,     0,     0,   448,     0,
     449,     0,   722,   451,     0,     0,   723,   724,   725,   726,
     452,     0,     0,   453,   727,     0,   728,   454,   455,   456,
     729,     0,     0,     0,     0,     0,     0,   458,   459,     0,
     460,   461,   462,     0,     0,   730,     0,     0,     0,   731,
     732,     0,     0,     0,     0,   733,   734,     0,     0,   735,
     736,     0,     0,   737,   738,   135,     0,   636,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     637,     0,   143,   144,   145,   146,   147,   638,   149,     0,
     150,     0,     0,   639,   151,   640,   641,   642,   152,   643,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,   644,   645,   160,   161,     0,   162,   646,   647,
     164,     0,   165,   166,   167,   168,   648,   170,     0,   649,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   650,   187,     0,
     188,   651,   652,   189,     0,     0,   190,   653,   654,     0,
     191,   655,   656,     0,   192,   193,   194,   657,   658,   659,
       0,     0,     0,     0,   660,   197,   661,     0,     0,   662,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,   663,     0,   222,   223,   224,   664,   665,   225,
     226,     0,   227,   228,   229,   666,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   667,   236,
     668,   238,     0,   239,     0,   669,     0,   240,   241,     0,
     242,   670,     0,   243,   244,     0,     0,     0,   671,   246,
     247,   248,   672,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,   673,   253,   254,  1634,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,   675,   264,
     265,     0,     0,     0,     0,     0,   676,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,   677,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,   678,
     288,   289,   290,   291,   679,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   680,   299,     0,     0,   681,
     301,   682,   302,     0,   303,   683,   684,   685,   686,   687,
     308,   309,   310,   311,   312,     0,   688,   313,   314,     0,
       0,   315,   316,   317,   318,   689,     0,   691,   319,   320,
       0,   692,   693,     0,   321,   322,   694,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,   695,   331,   332,   333,   334,
     335,   696,   337,   338,   339,   697,   698,   342,   699,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   700,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
     701,   702,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,   703,   377,   378,   379,   380,   381,   704,
     383,   384,   385,   386,     0,   705,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   706,   707,   411,   412,     0,   413,   414,   708,   416,
     417,   418,   709,   710,   419,   420,   421,   422,   711,   423,
     424,     0,     0,   425,   426,   427,   428,     0,   712,   429,
     430,     0,   713,   714,   715,   716,     0,     0,     0,     0,
       0,   435,   436,     0,   717,   718,   719,   438,   439,   440,
     720,   441,   442,   721,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   722,   451,
       0,     0,   723,   724,   725,   726,   452,     0,     0,   453,
     727,     0,   728,   454,   455,   456,   729,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
       0,   730,     0,     0,     0,   731,   732,     0,     0,     0,
       0,   733,   734,     0,     0,   735,   736,     0,     0,   737,
     738,   135,     0,   636,   137,   138,   139,   140,     0,     0,
       0,     0,     0,   141,     0,     0,   637,     0,   143,   144,
     145,   146,   147,   638,   149,     0,   150,     0,     0,   639,
     151,   640,   641,   642,   152,   643,     0,   153,   154,   155,
       0,   156,     0,   157,   158,     0,     0,   159,   644,   645,
     160,   161,     0,   162,   646,   647,   164,     0,   165,   166,
     167,   168,   648,   170,     0,   649,   172,     0,   173,   174,
     175,   176,   177,   178,   179,   180,     0,   181,   182,     0,
     183,   184,   185,   650,   187,     0,   188,   651,   652,   189,
       0,     0,   190,   653,   654,     0,   191,   655,   656,     0,
     192,   193,   194,   657,   658,   659,     0,     0,     0,     0,
     660,   197,   661,     0,     0,   662,   198,     0,   199,     0,
       0,     0,   200,     0,   201,   202,   203,   204,     0,     0,
       0,   205,     0,     0,   206,   207,   208,     0,     0,     0,
     209,     0,   210,   211,     0,   212,   213,   214,     0,     0,
     215,   216,     0,   217,   218,   219,   220,   221,   663,     0,
     222,   223,   224,   664,   665,   225,   226,     0,   227,   228,
     229,   666,     0,   230,     0,     0,     0,   231,     0,   232,
       0,   233,     0,   234,   667,   236,   668,   238,     0,   239,
       0,   669,     0,   240,   241,     0,   242,   670,     0,   243,
     244,     0,     0,     0,   671,   246,   247,   248,   672,     0,
     249,   250,   251,     0,     0,   252,     0,     0,     0,   673,
     253,   254,  1636,     0,     0,   255,     0,   256,   257,     0,
     258,   259,     0,     0,     0,   260,     0,     0,   261,   262,
       0,     0,   263,     0,   675,   264,   265,     0,     0,     0,
       0,     0,   676,   267,     0,   268,     0,   269,     0,   270,
     271,     0,     0,   677,     0,     0,     0,     0,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   287,   678,   288,   289,   290,   291,
     679,   292,   293,     0,     0,     0,     0,   294,   295,   296,
     297,   680,   299,     0,     0,   681,   301,   682,   302,     0,
     303,   683,   684,   685,   686,   687,   308,   309,   310,   311,
     312,     0,   688,   313,   314,     0,     0,   315,   316,   317,
     318,   689,     0,   691,   319,   320,     0,   692,   693,     0,
     321,   322,   694,     0,   324,   325,   326,     0,   327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   328,   329,
     330,   695,   331,   332,   333,   334,   335,   696,   337,   338,
     339,   697,   698,   342,   699,     0,   343,   344,   345,     0,
     346,     0,   347,   348,   349,   350,   351,     0,   700,   353,
     354,     0,     0,   355,     0,     0,     0,   356,   357,   358,
     359,   360,     0,     0,   361,   362,   363,   364,   365,     0,
     366,   367,     0,   368,   369,   370,   701,   702,   371,     0,
     372,     0,   373,   374,     0,   375,   376,     0,     0,   703,
     377,   378,   379,   380,   381,   704,   383,   384,   385,   386,
       0,   705,   388,     0,     0,     0,   389,   390,   391,   392,
       0,     0,     0,   393,     0,     0,     0,   394,     0,   395,
     396,   397,   398,     0,   399,   400,   401,   402,   403,     0,
       0,     0,     0,     0,     0,   404,   405,     0,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   706,   707,   411,
     412,     0,   413,   414,   708,   416,   417,   418,   709,   710,
     419,   420,   421,   422,   711,   423,   424,     0,     0,   425,
     426,   427,   428,     0,   712,   429,   430,     0,   713,   714,
     715,   716,     0,     0,     0,     0,     0,   435,   436,     0,
     717,   718,   719,   438,   439,   440,   720,   441,   442,   721,
     443,   444,     0,   445,   446,     0,     0,   447,     0,     0,
     448,     0,   449,     0,   722,   451,     0,     0,   723,   724,
     725,   726,   452,     0,     0,   453,   727,     0,   728,   454,
     455,   456,   729,     0,     0,     0,     0,     0,     0,   458,
     459,     0,   460,   461,   462,     0,     0,   730,     0,     0,
       0,   731,   732,     0,     0,     0,     0,   733,   734,     0,
       0,   735,   736,     0,     0,   737,   738,   135,     0,   136,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,   142,     0,   143,   144,   145,   146,   147,   148,
     149,     0,   150,     0,     0,     0,   151,   640,     0,     0,
     152,     0,     0,   153,   154,   155,     0,   156,     0,   157,
     158,     0,     0,   159,     0,     0,   160,   161,     0,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,     0,   173,   174,   175,   176,   177,   178,
     179,   180,     0,   181,   182,     0,   183,   184,   185,   186,
     187,     0,   188,     0,     0,   189,     0,     0,   190,     0,
       0,     0,   191,     0,     0,     0,   192,   193,   194,     0,
       0,  2231,     0,     0,     0,     0,   196,   197,   661,     0,
       0,     0,   198,     0,   199,     0,     0,     0,   200,     0,
     201,   202,   203,   204,     0,     0,     0,   205,     0,     0,
     206,   207,   208,     0,     0,     0,   209,     0,   210,   211,
       0,   212,   213,   214,     0,     0,   215,   216,     0,   217,
     218,   219,   220,   221,     0,     0,   222,   223,   224,     0,
     665,   225,   226,     0,   227,   228,   229,   666,     0,   230,
       0,     0,     0,   231,     0,   232,     0,   233,     0,   234,
     235,   236,   237,   238,     0,   239,     0,     0,     0,   240,
     241,     0,   242,   670,     0,   243,   244,     0,     0,     0,
     245,   246,   247,   248,     0,     0,   249,   250,   251,     0,
       0,   252,     0,     0,     0,     0,   253,   254,     0,     0,
       0,   255,     0,   256,   257,     0,   258,   259,     0,     0,
       0,   260,     0,     0,   261,   262,     0,     0,   263,     0,
       0,   264,   265,     0,     0,     0,     0,     0,   266,   267,
       0,   268,     0,   269,     0,   270,   271,     0,     0,   677,
       0,     0,     0,     0,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,     0,   288,   289,   290,   291,     0,   292,   293,     0,
       0,     0,     0,   294,   295,   296,   297,   298,   299,     0,
       0,   300,   301,     0,   302,     0,   303,     0,   304,   305,
     306,   307,   308,   309,   310,   311,   312,     0,   688,   313,
     314,     0,     0,   315,   316,   317,   318,     0,     0,     0,
     319,   320,     0,   692,   693,     0,   321,   322,   323,     0,
     324,   325,   326,     0,   327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,   345,     0,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,     0,     0,   355,
       0,     0,     0,   356,   357,   358,   359,   360,     0,     0,
     361,   362,   363,   364,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,   372,     0,   373,   374,
       0,   375,   376,     0,     0,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,   388,     0,
       0,     0,   389,   390,   391,   392,     0,     0,     0,   393,
       0,     0,     0,   394,     0,   395,   396,   397,   398,     0,
     399,   400,   401,   402,   403,     0,     0,     0,     0,     0,
       0,   404,   405,     0,   406,     0,     0,   407,     0,     0,
     408,   409,   410,     0,     0,   411,   412,     0,   413,   414,
     415,   416,   417,   418,     0,     0,   419,   420,   421,   422,
       0,   423,   424,     0,     0,   425,   426,   427,   428,     0,
     712,   429,   430,     0,  2232,   432,   433,  2233,     0,     0,
       0,     0,     0,   435,   436,     0,     0,   718,   437,   438,
     439,   440,   720,   441,   442,   721,   443,   444,     0,   445,
     446,     0,     0,   447,     0,     0,   448,     0,   449,     0,
     450,   451,     0,     0,     0,     0,     0,     0,   452,     0,
       0,   453,     0,     0,     0,   454,   455,   456,   457,     0,
       0,     0,     0,     0,     0,   458,   459,     0,   460,   461,
     462,     0,     0,   463,     0,     0,     0,     0,   135,     0,
     136,   137,   138,   139,   140,     0,     0,     0,     0,     0,
     141,   737,   738,   142,     0,   143,   144,   145,   146,   147,
     148,   149,     0,   150,     0,     0,     0,   151,     0,     0,
       0,   152,     0,     0,   153,   154,   155,     0,   156,     0,
     157,   158,     0,     0,   159,     0,     0,   160,   161,     0,
     162,   163,     0,   164,     0,   165,   166,   167,   168,   169,
     170,     0,   171,   172,     0,   173,   174,   175,   176,   177,
     178,   179,   180,     0,   181,   182,  2344,   183,   184,   185,
     186,   187,     0,   188,     0,     0,   189,     0,     0,   190,
       0,     0,     0,   191,     0,     0,     0,   192,   193,   194,
       0,     0,   195,     0,     0,     0,     0,   196,   197,     0,
       0,     0,     0,   198,     0,   199,     0,     0,     0,   200,
       0,   201,   202,   203,   204,     0,     0,     0,   205,     0,
       0,   206,   207,   208,     0,     0,     0,   209,     0,   210,
     211,     0,   212,   213,   214,     0,     0,   215,   216,     0,
     217,   218,   219,   220,   221,     0,     0,   222,   223,   224,
       0,     0,   225,   226,     0,   227,   228,   229,     0,     0,
     230,     0,     0,     0,   231,     0,   232,   477,   233,     0,
     234,   235,   236,   237,   238,     0,   239,     0,     0,     0,
     240,   241,     0,   242,     0,     0,   243,   244,     0,     0,
       0,   245,   246,   247,   248,     0,     0,   249,   250,   251,
    1933,     0,   252,     0,     0,     0,     0,   253,   254,     0,
       0,     0,   255,     0,   256,   257,     0,   258,   259,     0,
       0,     0,   260,  1934,     0,   261,   262,     0,     0,   263,
       0,     0,   264,   265,     0,  2869,     0,     0,     0,   266,
     267,     0,   268,     0,   269,     0,   270,   271,     0,     0,
       0,     0,     0,     0,     0,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   285,
     286,   287,     0,   288,   289,   290,   291,     0,   292,   293,
       0,     0,     0,     0,   294,   295,   296,   297,   298,   299,
       0,     0,   300,   301,     0,   302,     0,   303,     0,   304,
     305,   306,   307,   308,   309,   310,   311,   312,     0,     0,
     313,   314,     0,     0,   315,   316,   317,   318,     0,     0,
       0,   319,   320,     0,     0,     0,     0,   321,   322,   323,
       0,   324,   325,   326,     0,   327,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   328,   329,   330,     0,   331,
     332,   333,   334,  2870,   336,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,   345,     0,   346,     0,   347,
     348,   349,   350,   351,     0,   352,   353,   354,     0,     0,
     355,     0,     0,     0,   356,   357,   358,   359,   360,     0,
       0,   361,   362,   363,   364,   365,     0,   366,   367,     0,
     368,   369,   370,     0,     0,   371,     0,   372,     0,   373,
     374,     0,   375,   376,     0,     0,     0,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,     0,   387,   388,
    -436,     0,     0,   389,   390,   391,   392,     0,     0,     0,
     393,     0,     0,     0,   394,     0,   395,   396,   397,   398,
       0,   399,   400,   401,   402,   403,   480,     0,     0,     0,
       0,     0,   404,   405,     0,   406,     0,     0,   407,     0,
       0,   408,   409,   410,     0,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,     0,     0,   419,   420,   421,
     422,     0,   423,   424,     0,     0,   425,   426,   427,   428,
       0,     0,   429,   430,     0,   431,   432,   433,   434,     0,
       0,     0,     0,     0,   435,   436,     0,     0,     0,   437,
     438,   439,   440,     0,   441,   442,     0,   443,   444,     0,
     445,   446,     0,     0,   447,     0,     0,   448,     0,   449,
       0,   450,   451,     0,     0,     0,     0,     0,     0,   452,
       0,     0,   453,     0,     0,     0,   454,   455,   456,   457,
       0,     0,     0,     0,     0,     0,   458,   459,     0,   460,
     461,   462,     0,     0,   463,     0,     0,   135,     0,   136,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,   142,  2409,   143,   144,   145,   146,   147,   148,
     149,     0,   150,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,   153,   154,   155,     0,   156,     0,   157,
     158,     0,     0,   159,     0,     0,   160,   161,     0,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,     0,   173,   174,   175,   176,   177,   178,
     179,   180,     0,   181,   182,  2344,   183,   184,   185,   186,
     187,     0,   188,     0,     0,   189,     0,     0,   190,     0,
       0,     0,   191,     0,     0,     0,   192,   193,   194,     0,
       0,   195,     0,     0,     0,     0,   196,   197,     0,     0,
       0,     0,   198,     0,   199,     0,     0,     0,   200,     0,
     201,   202,   203,   204,     0,     0,     0,   205,     0,     0,
     206,   207,   208,     0,     0,     0,   209,     0,   210,   211,
       0,   212,   213,   214,     0,     0,   215,   216,     0,   217,
     218,   219,   220,   221,     0,     0,   222,   223,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
       0,     0,     0,   231,     0,   232,   477,   233,     0,   234,
     235,   236,   237,   238,     0,   239,     0,     0,     0,   240,
     241,     0,   242,     0,     0,   243,   244,     0,     0,     0,
     245,   246,   247,   248,     0,     0,   249,   250,   251,  1933,
       0,   252,     0,     0,     0,     0,   253,   254,     0,     0,
       0,   255,     0,   256,   257,     0,   258,   259,     0,     0,
       0,   260,  1934,     0,   261,   262,     0,     0,   263,     0,
       0,   264,   265,     0,     0,     0,     0,     0,   266,   267,
       0,   268,     0,   269,     0,   270,   271,     0,     0,     0,
       0,     0,     0,     0,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,     0,   288,   289,   290,   291,     0,   292,   293,     0,
       0,     0,     0,   294,   295,   296,   297,   298,   299,     0,
       0,   300,   301,     0,   302,     0,   303,     0,   304,   305,
     306,   307,   308,   309,   310,   311,   312,     0,     0,   313,
     314,     0,     0,   315,   316,   317,   318,     0,     0,     0,
     319,   320,     0,     0,     0,     0,   321,   322,   323,     0,
     324,   325,   326,     0,   327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,   345,     0,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,     0,     0,   355,
       0,     0,     0,   356,   357,   358,   359,   360,     0,     0,
     361,   362,   363,   364,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,   372,     0,   373,   374,
       0,   375,   376,     0,     0,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,   388,     0,
       0,     0,   389,   390,   391,   392,     0,     0,     0,   393,
       0,     0,     0,   394,     0,   395,   396,   397,   398,     0,
     399,   400,   401,   402,   403,   480,     0,     0,     0,     0,
       0,   404,   405,     0,   406,     0,     0,   407,     0,     0,
     408,   409,   410,     0,     0,   411,   412,     0,   413,   414,
     415,   416,   417,   418,     0,     0,   419,   420,   421,   422,
       0,   423,   424,     0,     0,   425,   426,   427,   428,     0,
       0,   429,   430,     0,   431,   432,   433,   434,     0,     0,
       0,     0,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,   441,   442,     0,   443,   444,     0,   445,
     446,     0,     0,   447,     0,     0,   448,     0,   449,     0,
     450,   451,     0,     0,     0,     0,     0,     0,   452,     0,
       0,   453,     0,     0,     0,   454,   455,   456,   457,     0,
       0,     0,     0,     0,     0,   458,   459,     0,   460,   461,
     462,     0,     0,   463,     0,     0,   135,     0,   136,   137,
     138,   139,   140,     0,     0,     0,     0,     0,   141,     0,
       0,   142,  2409,   143,   144,   145,   146,   147,   148,   149,
       0,   150,     0,     0,     0,   151,     0,     0,     0,   152,
       0,     0,   153,   154,   155,     0,   156,     0,   157,   158,
       0,     0,   159,     0,     0,   160,   161,     0,   162,   163,
       0,   164,     0,   165,   166,   167,   168,   169,   170,     0,
     171,   172,     0,   173,   174,   175,   176,   177,   178,   179,
     180,     0,   181,   182,     0,   183,   184,   185,   186,   187,
       0,   188,     0,     0,   189,     0,     0,   190,     0,     0,
       0,   191,     0,     0,     0,   192,   193,   194,     0,     0,
     195,     0,     0,     0,     0,   196,   197,     0,     0,     0,
       0,   198,     0,   199,     0,     0,     0,   200,     0,   201,
     202,   203,   204,     0,     0,     0,   205,     0,     0,   206,
     207,   208,     0,     0,     0,   209,     0,   210,   211,     0,
     212,   213,   214,     0,     0,   215,   216,     0,   217,   218,
     219,   220,   221,     0,     0,   222,   223,   224,     0,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,     0,
       0,     0,   231,     0,   232,     0,   233,     0,   234,   235,
     236,   237,   238,     0,   239,     0,     0,     0,   240,   241,
       0,   242,     0,     0,   243,   244,     0,     0,     0,   245,
     246,   247,   248,     0,     0,   249,   250,   251,     0,     0,
     252,     0,     0,     0,     0,   253,   254,     0,     0,     0,
     255,     0,   256,   257,     0,   258,   259,     0,     0,     0,
     260,     0,     0,   261,   262,     0,     0,   263,     0,     0,
     264,   265,     0,     0,     0,     0,     0,   266,   267,     0,
     268,     0,   269,     0,   270,   271,     0,     0,     0,     0,
       0,     0,     0,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   285,   286,   287,
       0,   288,   289,   290,   291,     0,   292,   293,     0,     0,
       0,     0,   294,   295,   296,   297,   298,   299,     0,     0,
     300,   301,     0,   302,     0,   303,     0,   304,   305,   306,
     307,   308,   309,   310,   311,   312,     0,     0,   313,   314,
       0,     0,   315,   316,   317,   318,     0,     0,     0,   319,
     320,     0,     0,     0,     0,   321,   322,   323,     0,   324,
     325,   326,     0,   327,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,   345,     0,   346,     0,   347,   348,   349,
     350,   351,     0,   352,   353,   354,     0,     0,   355,     0,
       0,     0,   356,   357,   358,   359,   360,     0,     0,   361,
     362,   363,   364,   365,     0,   366,   367,     0,   368,   369,
     370,     0,     0,   371,     0,   372,     0,   373,   374,     0,
     375,   376,     0,     0,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,   387,   388,  2222,     0,
       0,   389,   390,   391,   392,     0,     0,     0,   393,     0,
       0,     0,   394,     0,   395,   396,   397,   398,     0,   399,
     400,   401,   402,   403,     0,     0,     0,     0,     0,     0,
     404,   405,     0,   406,     0,     0,   407,     0,     0,   408,
     409,   410,     0,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,     0,     0,   419,   420,   421,   422,     0,
     423,   424,     0,     0,   425,   426,   427,   428,     0,     0,
     429,   430,     0,   431,   432,   433,   434,     0,     0,     0,
       0,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,   441,   442,     0,   443,   444,     0,   445,   446,
       0,     0,   447,     0,     0,   448,     0,   449,     0,   450,
     451,     0,     0,     0,     0,     0,     0,   452,     0,     0,
     453,     0,     0,     0,   454,   455,   456,   457,     0,     0,
       0,     0,     0,     0,   458,   459,     0,   460,   461,   462,
       0,     0,   463,     0,     0,   135,     0,   136,   137,   138,
     139,   140,     0,     0,  2637,     0,     0,   141,     0,     0,
     142,   738,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
       0,   463,     0,     0,     0,     0,   135,     0,   136,   137,
     138,   139,   140,  4207,     0,     0,     0,     0,   141,  4208,
     738,   142,     0,   143,   144,   145,   146,   147,   148,   149,
       0,   150,     0,     0,     0,   151,     0,     0,     0,   152,
       0,     0,   153,   154,   155,     0,   156,     0,   157,   158,
       0,     0,   159,     0,     0,   160,   161,     0,   162,   163,
       0,   164,     0,   165,   166,   167,   168,   169,   170,     0,
     171,   172,     0,   173,   174,   175,   176,   177,   178,   179,
     180,     0,   181,   182,     0,   183,   184,   185,   186,   187,
       0,   188,     0,     0,   189,     0,     0,   190,     0,     0,
       0,   191,     0,     0,     0,   192,   193,   194,     0,     0,
     195,     0,     0,     0,     0,   196,   197,     0,     0,     0,
       0,   198,     0,   199,     0,     0,     0,   200,     0,   201,
     202,   203,   204,     0,     0,     0,   205,     0,     0,   206,
     207,   208,     0,     0,     0,   209,     0,   210,   211,     0,
     212,   213,   214,     0,     0,   215,   216,     0,   217,   218,
     219,   220,   221,     0,     0,   222,   223,   224,     0,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,     0,
       0,     0,   231,     0,   232,     0,   233,     0,   234,   235,
     236,   237,   238,     0,   239,     0,     0,     0,   240,   241,
       0,   242,     0,     0,   243,   244,     0,     0,     0,   245,
     246,   247,   248,     0,     0,   249,   250,   251,     0,     0,
     252,     0,     0,     0,     0,   253,   254,     0,     0,     0,
     255,     0,   256,   257,     0,   258,   259,     0,     0,     0,
     260,     0,     0,   261,   262,     0,     0,   263,     0,     0,
     264,   265,     0,     0,     0,     0,     0,   266,   267,     0,
     268,     0,   269,     0,   270,   271,     0,     0,     0,     0,
       0,     0,     0,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   285,   286,   287,
       0,   288,   289,   290,   291,     0,   292,   293,     0,     0,
       0,     0,   294,   295,   296,   297,   298,   299,     0,     0,
     300,   301,     0,   302,     0,   303,     0,   304,   305,   306,
     307,   308,   309,   310,   311,   312,     0,     0,   313,   314,
       0,     0,   315,   316,   317,   318,     0,     0,     0,   319,
     320,     0,     0,     0,     0,   321,   322,   323,     0,   324,
     325,   326,     0,   327,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,   345,     0,   346,     0,   347,   348,   349,
     350,   351,     0,   352,   353,   354,     0,     0,   355,     0,
       0,     0,   356,   357,   358,   359,   360,     0,     0,   361,
     362,   363,   364,   365,     0,   366,   367,     0,   368,   369,
     370,     0,     0,   371,     0,   372,     0,   373,   374,     0,
     375,   376,     0,     0,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,   387,   388,     0,     0,
       0,   389,   390,   391,   392,     0,     0,     0,   393,     0,
       0,     0,   394,     0,   395,   396,   397,   398,     0,   399,
     400,   401,   402,   403,     0,     0,     0,     0,     0,     0,
     404,   405,     0,   406,     0,     0,   407,     0,     0,   408,
     409,   410,     0,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,     0,     0,   419,   420,   421,   422,     0,
     423,   424,     0,     0,   425,   426,   427,   428,     0,     0,
     429,   430,     0,   431,   432,   433,   434,     0,     0,     0,
       0,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,   441,   442,     0,   443,   444,     0,   445,   446,
       0,     0,   447,     0,     0,   448,     0,   449,     0,   450,
     451,     0,     0,     0,     0,     0,     0,   452,     0,     0,
     453,     0,     0,     0,   454,   455,   456,   457,     0,     0,
       0,     0,     0,     0,   458,   459,     0,   460,   461,   462,
       0,     0,   463,     0,     0,   135,     0,   136,   137,   138,
     139,   140,     0,  1065,     0,     0,     0,   141,     0,     0,
     142,   738,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,  1258,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
       0,   463,     0,     0,   135,     0,   136,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   142,
     511,   143,   144,   145,   146,   147,   148,   149,     0,   150,
       0,     0,     0,   151,     0,     0,     0,   152,     0,     0,
     153,   154,   155,     0,   156,     0,   157,   158,     0,     0,
     159,     0,     0,   160,   161,     0,   162,   163,     0,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
       0,   173,   174,   175,   176,   177,   178,   179,   180,     0,
     181,   182,     0,   183,   184,   185,   186,   187,     0,   188,
       0,     0,   189,     0,     0,   190,     0,     0,     0,   191,
       0,     0,     0,   192,   193,   194,     0,     0,   195,     0,
       0,     0,     0,   196,   197,     0,     0,     0,     0,   198,
       0,   199,     0,     0,     0,   200,     0,   201,   202,   203,
     204,     0,     0,     0,   205,     0,     0,   206,   207,   208,
       0,     0,     0,   209,     0,   210,   211,     0,   212,   213,
     214,     0,     0,   215,   216,     0,   217,   218,   219,   220,
     221,     0,     0,   222,   223,   224,     0,     0,   225,   226,
       0,   227,   228,   229,     0,     0,   230,     0,     0,     0,
     231,     0,   232,     0,   233,     0,   234,   235,   236,   237,
     238,     0,   239,     0,     0,     0,   240,   241,     0,   242,
       0,     0,   243,   244,     0,     0,     0,   245,   246,   247,
     248,     0,     0,   249,   250,   251,     0,     0,   252,     0,
       0,     0,     0,   253,   254,     0,     0,     0,   255,     0,
     256,   257,     0,   258,   259,     0,     0,     0,   260,     0,
       0,   261,   262,     0,     0,   263,     0,     0,   264,   265,
       0,     0,     0,     0,     0,   266,   267,     0,   268,     0,
     269,     0,   270,   271,     0,     0,     0,     0,     0,     0,
       0,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   285,   286,   287,     0,   288,
     289,   290,   291,     0,   292,   293,     0,     0,     0,     0,
     294,   295,   296,   297,   298,   299,     0,     0,   300,   301,
       0,   302,     0,   303,     0,   304,   305,   306,   307,   308,
     309,   310,   311,   312,     0,     0,   313,   314,     0,     0,
     315,   316,   317,   318,     0,     0,     0,   319,   320,     0,
       0,     0,     0,   321,   322,   323,     0,   324,   325,   326,
       0,   327,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   328,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,   345,     0,   346,     0,   347,   348,   349,   350,   351,
       0,   352,   353,   354,     0,     0,   355,     0,     0,     0,
     356,   357,   358,   359,   360,     0,     0,   361,   362,   363,
     364,   365,     0,   366,   367,     0,   368,   369,   370,     0,
       0,   371,     0,   372,     0,   373,   374,     0,   375,   376,
       0,     0,     0,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,     0,   387,   388,     0,     0,     0,   389,
     390,   391,   392,     0,     0,     0,   393,     0,     0,     0,
     394,     0,   395,   396,   397,   398,     0,   399,   400,   401,
     402,   403,     0,     0,     0,     0,     0,     0,   404,   405,
       0,   406,     0,     0,   407,     0,     0,   408,   409,   410,
       0,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,     0,   423,   424,
       0,     0,   425,   426,   427,   428,     0,     0,   429,   430,
       0,   431,   432,   433,   434,     0,     0,     0,     0,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
     441,   442,     0,   443,   444,     0,   445,   446,     0,     0,
     447,     0,     0,   448,     0,   449,     0,   450,   451,     0,
       0,     0,     0,     0,     0,   452,     0,     0,   453,     0,
       0,     0,   454,   455,   456,   457,     0,     0,     0,     0,
       0,     0,   458,   459,     0,   460,   461,   462,     0,     0,
     463,     0,     0,     0,     0,   135,  2164,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,   511,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
       0,   463,     0,     0,   135,     0,   136,   137,   138,   139,
     140,     0,  2408,     0,     0,     0,   141,     0,     0,   142,
    2409,   143,   144,   145,   146,   147,   148,   149,     0,   150,
       0,     0,     0,   151,     0,     0,     0,   152,     0,     0,
     153,   154,   155,     0,   156,     0,   157,   158,     0,     0,
     159,     0,     0,   160,   161,     0,   162,   163,     0,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
       0,   173,   174,   175,   176,   177,   178,   179,   180,     0,
     181,   182,     0,   183,   184,   185,   186,   187,     0,   188,
       0,     0,   189,     0,     0,   190,     0,     0,     0,   191,
       0,     0,     0,   192,   193,   194,     0,     0,   195,     0,
       0,     0,     0,   196,   197,     0,     0,     0,     0,   198,
       0,   199,     0,     0,     0,   200,     0,   201,   202,   203,
     204,     0,     0,     0,   205,     0,     0,   206,   207,   208,
       0,     0,     0,   209,     0,   210,   211,     0,   212,   213,
     214,     0,     0,   215,   216,     0,   217,   218,   219,   220,
     221,     0,     0,   222,   223,   224,     0,     0,   225,   226,
       0,   227,   228,   229,     0,     0,   230,     0,     0,     0,
     231,     0,   232,     0,   233,     0,   234,   235,   236,   237,
     238,     0,   239,     0,     0,     0,   240,   241,     0,   242,
       0,     0,   243,   244,     0,     0,     0,   245,   246,   247,
     248,     0,     0,   249,   250,   251,     0,     0,   252,     0,
       0,     0,     0,   253,   254,     0,     0,     0,   255,     0,
     256,   257,     0,   258,   259,     0,     0,     0,   260,     0,
       0,   261,   262,     0,     0,   263,     0,     0,   264,   265,
       0,     0,     0,     0,     0,   266,   267,     0,   268,     0,
     269,     0,   270,   271,     0,     0,     0,     0,     0,     0,
       0,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   285,   286,   287,     0,   288,
     289,   290,   291,     0,   292,   293,     0,     0,     0,     0,
     294,   295,   296,   297,   298,   299,     0,     0,   300,   301,
       0,   302,     0,   303,     0,   304,   305,   306,   307,   308,
     309,   310,   311,   312,     0,     0,   313,   314,     0,     0,
     315,   316,   317,   318,     0,     0,     0,   319,   320,     0,
       0,     0,     0,   321,   322,   323,     0,   324,   325,   326,
       0,   327,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   328,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,   345,     0,   346,     0,   347,   348,   349,   350,   351,
       0,   352,   353,   354,     0,     0,   355,     0,     0,     0,
     356,   357,   358,   359,   360,     0,     0,   361,   362,   363,
     364,   365,     0,   366,   367,     0,   368,   369,   370,     0,
       0,   371,     0,   372,     0,   373,   374,     0,   375,   376,
       0,     0,     0,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,     0,   387,   388,     0,     0,     0,   389,
     390,   391,   392,     0,     0,     0,   393,     0,     0,     0,
     394,     0,   395,   396,   397,   398,     0,   399,   400,   401,
     402,   403,     0,     0,     0,     0,     0,     0,   404,   405,
       0,   406,     0,     0,   407,     0,     0,   408,   409,   410,
       0,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,     0,   423,   424,
       0,     0,   425,   426,   427,   428,     0,     0,   429,   430,
       0,   431,   432,   433,   434,     0,     0,     0,     0,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
     441,   442,     0,   443,   444,     0,   445,   446,     0,     0,
     447,     0,     0,   448,     0,   449,     0,   450,   451,     0,
       0,     0,     0,     0,     0,   452,     0,     0,   453,     0,
       0,     0,   454,   455,   456,   457,     0,     0,     0,     0,
       0,     0,   458,   459,     0,   460,   461,   462,     0,     0,
     463,     0,     0,     0,     0,   135,     0,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,  4208,   738,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
       0,   463,     0,     0,   135,     0,   136,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   142,
     511,   143,   144,   145,   146,   147,   148,   149,     0,   150,
       0,     0,     0,   151,     0,     0,     0,   152,     0,     0,
     153,   154,   155,     0,   156,     0,   157,   158,     0,     0,
     159,     0,     0,   160,   161,     0,   162,   163,     0,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
       0,   173,   174,   175,   176,   177,   178,   179,   180,     0,
     181,   182,     0,   183,   184,   185,   186,   187,     0,   188,
       0,     0,   189,     0,     0,   190,     0,     0,     0,   191,
       0,     0,     0,   192,   193,   194,     0,     0,   195,     0,
       0,     0,     0,   196,   197,     0,     0,     0,     0,   198,
       0,   199,     0,     0,     0,   200,     0,   201,   202,   203,
     204,     0,     0,     0,   205,     0,     0,   206,   207,   208,
       0,     0,     0,   209,     0,   210,   211,     0,   212,   213,
     214,     0,     0,   215,   216,     0,   217,   218,   219,   220,
     221,     0,     0,   222,   577,   224,     0,     0,   225,   226,
       0,   227,   228,   229,     0,     0,   230,     0,     0,     0,
     231,     0,   232,     0,   233,     0,   234,   235,   236,   237,
     238,     0,   239,     0,     0,     0,   240,   241,     0,   242,
       0,     0,   243,   244,     0,     0,     0,   245,   246,   247,
     248,     0,     0,   249,   250,   251,     0,     0,   252,     0,
       0,     0,     0,   253,   254,     0,     0,     0,   255,     0,
     256,   257,     0,   258,   259,     0,     0,     0,   260,     0,
       0,   261,   262,     0,     0,   263,     0,     0,   264,   265,
       0,     0,     0,     0,     0,   266,   267,     0,   268,     0,
     269,     0,   270,   271,     0,     0,     0,     0,     0,     0,
       0,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   285,   286,   287,     0,   288,
     289,   290,   291,     0,   292,   293,     0,     0,     0,     0,
     294,   295,   296,   297,   298,   299,     0,     0,   300,   301,
       0,   302,     0,   303,     0,   304,   305,   306,   307,   308,
     309,   310,   311,   312,     0,     0,   313,   314,     0,     0,
     315,   316,   317,   318,     0,     0,     0,   319,   320,     0,
       0,     0,     0,   321,   322,   323,     0,   324,   325,   326,
       0,   327,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   328,   329,   330,     0,   331,   332,   333,   578,   335,
     336,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,   345,     0,   346,     0,   347,   348,   349,   350,   351,
       0,   352,   353,   354,     0,     0,   355,     0,     0,     0,
     356,   357,   358,   359,   360,     0,     0,   361,   362,   363,
     364,   365,     0,   366,   367,     0,   368,   369,   370,     0,
       0,   371,     0,   372,     0,   373,   374,     0,   375,   376,
       0,     0,     0,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,     0,   387,   388,     0,     0,     0,   389,
     390,   391,   392,     0,     0,     0,   393,     0,     0,     0,
     394,     0,   395,   396,   397,   398,     0,   399,   400,   401,
     402,   403,     0,     0,     0,     0,     0,     0,   404,   405,
       0,   406,     0,     0,   407,     0,     0,   408,   409,   410,
       0,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,     0,   423,   424,
       0,     0,   425,   426,   427,   428,     0,     0,   429,   430,
       0,   431,   432,   433,   434,     0,     0,     0,     0,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
     441,   442,     0,   443,   444,     0,   445,   446,     0,     0,
     447,     0,     0,   448,     0,   449,     0,   450,   451,     0,
       0,     0,     0,     0,     0,   452,     0,     0,   453,     0,
       0,     0,   454,   455,   456,   457,     0,     0,     0,     0,
       0,     0,   458,   459,     0,   460,   461,   462,     0,     0,
     463,     0,     0,   135,     0,   136,   137,   138,   139,   140,
       0,     0,     0,     0,     0,   141,     0,     0,   142,   511,
     143,   144,   145,   146,   147,   148,   149,     0,   150,     0,
       0,     0,   151,     0,     0,     0,   152,     0,     0,   153,
     154,   155,     0,   156,     0,   157,   158,     0,     0,   159,
       0,     0,   160,   161,     0,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,     0,
     173,   174,   175,   176,   177,   178,   179,   180,     0,   181,
     182,     0,   183,   184,   185,   186,   187,     0,   188,     0,
       0,   189,     0,     0,   190,     0,     0,     0,   191,     0,
       0,     0,   192,   193,   194,     0,     0,   195,     0,     0,
       0,     0,   196,   197,     0,     0,     0,     0,   198,     0,
     199,     0,     0,     0,   200,     0,   201,   202,   203,   204,
       0,     0,     0,   205,     0,     0,   206,   207,   208,     0,
       0,     0,   209,     0,   210,   211,     0,   212,   213,   214,
       0,     0,   215,   216,     0,   217,   218,   219,   220,   221,
       0,     0,   222,   223,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,     0,     0,     0,   231,
       0,   232,     0,   233,     0,   234,   235,   236,   237,   238,
       0,   239,     0,     0,     0,   240,   241,     0,   242,     0,
       0,   243,   244,     0,     0,     0,   245,   246,   247,   248,
       0,     0,   249,   250,   251,     0,     0,   252,     0,     0,
       0,     0,   253,   254,     0,     0,     0,   255,     0,   256,
     257,     0,   258,   259,     0,     0,     0,   260,     0,     0,
     261,   262,     0,     0,   263,     0,     0,   264,   265,     0,
       0,     0,     0,     0,   266,   267,     0,   268,     0,   269,
       0,   270,   271,     0,     0,     0,     0,     0,     0,     0,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   285,   286,   287,     0,   288,   289,
     290,   291,     0,   292,   293,     0,     0,     0,     0,   294,
     295,   296,   297,   298,   299,     0,     0,   300,   301,     0,
     302,     0,   303,     0,   304,   305,   306,   307,   308,   309,
     310,   311,   312,     0,     0,   313,   314,     0,     0,   315,
     316,   317,   318,     0,     0,     0,   319,   320,     0,     0,
       0,     0,   321,   322,   323,     0,   324,   325,   326,     0,
     327,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,     0,     0,   343,   344,
     345,     0,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,     0,     0,   355,     0,     0,     0,   356,
     357,   358,   359,   360,     0,     0,   361,   362,   363,   364,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,   372,     0,   373,   374,     0,   375,   376,     0,
       0,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,   388,     0,     0,     0,   389,   390,
     391,   392,     0,     0,     0,   393,     0,     0,     0,   394,
       0,   395,   396,   397,   398,     0,   399,   400,   401,   402,
     403,     0,     0,     0,     0,     0,     0,   404,   405,     0,
     406,     0,     0,   407,     0,     0,   408,   409,   410,     0,
       0,   411,   412,     0,   413,   414,   415,   416,   417,   418,
       0,     0,   419,   420,   421,   422,     0,   423,   424,     0,
       0,   425,   426,   427,   428,     0,     0,   429,   430,     0,
     431,   432,   433,   434,     0,     0,     0,     0,     0,   435,
     436,     0,     0,     0,   437,   438,   439,   440,     0,   441,
     442,     0,   443,   444,     0,   445,   446,     0,     0,   447,
       0,     0,   448,     0,   449,     0,   450,   451,     0,     0,
       0,     0,     0,     0,   452,     0,     0,   453,     0,     0,
       0,   454,   455,   456,   457,     0,     0,     0,     0,     0,
       0,   458,   459,     0,   460,   461,   462,     0,     0,   463,
       0,     0,   135,     0,   136,   137,   138,   139,   140,     0,
       0,     0,     0,     0,   141,     0,     0,   142,   738,   143,
     144,   145,   146,   147,   148,   149,     0,   150,     0,     0,
       0,   151,     0,     0,     0,   152,     0,     0,   153,   154,
     155,     0,   156,     0,   157,   158,     0,     0,   159,     0,
       0,   160,   161,     0,   162,   163,     0,   164,     0,   165,
     166,   167,   168,   169,   170,     0,   171,   172,     0,   173,
     174,   175,   176,   177,   178,   179,   180,     0,   181,   182,
       0,   183,   184,   185,   186,   187,     0,   188,     0,     0,
     189,     0,     0,   190,     0,     0,     0,   191,     0,     0,
       0,   192,   193,   194,     0,     0,   195,     0,     0,     0,
       0,   196,   197,     0,     0,     0,     0,   198,     0,   199,
       0,     0,     0,   200,     0,   201,   202,   203,   204,     0,
       0,     0,   205,     0,     0,   206,   207,   208,     0,     0,
       0,   209,     0,   210,   211,     0,   212,   213,   214,     0,
       0,   215,   216,     0,   217,   218,   219,   220,   221,     0,
       0,   222,   223,   224,     0,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,     0,     0,     0,   231,     0,
     232,     0,   233,     0,   234,   235,   236,   237,   238,     0,
     239,     0,     0,     0,   240,   241,     0,   242,     0,     0,
     243,   244,     0,     0,     0,   245,   246,   247,   248,     0,
       0,   249,   250,   251,     0,     0,   252,     0,     0,     0,
       0,   253,   254,     0,     0,     0,   255,     0,   256,   257,
       0,   258,   259,     0,     0,     0,   260,     0,     0,   261,
     262,     0,     0,   263,     0,     0,   264,   265,     0,     0,
       0,     0,     0,   266,   267,     0,   268,     0,   269,     0,
     270,   271,     0,     0,     0,     0,     0,     0,     0,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,     0,   288,   289,   290,
     291,     0,   292,   293,     0,     0,     0,     0,   294,   295,
     296,   297,   298,   299,     0,     0,   300,   301,     0,   302,
       0,   303,     0,   304,   305,   306,   307,   308,   309,   310,
     311,   312,     0,     0,   313,   314,     0,     0,   315,   316,
     317,   318,     0,     0,     0,   319,   320,     0,     0,     0,
       0,   321,   322,   323,     0,   324,   325,   326,     0,   327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   328,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,   345,
       0,   346,     0,   347,   348,   349,   350,   351,     0,   352,
     353,   354,     0,     0,   355,     0,     0,     0,   356,   357,
     358,   359,   360,     0,     0,   361,   362,   363,   364,   365,
       0,   366,   367,     0,   368,   369,   370,     0,     0,   371,
       0,   372,     0,   373,   374,     0,   375,   376,     0,     0,
       0,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,     0,   387,   388,     0,     0,     0,   389,   390,   391,
     392,     0,     0,     0,   393,     0,     0,     0,   394,     0,
     395,   396,   397,   398,     0,   399,   400,   401,   402,   403,
       0,     0,     0,     0,     0,     0,   404,   405,     0,   406,
       0,     0,   407,     0,     0,   408,   409,   410,     0,     0,
     411,   412,     0,   413,   414,   415,   416,   417,   418,     0,
       0,   419,   420,   421,   422,     0,   423,   424,     0,     0,
     425,   426,   427,   428,     0,     0,   429,   430,     0,   431,
     432,   433,   434,     0,     0,     0,     0,     0,   435,   436,
       0,     0,     0,   437,   438,   439,   440,     0,   441,   442,
       0,   443,   444,     0,   445,   446,     0,     0,   447,     0,
       0,   448,     0,   449,     0,   450,   451,     0,     0,     0,
       0,     0,     0,   452,     0,     0,   453,     0,     0,     0,
     454,   455,   456,   457,     0,     0,     0,     0,     0,     0,
     458,   459,     0,   460,   461,   462,     0,     0,   463,     0,
       0,   135,     0,   136,   137,   138,   139,   140,     0,     0,
       0,     0,     0,   141,     0,     0,   142,  2409,   143,   144,
     145,   146,   147,   148,   149,     0,   150,     0,     0,     0,
     151,     0,     0,     0,   152,     0,     0,   153,   154,   155,
       0,   156,     0,   157,   158,     0,     0,   159,     0,     0,
     160,   161,     0,   162,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,     0,   173,   174,
     175,   176,   177,   178,   179,   180,     0,   181,   182,     0,
     183,   184,   185,   186,   187,     0,   188,     0,     0,   189,
       0,     0,   190,     0,     0,     0,   191,     0,     0,     0,
     192,   193,   194,     0,     0,   195,     0,     0,     0,     0,
     196,   197,     0,     0,     0,     0,   198,     0,   199,     0,
       0,     0,   200,     0,   201,   202,   203,   204,     0,     0,
       0,   205,     0,     0,   206,   207,   208,     0,     0,     0,
     209,     0,   210,   211,     0,   212,   213,   214,     0,     0,
     215,   216,     0,   217,   218,   219,   220,   221,     0,     0,
     222,   223,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,     0,     0,     0,   231,     0,   232,
       0,   233,     0,   234,   235,   236,   237,   238,     0,   239,
       0,     0,     0,   240,   241,     0,   242,     0,     0,   243,
     244,     0,     0,     0,   245,   246,   247,   248,     0,     0,
     249,   250,   251,     0,     0,   252,     0,     0,     0,     0,
     253,   254,     0,     0,     0,   255,     0,   256,   257,     0,
     258,   259,     0,     0,     0,   260,     0,     0,   261,   262,
       0,     0,   263,     0,     0,   264,   265,   589,     0,     0,
       0,     0,   266,   267,     0,   268,     0,   269,     0,   270,
     271,     0,     0,     0,     0,     0,     0,     0,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   287,     0,   288,   289,   290,   291,
       0,   292,   293,     0,     0,     0,     0,   294,   295,   296,
     297,   298,   299,     0,     0,   300,   301,     0,   302,     0,
     303,     0,   304,   305,   306,   307,   308,   309,   310,   311,
     312,     0,     0,   313,   314,     0,     0,   315,   316,   317,
     318,     0,     0,     0,   319,   320,     0,     0,     0,     0,
     321,   322,   323,     0,   324,   325,   326,     0,   327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,     0,   343,   344,   345,     0,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,     0,     0,   355,     0,     0,     0,   356,   357,   358,
     359,   360,     0,     0,   361,   362,   363,   364,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
     372,     0,   373,   374,     0,   375,   376,     0,     0,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,   388,     0,     0,     0,   389,   390,   391,   392,
       0,     0,     0,   393,     0,     0,     0,   394,     0,   395,
     396,   397,   398,     0,   399,   400,   401,   402,   403,     0,
       0,     0,     0,     0,     0,   404,   405,     0,   406,     0,
       0,   407,     0,     0,   408,   409,   410,     0,     0,   411,
     412,     0,   413,   414,   415,   416,   417,   418,     0,     0,
     419,   420,   421,   422,     0,   423,   424,     0,     0,   425,
     426,   427,   428,     0,   132,   429,   430,     0,   431,   432,
     433,   434,     0,     0,     0,     0,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,   441,   442,     0,
     443,   444,     0,   445,   446,     0,     0,   447,     0,     0,
     448,     0,   449,     0,   450,   451,     0,     0,     0,     0,
       0,     0,   452,     0,     0,   453,     0,     0,     0,   454,
     455,   456,   457,     0,     0,     0,     0,     0,     0,   458,
     459,     0,   460,   461,   462,     0,     0,   463,     0,   135,
       0,   136,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   142,  1606,   143,   144,   145,   146,
     147,   148,   149,     0,   150,     0,     0,     0,   151,     0,
       0,     0,   152,     0,     0,   153,   154,   155,     0,   156,
       0,   157,   158,     0,     0,   159,     0,     0,   160,   161,
       0,   162,   163,     0,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,     0,   173,   174,   175,   176,
     177,   178,   179,   180,     0,   181,   182,     0,   183,   184,
     185,   186,   187,     0,   188,     0,     0,   189,     0,     0,
     190,     0,     0,     0,   191,     0,     0,     0,   192,   193,
     194,     0,     0,   195,     0,     0,     0,     0,   196,   197,
       0,     0,     0,     0,   198,     0,   199,     0,     0,     0,
     200,     0,   201,   202,   203,   204,     0,     0,     0,   205,
       0,     0,   206,   207,   208,     0,     0,     0,   209,     0,
     210,   211,     0,   212,   213,   214,     0,     0,   215,   216,
       0,   217,   218,   219,   220,   221,     0,     0,   222,   223,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,     0,     0,     0,   231,     0,   232,     0,   233,
       0,   234,   235,   236,   237,   238,     0,   239,     0,     0,
       0,   240,   241,     0,   242,     0,     0,   243,   244,     0,
       0,     0,   245,   246,   247,   248,     0,     0,   249,   250,
     251,     0,     0,   252,     0,     0,     0,     0,   253,   254,
       0,     0,     0,   255,     0,   256,   257,     0,   258,   259,
       0,     0,     0,   260,     0,     0,   261,   262,     0,     0,
     263,     0,     0,   264,   265,   589,     0,     0,     0,     0,
     266,   267,     0,   268,     0,   269,     0,   270,   271,     0,
       0,     0,     0,     0,     0,     0,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     285,   286,   287,     0,   288,   289,   290,   291,     0,   292,
     293,     0,     0,     0,     0,   294,   295,   296,   297,   298,
     299,     0,     0,   300,   301,     0,   302,     0,   303,     0,
     304,   305,   306,   307,   308,   309,   310,   311,   312,     0,
       0,   313,   314,     0,     0,   315,   316,   317,   318,     0,
       0,     0,   319,   320,     0,     0,     0,     0,   321,   322,
     323,     0,   324,   325,   326,     0,   327,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,     0,     0,   343,   344,   345,     0,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,     0,
       0,   355,     0,     0,     0,   356,   357,   358,   359,   360,
       0,     0,   361,   362,   363,   364,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,   372,     0,
     373,   374,     0,   375,   376,     0,     0,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
     388,     0,     0,     0,   389,   390,   391,   392,     0,     0,
       0,   393,     0,     0,     0,   394,     0,   395,   396,   397,
     398,     0,   399,   400,   401,   402,   403,     0,     0,     0,
       0,     0,     0,   404,   405,     0,   406,     0,     0,   407,
       0,     0,   408,   409,   410,     0,     0,   411,   412,     0,
     413,   414,   415,   416,   417,   418,     0,     0,   419,   420,
     421,   422,     0,   423,   424,     0,     0,   425,   426,   427,
     428,     0,   132,   429,   430,     0,   431,   432,   433,   434,
       0,     0,     0,     0,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,   441,   442,     0,   443,   444,
       0,   445,   446,     0,     0,   447,     0,     0,   448,     0,
     449,     0,   450,   451,     0,     0,     0,     0,     0,     0,
     452,     0,     0,   453,     0,     0,     0,   454,   455,   456,
     457,     0,     0,     0,     0,     0,     0,   458,   459,     0,
     460,   461,   462,     0,     0,   463,     0,   135,     0,   136,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,   142,  2677,   143,   144,   145,   146,   147,   148,
     149,     0,   150,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,   153,   154,   155,     0,   156,     0,   157,
     158,     0,     0,   159,     0,     0,   160,   161,     0,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,     0,   173,   174,   175,   176,   177,   178,
     179,   180,     0,   181,   182,     0,   183,   184,   185,   186,
     187,     0,   188,     0,     0,   189,     0,     0,   190,     0,
       0,     0,   191,     0,     0,     0,   192,   193,   194,     0,
       0,   195,     0,     0,     0,     0,   196,   197,     0,     0,
       0,     0,   198,     0,   199,     0,     0,     0,   200,     0,
     201,   202,   203,   204,     0,     0,     0,   205,     0,     0,
     206,   207,   208,     0,     0,     0,   209,     0,   210,   211,
       0,   212,   213,   214,     0,     0,   215,   216,     0,   217,
     218,   219,   220,   221,     0,     0,   222,   223,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
       0,     0,     0,   231,     0,   232,     0,   233,     0,   234,
     235,   236,   237,   238,     0,   239,     0,     0,     0,   240,
     241,     0,   242,     0,     0,   243,   244,     0,     0,     0,
     245,   246,   247,   248,     0,     0,   249,   250,   251,     0,
       0,   252,     0,     0,     0,     0,   253,   254,     0,     0,
       0,   255,     0,   256,   257,     0,   258,   259,     0,     0,
       0,   260,     0,     0,   261,   262,     0,     0,   263,     0,
       0,   264,   265,   589,     0,     0,     0,     0,   266,   267,
       0,   268,     0,   269,     0,   270,   271,     0,     0,     0,
       0,     0,     0,     0,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,     0,   288,   289,   290,   291,     0,   292,   293,     0,
       0,     0,     0,   294,   295,   296,   297,   298,   299,     0,
       0,   300,   301,     0,   302,     0,   303,     0,   304,   305,
     306,   307,   308,   309,   310,   311,   312,     0,     0,   313,
     314,     0,     0,   315,   316,   317,   318,     0,     0,     0,
     319,   320,     0,     0,     0,     0,   321,   322,   323,     0,
     324,   325,   326,     0,   327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,   345,     0,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,     0,     0,   355,
       0,     0,     0,   356,   357,   358,   359,   360,     0,     0,
     361,   362,   363,   364,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,   372,     0,   373,   374,
       0,   375,   376,     0,     0,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,   388,     0,
       0,     0,   389,   390,   391,   392,     0,     0,     0,   393,
       0,     0,     0,   394,     0,   395,   396,   397,   398,     0,
     399,   400,   401,   402,   403,     0,     0,     0,     0,     0,
       0,   404,   405,     0,   406,     0,     0,   407,     0,     0,
     408,   409,   410,     0,     0,   411,   412,     0,   413,   414,
     415,   416,   417,   418,     0,     0,   419,   420,   421,   422,
       0,   423,   424,     0,     0,   425,   426,   427,   428,     0,
     132,   429,   430,     0,   431,   432,   433,   434,     0,     0,
       0,     0,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,   441,   442,     0,   443,   444,     0,   445,
     446,     0,     0,   447,     0,     0,   448,     0,   449,     0,
     450,   451,     0,     0,     0,     0,     0,     0,   452,     0,
       0,   453,     0,     0,     0,   454,   455,   456,   457,     0,
       0,     0,     0,     0,     0,   458,   459,     0,   460,   461,
     462,     0,     0,   463,     0,   135,     0,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
       0,  3283,   143,   144,   145,   146,   147,   148,     0,     0,
    -327,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,     0,     0,     0,
       0,   159,  3696,     0,   160,   161,     0,   162,     0,     0,
       0,     0,   165,   166,   167,  3697,   169,   170,     0,   171,
     172,     0,   173,     0,   175,     0,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,     0,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,     0,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,     0,     0,     0,   222,   223,   224,     0,     0,   225,
     226,  3698,   227,   228,   229,     0,     0,     0,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,     0,   241,     0,
       0,     0,     0,     0,   244,     0,     0,     0,   245,   246,
     247,   248,  3699,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,  3700,     0,     0,   260,
       0,     0,     0,   262,     0,     0,   263,  3701,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,  -282,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
    3702,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   329,   330,     0,     0,   332,   333,   334,
       0,   336,   337,   338,   339,   340,   341,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,     0,     0,   368,     0,   370,
    -282,     0,   371,     0,     0,     0,   373,     0,     0,   375,
     376,  3703,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,   385,   386,     0,   387,     0,     0,     0,     0,
     389,   390,   391,     0,     0,     0,     0,   393,     0,     0,
       0,   394,     0,     0,   396,     0,   398,     0,   399,     0,
       0,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,     0,
     410,     0,     0,     0,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,     0,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,     0,     0,     0,
       0,   447,     0,     0,   448,     0,     0,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,  -282,
       0,     0,     0,   458,     0,     0,   460,     0,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,  4214,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,  2003,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,  2665,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,  2967,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,  3288,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,  2323,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
    2324,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,  2325,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,  2326,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
     981,   982,     0,   319,   320,     0,     0,  2327,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
    4194,   536,  4195,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,  2328,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,  2517,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,  2671,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,  2146,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,   589,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,  2147,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,   132,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,  1764,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,  1765,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
     695,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,  1766,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,  2679,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,  2680,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,   589,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,   132,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,  2517,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,  2671,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,   589,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,   132,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,   940,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,   589,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,   132,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,  1310,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,   589,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,   132,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,   918,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,   919,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,   920,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,  2517,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,   589,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,   132,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,  2719,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,   589,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,   132,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,   589,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,   132,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,  2661,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,   132,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,  4112,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,  4113,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   536,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,  1017,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,  1926,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,  2256,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,  2257,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,  2757,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,  2835,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,   132,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,  2256,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,   144,   145,   146,   147,   148,   149,     0,
     150,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,     0,   160,   161,     0,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,   186,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,   197,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,   205,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,   210,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,   221,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,   254,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,   261,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,   319,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
     326,     0,   327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,   372,     0,   373,   374,     0,   375,
     376,     0,     0,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,   388,     0,     0,     0,
     389,   390,   391,   392,     0,     0,     0,   393,     0,     0,
       0,   394,     0,   395,   396,   397,   398,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,   409,
     410,     0,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,   445,   446,     0,
       0,   447,     0,     0,   448,     0,   449,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,   459,     0,   460,   461,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,   144,   145,
     146,   147,   148,   149,     0,   150,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,     0,   160,
     161,     0,   162,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,   186,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
     197,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
     205,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,   210,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,   221,     0,     0,   222,
     223,   224,     0,     0,   225,   226,     0,   227,  1687,   229,
       0,     0,   230,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
       0,     0,     0,   245,   246,   247,   248,     0,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
     254,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,     0,     0,     0,   260,     0,     0,   261,   262,     0,
       0,   263,     0,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,     0,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,  1688,   317,   318,
       0,     0,     0,   319,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,   326,     0,   327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,   372,
       0,   373,   374,     0,   375,   376,     0,     0,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,     0,   389,   390,   391,   392,     0,
       0,     0,   393,     0,     0,     0,   394,     0,   395,   396,
     397,   398,     0,   399,   400,   401,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,   409,   410,     0,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,   445,   446,     0,     0,   447,     0,     0,   448,
       0,   449,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,     0,     0,     0,     0,   458,   459,
       0,   460,   461,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
       0,     0,   143,   144,   145,   146,   147,   148,     0,     0,
    -327,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,     0,     0,     0,
       0,   159,  3696,     0,   160,   161,     0,   162,     0,     0,
       0,     0,   165,   166,   167,  3697,   169,   170,     0,   171,
     172,     0,   173,     0,   175,     0,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,     0,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,     0,     0,     0,   206,   207,
     208,     0,  -297,  -297,   209,     0,  -297,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,     0,     0,     0,   222,   223,   224,     0,     0,   225,
     226,  3698,   227,   228,   229,     0,     0,     0,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,     0,   241,     0,
       0,     0,     0,     0,   244,     0,     0,     0,   245,   246,
     247,   248,  3699,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,  3700,     0,     0,   260,
       0,     0,     0,   262,     0,     0,   263,  3701,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,  -282,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
    3702,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   329,   330,     0,     0,   332,   333,   334,
       0,   336,   337,   338,   339,   340,   341,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,     0,     0,   368,     0,   370,
    -282,     0,   371,     0,     0,     0,   373,     0,     0,   375,
     376,  3703,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,   385,   386,     0,   387,     0,     0,     0,     0,
     389,   390,   391,     0,     0,     0,     0,   393,     0,     0,
       0,   394,     0,     0,   396,     0,   398,     0,   399,     0,
       0,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,     0,
     410,     0,     0,     0,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,     0,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,     0,     0,     0,
       0,   447,     0,     0,   448,     0,     0,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,  -282,
       0,     0,     0,   458,     0,     0,   460,     0,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,     0,     0,   143,   144,   145,
     146,   147,   148,     0,     0,  -327,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,     0,     0,     0,     0,   159,  3696,     0,   160,
     161,     0,   162,     0,     0,     0,     0,   165,   166,   167,
    3697,   169,   170,     0,   171,   172,     0,   173,     0,   175,
       0,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
       0,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
       0,     0,     0,   206,   207,   208,     0,  -318,     0,   209,
       0,  -318,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,     0,     0,     0,   222,
     223,   224,     0,     0,   225,   226,  3698,   227,   228,   229,
       0,     0,     0,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,     0,   241,     0,     0,     0,     0,     0,   244,
       0,     0,     0,   245,   246,   247,   248,  3699,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,  3700,     0,     0,   260,     0,     0,     0,   262,     0,
       0,   263,  3701,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,  -282,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,     0,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,  3702,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   329,   330,
       0,     0,   332,   333,   334,     0,   336,   337,   338,   339,
     340,   341,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
       0,     0,   368,     0,   370,  -282,     0,   371,     0,     0,
       0,   373,     0,     0,   375,   376,  3703,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,   385,   386,     0,
     387,     0,     0,     0,     0,   389,   390,   391,     0,     0,
       0,     0,   393,     0,     0,     0,   394,     0,     0,   396,
       0,   398,     0,   399,     0,     0,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,     0,   410,     0,     0,     0,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,     0,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,     0,     0,     0,     0,   447,     0,     0,   448,
       0,     0,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,  -318,     0,  -282,     0,     0,     0,   458,     0,
       0,   460,     0,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
       0,     0,   143,   144,   145,   146,   147,   148,     0,     0,
    -327,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,     0,     0,     0,
       0,   159,  3696,     0,   160,   161,     0,   162,     0,     0,
       0,     0,   165,   166,   167,  3697,   169,   170,     0,   171,
     172,     0,   173,     0,   175,     0,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,     0,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,     0,     0,     0,   206,   207,
     208,     0,  -315,     0,   209,     0,  -315,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,     0,     0,     0,   222,   223,   224,     0,     0,   225,
     226,  3698,   227,   228,   229,     0,     0,     0,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,     0,   241,     0,
       0,     0,     0,     0,   244,     0,     0,     0,   245,   246,
     247,   248,  3699,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,  3700,     0,     0,   260,
       0,     0,     0,   262,     0,     0,   263,  3701,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,  -282,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
    3702,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   329,   330,     0,     0,   332,   333,   334,
       0,   336,   337,   338,   339,   340,   341,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,     0,     0,   368,     0,   370,
    -282,     0,   371,     0,     0,     0,   373,     0,     0,   375,
     376,  3703,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,   385,   386,     0,   387,     0,     0,     0,     0,
     389,   390,   391,     0,     0,     0,     0,   393,     0,     0,
       0,   394,     0,     0,   396,     0,   398,     0,   399,     0,
       0,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,     0,
     410,     0,     0,     0,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,     0,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,     0,     0,     0,
       0,   447,     0,     0,   448,     0,     0,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,  -315,     0,  -282,
       0,     0,     0,   458,     0,     0,   460,     0,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,     0,     0,   143,   144,   145,
     146,   147,   148,     0,     0,  -327,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,     0,     0,     0,     0,   159,  3696,     0,   160,
     161,     0,   162,     0,     0,     0,     0,   165,   166,   167,
    3697,   169,   170,     0,   171,   172,     0,   173,     0,   175,
       0,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
       0,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
       0,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,  4011,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,     0,     0,     0,   222,
     223,   224,     0,     0,   225,   226,  3698,   227,   228,   229,
       0,     0,     0,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,     0,   241,     0,     0,     0,     0,     0,   244,
       0,     0,     0,   245,   246,   247,   248,  3699,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,  3700,     0,     0,   260,     0,     0,     0,   262,     0,
       0,   263,  3701,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,  -282,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,     0,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,  3702,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   329,   330,
       0,     0,   332,   333,   334,     0,   336,   337,   338,   339,
     340,   341,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
       0,     0,   368,     0,   370,  -282,     0,   371,     0,     0,
       0,   373,     0,     0,   375,   376,  3703,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,   385,   386,     0,
     387,     0,     0,     0,     0,   389,   390,   391,     0,     0,
       0,     0,   393,     0,     0,     0,   394,     0,     0,   396,
       0,   398,     0,   399,     0,     0,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,     0,   410,     0,     0,     0,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,     0,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,     0,     0,     0,     0,   447,     0,     0,   448,
       0,     0,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,  -282,     0,     0,     0,   458,     0,
       0,   460,     0,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
       0,     0,   143,   144,   145,   146,   147,   148,     0,     0,
    -327,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,     0,     0,     0,
       0,   159,  3696,     0,   160,   161,     0,   162,     0,     0,
       0,     0,   165,   166,   167,  3697,   169,   170,     0,   171,
     172,     0,   173,     0,   175,     0,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,     0,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,     0,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,  -320,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,     0,     0,     0,   222,   223,   224,     0,     0,   225,
     226,  3698,   227,   228,   229,     0,     0,     0,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,     0,   241,     0,
       0,     0,     0,     0,   244,     0,     0,     0,   245,   246,
     247,   248,  3699,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,  3700,     0,     0,   260,
       0,     0,     0,   262,     0,     0,   263,  3701,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,  -282,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
    3702,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   329,   330,     0,     0,   332,   333,   334,
       0,   336,   337,   338,   339,   340,   341,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,     0,     0,   368,     0,   370,
    -282,     0,   371,     0,     0,     0,   373,     0,     0,   375,
     376,  3703,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,   385,   386,     0,   387,     0,     0,     0,     0,
     389,   390,   391,     0,     0,     0,     0,   393,     0,     0,
       0,   394,     0,     0,   396,     0,   398,     0,   399,     0,
       0,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,     0,
     410,     0,     0,     0,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,     0,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,     0,     0,     0,
       0,   447,     0,     0,   448,     0,     0,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,  -282,
       0,     0,     0,   458,     0,     0,   460,     0,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,     0,     0,   143,   144,   145,
     146,   147,   148,     0,     0,  -327,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,     0,     0,     0,     0,   159,  3696,     0,   160,
     161,     0,   162,     0,     0,     0,     0,   165,   166,   167,
    3697,   169,   170,     0,   171,   172,     0,   173,     0,   175,
       0,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
       0,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
       0,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,  4117,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,     0,     0,     0,   222,
     223,   224,     0,     0,   225,   226,  3698,   227,   228,   229,
       0,     0,     0,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,     0,   241,     0,     0,     0,     0,     0,   244,
       0,     0,     0,   245,   246,   247,   248,  3699,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,  3700,     0,     0,   260,     0,     0,     0,   262,     0,
       0,   263,  3701,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,  -282,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,     0,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,  3702,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   329,   330,
       0,     0,   332,   333,   334,     0,   336,   337,   338,   339,
     340,   341,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
       0,     0,   368,     0,   370,  -282,     0,   371,     0,     0,
       0,   373,     0,     0,   375,   376,  3703,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,   385,   386,     0,
     387,     0,     0,     0,     0,   389,   390,   391,     0,     0,
       0,     0,   393,     0,     0,     0,   394,     0,     0,   396,
       0,   398,     0,   399,     0,     0,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,     0,   410,     0,     0,     0,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,     0,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,     0,     0,     0,     0,   447,     0,     0,   448,
       0,     0,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,  -282,     0,     0,     0,   458,     0,
       0,   460,     0,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
       0,     0,   143,   144,   145,   146,   147,   148,     0,     0,
    -327,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,     0,     0,     0,
       0,   159,  3696,     0,   160,   161,     0,   162,     0,     0,
       0,     0,   165,   166,   167,  3697,   169,   170,     0,   171,
     172,     0,   173,     0,   175,     0,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,     0,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,     0,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,  4163,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,     0,     0,     0,   222,   223,   224,     0,     0,   225,
     226,  3698,   227,   228,   229,     0,     0,     0,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,     0,   241,     0,
       0,     0,     0,     0,   244,     0,     0,     0,   245,   246,
     247,   248,  3699,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,  3700,     0,     0,   260,
       0,     0,     0,   262,     0,     0,   263,  3701,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,  -282,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
    3702,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   329,   330,     0,     0,   332,   333,   334,
       0,   336,   337,   338,   339,   340,   341,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,     0,     0,   368,     0,   370,
    -282,     0,   371,     0,     0,     0,   373,     0,     0,   375,
     376,  3703,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,   385,   386,     0,   387,     0,     0,     0,     0,
     389,   390,   391,     0,     0,     0,     0,   393,     0,     0,
       0,   394,     0,     0,   396,     0,   398,     0,   399,     0,
       0,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,     0,
     410,     0,     0,     0,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,     0,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,     0,     0,     0,
       0,   447,     0,     0,   448,     0,     0,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,  -282,
       0,     0,     0,   458,     0,     0,   460,     0,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,     0,     0,   143,   144,   145,
     146,   147,   148,     0,     0,  -327,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,     0,     0,     0,     0,   159,  3696,     0,   160,
     161,     0,   162,     0,     0,     0,     0,   165,   166,   167,
    3697,   169,   170,     0,   171,   172,     0,   173,     0,   175,
       0,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
       0,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
       0,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,  -301,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,     0,     0,     0,   222,
     223,   224,     0,     0,   225,   226,  3698,   227,   228,   229,
       0,     0,     0,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,     0,   241,     0,     0,     0,     0,     0,   244,
       0,     0,     0,   245,   246,   247,   248,  3699,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,  3700,     0,     0,   260,     0,     0,     0,   262,     0,
       0,   263,  3701,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,  -282,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,     0,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,  3702,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   329,   330,
       0,     0,   332,   333,   334,     0,   336,   337,   338,   339,
     340,   341,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
       0,     0,   368,     0,   370,  -282,     0,   371,     0,     0,
       0,   373,     0,     0,   375,   376,  3703,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,   385,   386,     0,
     387,     0,     0,     0,     0,   389,   390,   391,     0,     0,
       0,     0,   393,     0,     0,     0,   394,     0,     0,   396,
       0,   398,     0,   399,     0,     0,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,     0,   410,     0,     0,     0,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,     0,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,     0,     0,     0,     0,   447,     0,     0,   448,
       0,     0,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,  -282,     0,     0,     0,   458,     0,
       0,   460,     0,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
       0,     0,   143,   144,   145,   146,   147,   148,     0,     0,
    -327,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,     0,     0,     0,
       0,   159,  3696,     0,   160,   161,     0,   162,     0,     0,
       0,     0,   165,   166,   167,  3697,   169,   170,     0,   171,
     172,     0,   173,     0,   175,     0,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,     0,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,     0,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,     0,     0,     0,   222,   223,   224,     0,     0,   225,
     226,  3698,   227,   228,   229,     0,     0,     0,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,     0,   241,     0,
       0,     0,     0,     0,   244,     0,     0,     0,   245,   246,
     247,   248,  3699,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,  3700,     0,     0,   260,
       0,     0,     0,   262,     0,     0,   263,  3701,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,  -282,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
    3702,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   329,   330,     0,     0,   332,   333,   334,
       0,   336,   337,   338,   339,   340,   341,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,     0,     0,   368,     0,   370,
    -282,     0,   371,     0,     0,     0,   373,     0,     0,   375,
     376,  3703,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,   385,   386,     0,   387,     0,     0,     0,     0,
     389,   390,   391,     0,     0,     0,     0,   393,     0,     0,
       0,   394,     0,     0,   396,     0,   398,     0,   399,     0,
       0,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,     0,
     410,     0,     0,     0,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,     0,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,     0,     0,     0,
       0,   447,     0,     0,   448,     0,     0,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,  -282,
       0,     0,     0,   458,     0,     0,   460,     0,   462,     0,
     135,   463,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,     0,     0,   143,   144,   145,
     146,   147,   148,     0,     0,  -327,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,   153,   154,   155,     0,
     156,     0,     0,     0,     0,     0,   159,  3696,     0,   160,
     161,     0,   162,     0,     0,     0,     0,   165,   166,   167,
    3697,   169,   170,     0,   171,   172,     0,   173,     0,   175,
       0,   177,   178,   179,   180,     0,   181,   182,     0,   183,
     184,   185,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,     0,     0,     0,   191,     0,     0,     0,   192,
     193,   194,     0,     0,   195,     0,     0,     0,     0,   196,
       0,     0,     0,     0,     0,   198,     0,   199,     0,     0,
       0,   200,     0,   201,   202,   203,   204,     0,     0,     0,
       0,     0,     0,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   211,     0,   212,   213,   214,     0,     0,   215,
     216,     0,   217,   218,   219,   220,     0,     0,     0,   222,
     223,   224,     0,     0,   225,   226,  3698,   227,   228,   229,
       0,     0,     0,     0,     0,     0,   231,     0,   232,     0,
     233,     0,   234,   235,   236,   237,   238,     0,   239,     0,
       0,     0,     0,   241,     0,     0,     0,     0,     0,   244,
       0,     0,     0,   245,   246,   247,   248,  3699,     0,   249,
     250,   251,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,     0,     0,   255,     0,   256,   257,     0,   258,
     259,  3700,     0,     0,   260,     0,     0,     0,   262,     0,
       0,   263,  3701,     0,   264,   265,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,   269,     0,   270,   271,
       0,     0,     0,     0,  -282,     0,     0,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,     0,   288,   289,   290,   291,     0,
     292,   293,     0,     0,     0,     0,   294,   295,   296,   297,
     298,   299,     0,     0,   300,   301,     0,   302,     0,   303,
       0,   304,   305,   306,   307,   308,   309,   310,   311,   312,
       0,     0,   313,   314,     0,     0,   315,   316,   317,   318,
       0,     0,     0,     0,   320,     0,     0,     0,     0,   321,
     322,   323,     0,   324,   325,  3702,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   329,   330,
       0,     0,   332,   333,   334,     0,   336,   337,   338,   339,
     340,   341,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
       0,     0,   355,     0,     0,     0,   356,   357,   358,   359,
     360,     0,     0,   361,   362,   363,   364,   365,     0,   366,
       0,     0,   368,     0,   370,  -282,     0,   371,     0,     0,
       0,   373,     0,     0,   375,   376,  3703,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,   385,   386,     0,
     387,     0,     0,     0,     0,   389,   390,   391,     0,     0,
       0,     0,   393,     0,     0,     0,   394,     0,     0,   396,
       0,   398,     0,   399,     0,     0,   402,   403,     0,     0,
       0,     0,     0,     0,   404,   405,     0,   406,     0,     0,
     407,     0,     0,   408,     0,   410,     0,     0,     0,   412,
       0,   413,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,     0,   423,   424,     0,     0,   425,   426,
     427,   428,     0,     0,   429,   430,     0,   431,   432,   433,
     434,     0,     0,     0,     0,     0,   435,   436,     0,     0,
       0,     0,   438,   439,   440,     0,   441,   442,     0,   443,
     444,     0,     0,     0,     0,     0,   447,     0,     0,  4014,
       0,     0,     0,   450,   451,     0,     0,     0,     0,     0,
       0,   452,     0,     0,   453,     0,     0,     0,   454,   455,
     456,   457,     0,     0,  -282,     0,     0,     0,   458,     0,
       0,   460,     0,   462,     0,   135,   463,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
       0,     0,   143,   144,   145,   146,   147,   148,     0,     0,
       0,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,   153,   154,   155,     0,   156,     0,     0,     0,     0,
       0,   159,     0,     0,   160,   161,     0,   162,     0,     0,
       0,     0,   165,   166,   167,     0,   169,   170,     0,   171,
     172,     0,   173,     0,   175,     0,   177,   178,   179,   180,
       0,   181,   182,     0,   183,   184,   185,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,     0,     0,     0,
     191,     0,     0,     0,   192,   193,   194,     0,     0,   195,
       0,     0,     0,     0,   196,     0,     0,     0,     0,     0,
     198,     0,   199,     0,     0,     0,   200,     0,   201,   202,
     203,   204,     0,     0,     0,     0,     0,     0,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   211,     0,   212,
     213,   214,     0,     0,   215,   216,     0,   217,   218,   219,
     220,     0,     0,     0,   222,   223,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,     0,     0,     0,     0,
       0,   231,     0,   232,     0,   233,     0,   234,   235,   236,
     237,   238,     0,   239,     0,     0,     0,     0,   241,     0,
       0,     0,     0,     0,   244,     0,     0,     0,   245,   246,
     247,   248,     0,     0,   249,   250,   251,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,     0,     0,   255,
       0,   256,   257,     0,   258,   259,     0,     0,     0,   260,
       0,     0,     0,   262,     0,     0,   263,     0,     0,   264,
     265,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,   269,     0,   270,   271,     0,     0,     0,     0,     0,
       0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,     0,
     288,   289,   290,   291,     0,   292,   293,     0,     0,     0,
       0,   294,   295,   296,   297,   298,   299,     0,     0,   300,
     301,     0,   302,     0,   303,     0,   304,   305,   306,   307,
     308,   309,   310,   311,   312,     0,     0,   313,   314,     0,
       0,   315,   316,   317,   318,     0,     0,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,   324,   325,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   329,   330,     0,     0,   332,   333,   334,
       0,   336,   337,   338,   339,   340,   341,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,     0,     0,   355,     0,     0,
       0,   356,   357,   358,   359,   360,     0,     0,   361,   362,
     363,   364,   365,     0,   366,     0,     0,   368,     0,   370,
       0,     0,   371,     0,     0,     0,   373,     0,     0,   375,
     376,     0,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,   385,   386,     0,   387,     0,     0,     0,     0,
     389,   390,   391,     0,     0,     0,     0,   393,     0,     0,
       0,   394,     0,     0,   396,     0,   398,     0,   399,     0,
       0,   402,   403,     0,     0,     0,     0,     0,     0,   404,
     405,     0,   406,     0,     0,   407,     0,     0,   408,     0,
     410,     0,     0,     0,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,     0,   423,
     424,     0,     0,   425,   426,   427,   428,     0,     0,   429,
     430,     0,   431,   432,   433,   434,     0,     0,     0,     0,
       0,   435,   436,     0,     0,     0,     0,   438,   439,   440,
       0,   441,   442,     0,   443,   444,     0,     0,     0,     0,
       0,   447,     0,     0,   448,     0,     0,     0,   450,   451,
       0,     0,     0,     0,     0,     0,   452,     0,     0,   453,
       0,     0,     0,   454,   455,   456,   457,     0,     0,     0,
       0,     0,     0,   458,     0,     0,   460,     0,   462,     0,
       0,   463
};

static const yytype_int16 yycheck[] =
{
       6,   621,   622,   549,   549,   612,   933,   571,   934,    20,
    1115,   850,   121,    19,   654,   655,    22,  1062,    29,  1603,
     659,  1736,  1021,  1412,    35,    31,     6,   639,   678,  1706,
    1086,  1239,    38,  1015,  1016,    41,   585,  1115,   769,    45,
    1313,   876,   874,   494,   898,  1723,  1954,    53,  1410,  2375,
    2182,   691,  2259,  2260,  2261,  1137,  1178,  2305,  2226,  2019,
    1375,  3058,  1144,   898,  2024,  1393,  1053,   899,  1401,  2696,
    2644,   711,   608,   609,   713,  2494,  1245,   716,  2480,  1864,
    2293,    22,  1917,   723,   724,   725,  1862,    93,  2827,  1145,
    1146,  1723,     4,  1149,  1150,  1151,  1152,  1998,  1154,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1862,  1817,  1818,   115,
    2111,   117,  2370,  1793,   120,   121,   122,  2249,  1845,   731,
     732,   733,   938,  3064,  1834,  2349,  1454,  1324,  1979,   938,
     626,   743,  2270,  2271,  1979,   742,  2286,   117,  1383,  3273,
     120,  1851,  1852,  2508,  2294,  1342,    18,  2512,  3082,    16,
    2949,  2154,    93,  1350,  1351,    33,    70,  1867,  1868,    20,
    1870,    50,    59,  1873,  1874,  1865,   833,  1877,     9,  1869,
      24,    46,  1882,    15,    16,  2511,  1886,  1887,  1888,  1889,
    1880,    15,    16,  1893,    16,  1895,  1734,    28,  3121,  3122,
    1890,  1901,  3125,    34,  1904,    24,  1906,    58,    59,  1854,
    1808,  2105,    29,  1979,   103,    18,    15,    16,  1836,    62,
      61,  3144,  2338,  1940,    15,    16,   127,  3150,  1945,   142,
      64,    20,   771,  1979,  1951,  1952,    73,  2747,   152,  1956,
    3330,    81,  3320,   178,    33,  2482,   155,    15,    16,  2352,
      18,   204,  2163,    58,    59,    15,    16,   914,    47,  3732,
     136,    77,   253,  1963,  1964,  1965,  1966,  3848,  2002,    58,
      59,    65,    55,    50,   356,   339,    15,    16,   213,   370,
     119,  1393,  3269,   252,   119,   138,   148,   148,   326,   828,
     152,   148,   119,  2334,  2335,   142,    74,   221,   264,   130,
     237,   346,   297,    15,    16,   255,   230,  2821,   191,   148,
     940,   430,    20,   148,   286,    15,    16,  2563,   105,   369,
    1968,   148,   423,   614,   415,    33,   371,   463,  2239,    18,
    3962,   213,   371,  3965,   120,   447,   182,   253,    68,    47,
     813,    67,  1454,     8,    12,    15,    16,   518,    40,   152,
      58,    59,   213,   120,   320,   490,   253,    15,    16,    35,
      10,    15,    16,    15,    16,   356,  3317,   121,    15,    16,
     338,   142,   549,   180,    35,   219,   259,   398,   159,  3852,
     479,   487,  3491,   993,   994,   995,   518,  2278,   270,    15,
      16,   182,   235,   900,     8,   602,   159,   209,   419,   211,
     219,   538,   239,   610,   185,    15,    16,  2448,  2449,    15,
      16,   517,  1052,    15,    16,    29,   515,   553,  3527,   123,
     213,   393,   185,   165,   561,  1065,   603,   157,   123,   450,
     217,   129,    67,  3356,   569,    39,   962,   361,   609,   131,
     356,   178,  3365,   229,   917,   413,   144,  1363,   202,   293,
    4082,    15,    16,  2456,  1175,   262,   592,   106,    45,   356,
     109,  3384,   229,   152,   132,   348,  3389,    15,    16,   148,
     148,    15,    16,   518,   293,   766,   213,    15,    16,   518,
     518,  2678,  3606,   479,  2637,   481,   332,   437,    15,    16,
     602,   610,   429,   465,    73,  3482,  1318,  4078,  3429,  1321,
    2703,  1880,   498,   604,  1326,   543,   502,   360,   173,  2292,
     574,  2245,   394,   604,  2711,   511,   270,   322,  1836,   515,
     339,   517,   604,   355,   490,   201,   358,  2765,   223,  2354,
    1352,  1353,  2746,  2358,   530,  2749,  2750,   490,    15,    16,
     201,  1653,   456,  1140,  1862,  3496,  1148,  2372,  2373,   428,
    1375,    57,   602,   393,  2768,   338,   355,  2382,   549,   358,
     421,  3071,   558,  1165,   355,   406,   371,   358,    61,   452,
      15,    16,  2338,  3087,   253,   253,  1233,  1383,   180,   455,
     576,   270,  2299,  2408,  1383,  1631,  1909,   355,  3678,   585,
     358,   587,  2338,  1034,  1035,   355,  1642,  3528,   358,  1645,
    1787,  1258,   598,   599,   398,  2496,   137,   602,   604,   578,
     606,   198,   608,   609,  1055,  2456,   355,   613,   614,   358,
    2736,  2456,   618,  1064,  3241,   560,   442,   357,   421,   599,
      62,   465,   628,   629,   630,  1076,  1077,  1078,   634,  2876,
    2357,  2744,  2359,   355,  1085,    70,   358,  1453,  1625,  2366,
    1968,   428,   394,  2478,  1453,   355,   499,  1183,   358,   165,
     239,  1979,  2379,   169,   577,  2365,   575,   598,  2385,   768,
    2564,  4144,  1393,   604,   180,   494,   507,  2377,  1217,   603,
    3604,   568,   678,  2400,   573,   355,   179,  2285,   358,   521,
    2456,  2336,  2603,  2604,  2605,   526,   547,   355,   602,  2317,
     358,   355,   533,   355,   358,  2422,   358,   529,   355,   398,
    2456,   358,   529,  2251,  2872,   580,  1242,  3648,    15,    16,
    3844,  3510,   623,   580,  1836,   604,   529,  1962,   559,   355,
     577,  1257,   358,  1454,   602,   385,  3814,  2648,  2649,  2650,
     736,  1280,   738,   580,  2990,   355,   608,   608,   358,   355,
    3105,   608,   358,   355,  2454,   574,   358,   589,   547,  2493,
     604,  2652,  2653,   541,   490,   589,   762,   763,   764,   608,
     766,   767,   768,   608,   770,   771,   875,  3103,  3104,  2772,
    2447,   608,  1439,  1322,  3139,  3111,    15,    16,  3114,  3115,
     589,   355,  3147,   763,   358,   301,  2993,   767,   589,  3154,
     770,   588,  2450,   235,   609,  3131,   577,   355,   607,  2850,
     358,   355,   808,   604,   358,  3061,  1302,   355,  3749,  3145,
     358,   589,   818,   560,  3150,  3151,  3152,  3153,   355,   589,
    3954,   358,   828,   829,   484,  3032,  2188,   833,  2996,   547,
    3791,  1348,   518,   603,   604,  3048,  2999,  3095,  2851,  3052,
     589,   555,  1387,   440,  3068,   490,  1968,   518,    15,    16,
     555,   561,   604,   571,   603,   604,    68,  1979,    15,    16,
      15,    16,  3601,   522,    15,    16,   525,   589,   355,   875,
     484,   358,  2587,   533,   270,   182,  3008,   818,   394,   589,
     383,   603,   604,    73,   602,  3818,   585,  3820,   829,   578,
     578,   505,   334,  3312,   604,    15,    16,   403,  3048,  1549,
     355,   165,  3052,   358,    15,    16,   447,  2622,   914,   589,
     822,  2704,  2705,   573,    15,    16,    11,   531,   350,   608,
     608,   589,   345,   603,   604,   589,    42,   589,   934,  1783,
      15,    16,   589,   185,   775,   603,   604,   119,    30,   603,
     604,   603,   604,  3884,  1776,   183,   603,   604,  1783,   538,
      15,    16,   387,   589,  1786,    33,   962,  1789,  1790,  1813,
    2736,  3958,  2351,  2352,    12,   168,  1462,  2645,   604,   589,
     217,   303,   561,   589,  3817,    15,    16,   589,  1813,  3673,
    2736,  2882,   286,    75,   604,   185,    15,    16,   604,  2317,
     583,   603,  2048,    15,    16,    15,    16,  2270,  2271,    95,
    2851,   237,   398,    15,    16,  2004,  2851,  1013,   131,   447,
    2338,  1017,   248,  2645,  2694,   589,   374,   259,  1127,   116,
    2805,  3590,   119,  3425,    51,   120,    15,    16,   441,  1649,
     604,   589,  1644,   191,    61,   589,    15,    16,   544,  2208,
     325,   589,  3043,  2125,   486,   603,  1052,   550,   355,   239,
     604,   358,   589,   121,   146,  1164,   604,   499,    79,  1065,
     194,   602,   347,  3201,   182,   606,   152,   604,    31,   145,
     385,  2404,  1013,  1723,   509,  2851,  1017,   269,   175,  3498,
     156,  1701,  2279,  3004,   132,  2762,  2131,  2132,   604,  2297,
    3297,  3304,  3305,   254,   180,  2851,   257,   532,   340,    15,
      16,   259,   589,   237,   201,  1836,  2806,   447,    50,  1115,
    1659,   596,  2696,   603,   604,  3809,   355,   604,   603,   358,
     102,  1127,  2450,    20,   220,  1661,    12,   165,  2456,   367,
     394,  3700,  3701,   385,   589,   253,    33,  2124,   341,  1248,
    2196,   237,  3700,  3701,   586,   357,  1962,  2134,  2226,   604,
      47,   353,   248,  1962,    15,    16,  3057,   116,  1164,   341,
     219,    58,    59,  1169,   602,  1714,  1715,  3741,  1174,   484,
     267,  3798,   133,   465,    15,    16,    24,  1183,   610,   302,
     116,   604,    15,    16,   516,   385,    15,    16,   355,   585,
    2295,   358,    15,    16,   447,  2317,   447,   433,   355,  1744,
     355,   358,   270,   358,   355,    15,    16,   358,   286,   325,
     542,  1217,  4055,  4056,  2529,    15,    16,  2295,   533,   621,
     622,   203,   356,  1229,   116,  1231,   464,  1233,   420,   325,
     447,  4228,   259,  1174,   395,   355,  1242,  1968,   358,   175,
      15,    16,  1248,  3078,   355,   342,   132,   358,  1979,   270,
    2612,  1257,  1258,  3213,   355,    15,    16,   358,   573,  3427,
     512,   447,   602,   358,  3099,    15,    16,   230,  3837,  3838,
     355,   512,   116,   358,  1280,   221,   561,  1283,   354,  2384,
     339,  1390,   589,   175,   230,  1291,    15,    16,   380,   252,
     355,    15,    16,   358,   452,   559,   603,  1303,  1304,  1305,
    1306,  1307,  1308,    15,    16,   412,  2384,  1313,   267,   201,
     402,   447,   512,  1319,  1320,   355,  1322,   209,   358,  1325,
      15,    16,  1234,  1303,  1304,  1305,   355,  1307,  2450,   358,
     173,   267,   535,   355,  2456,   355,   358,   433,   358,  1345,
    1320,    22,   434,   355,   447,  1325,   358,  2631,   551,   602,
     589,   602,     0,  3922,   315,  2744,   394,   150,   580,    15,
      16,   485,   335,   336,   603,  1306,   355,  1308,  3937,   358,
     456,   219,    15,    16,   509,   267,   355,   512,   485,   358,
     362,  3950,   604,   342,  1390,   602,  1298,   579,  3800,   371,
    3802,    15,    16,    15,    16,   377,   338,   489,  1404,   495,
     243,  1407,  1408,  3651,  1345,   465,   342,   326,  2736,    15,
      16,    15,    16,   182,    12,   361,   602,  2806,    15,    16,
     606,   374,   589,   267,    15,    16,   219,    12,    15,    16,
     117,  2715,   589,  1439,   589,   494,  4005,   604,   589,   355,
    3608,   517,   358,   540,   407,   293,  3173,   604,  4017,  4018,
     342,    12,  1458,   604,  1460,  1461,   447,  1463,  1464,  4017,
    4018,   230,   336,  1404,   603,   604,   602,  1408,    19,   589,
    1476,   531,  1478,    15,    16,    15,    16,   116,   589,   160,
    1460,  1461,  3442,   603,  1396,   217,   428,   469,   589,   148,
      15,    16,  4061,   604,   355,   338,  2495,   358,   342,   602,
     624,  2583,  4071,   604,   589,    15,    16,   381,   240,    15,
      16,    15,    16,   455,   355,   574,  2128,   358,  3650,   604,
     602,   559,   355,  2851,   589,   358,   355,  2632,   610,   358,
      15,    16,   355,   182,   132,   358,   175,   152,    73,   604,
    4109,   228,  4111,  1549,  1550,   355,   339,   132,   358,   589,
      15,    16,  4121,  1662,  2632,   355,    15,    16,   358,   961,
     589,   489,   201,   380,   604,   493,   604,   589,  4137,   589,
    4139,   132,  4141,   124,   603,  2026,   558,   589,   227,  4148,
     355,   540,   604,   358,   604,   182,  2317,   152,  2039,   194,
    4159,   603,  2231,  2232,  2233,   355,    15,    16,   358,   518,
     589,    15,    16,  1609,   540,   355,  4175,  4176,   358,  1011,
     589,   602,    15,    16,  2976,   604,   512,  3387,    15,    16,
    3390,  2072,  4191,  4192,   543,   604,   355,  4196,   267,   358,
     198,   355,  3540,  3541,   358,   198,   597,   598,   599,   600,
     230,   116,  3319,   355,   509,  1651,   358,   512,   540,    80,
     547,  3329,   159,  1659,  3980,  1661,  1662,  3241,  3865,   249,
     355,    15,    16,   358,   120,   447,   610,  1673,    99,  1675,
     567,   568,   240,   589,  3444,  1681,  1682,   240,  1684,    15,
      16,    15,    16,   602,   219,    15,    16,   603,  1694,   447,
    2141,   596,  1698,   558,  3372,   529,   540,   455,   603,   355,
     175,   494,   358,   342,    16,    15,    16,   356,  1714,  1715,
    1716,  1717,   355,   400,    16,   358,   561,  1723,   481,  2450,
    1726,  1727,  1728,    38,   212,  2456,    15,    16,   589,  2851,
      45,   355,   135,   355,   358,  2401,   358,  1743,   512,   502,
    1681,  1682,   603,  1684,    15,    16,  1752,   116,   589,   355,
     194,   355,   358,  1694,   358,   217,   589,  1698,   355,   604,
     589,   358,   603,   515,   355,   610,   589,   358,   355,   212,
     603,   358,    15,    16,   603,  1716,  1717,   603,   604,   589,
     603,   574,  1788,   565,   566,  1726,  1727,  1728,   217,   589,
     194,    24,   267,   603,  1800,   168,  1218,   561,   333,  1221,
    1712,  1807,  1224,   603,   339,  2644,   175,   565,   566,   496,
    2266,   604,   217,   355,   589,   355,   358,   350,   358,  2364,
     602,   133,   552,   553,    46,   555,    15,    16,   603,   589,
     355,  2685,   201,   358,   326,  1747,  3044,  2691,   227,   589,
     604,  2886,   182,   603,   602,   355,   610,  1788,   358,   355,
    2685,   355,   358,   603,   358,   566,  2691,   270,   581,   582,
     589,  2693,  2907,  2908,   580,   589,  1807,   342,  1977,   404,
     355,   455,  1981,   358,   603,    15,    16,   589,    76,   603,
      78,   604,   568,  2928,   753,   571,    15,    16,    15,    16,
     355,   603,   610,   358,   589,   561,   355,  1903,   267,   358,
    2356,   540,   603,  3630,  3631,  3632,  3633,   352,   603,  1821,
    2019,  1917,   603,   604,    16,  2024,   608,   150,  1830,  1831,
     556,   119,  3000,   602,  2380,  2381,   950,   951,  3201,  1841,
    1842,  1843,  1844,   589,  1846,  1847,   355,   603,   604,   358,
     484,   355,   140,   179,   358,     6,   589,   603,   603,   604,
    3111,  3056,   355,  3114,  3115,   358,    11,   146,   355,   494,
     603,   358,   335,   336,   988,   589,   421,   589,   341,  2589,
    3131,  1977,   841,   342,   602,  1981,   174,  1983,  3056,   603,
    1986,   603,   326,   589,  3089,   589,   219,  1993,  1994,  1995,
    1996,   602,   589,  1999,   602,  2645,   114,   603,   589,   603,
     602,   355,   589,   315,   358,   604,  1986,    95,  2117,   602,
     545,  3089,   603,  2019,   602,  4222,   603,   518,  2024,   355,
     602,   355,   358,   602,   358,   355,   518,   602,   358,  1941,
    1942,   133,  1944,  3743,  1946,  1947,  1948,  1949,  1950,   574,
    2149,  1953,   182,  1955,   602,   355,   602,   589,   358,   589,
     602,   543,  1993,  1994,  1995,   182,  3771,   274,   275,   102,
     293,   603,   610,   603,   589,   540,   355,   162,  3778,   358,
      11,  3781,  3782,  3783,  3784,   603,   604,   347,   603,   589,
    2629,   602,    24,   589,   355,   589,  2752,   358,   602,     6,
     208,  3073,  3074,   603,    71,  3772,    24,   603,   494,   603,
     564,   565,   602,   567,   589,   569,   339,   521,   602,    95,
     602,  2117,   355,   602,  3159,   358,   159,  2783,   603,   602,
    2851,    12,   603,   604,   589,  2791,  2675,  2578,  2794,  3856,
     589,    73,   220,   602,  3523,  3524,  2142,   561,   603,    56,
      58,    59,   185,  2149,   603,    73,   458,   459,   602,   237,
      68,  2260,   602,  2262,  2263,   603,   604,  2163,    15,    16,
     248,   102,   535,  3268,  3874,  3875,   355,   602,  2834,   358,
     589,   540,   602,  3883,   518,   589,   603,   604,   551,   120,
     602,  1050,  3197,  3198,   603,   602,   589,   305,   384,  2195,
    3268,   309,   589,   410,   411,  2304,  2305,   436,   316,   543,
    3199,  3878,   179,  2209,   603,   604,   603,   405,   150,   603,
     604,    12,   602,   315,  3798,   355,   602,    73,   358,   136,
    2226,    12,    35,   602,   166,   602,   355,    25,   355,   358,
     602,   358,  1101,  2239,   220,   589,  1105,   325,   166,   602,
     217,   132,    58,    59,   185,   602,  2252,   602,  2254,   603,
      41,   237,   602,   589,  2260,   589,  2262,  2263,   602,   589,
     602,   494,   248,   240,  2270,  2271,  2375,   603,   353,   603,
      68,   133,   213,   603,   392,    73,   602,   219,   602,   589,
     602,   593,   594,   595,   596,   597,   598,   599,   600,  2295,
     509,   219,   213,   603,   150,  3221,   109,    88,  2304,  2305,
     589,   602,    93,   116,   602,    73,   602,    61,   602,    33,
    3325,   202,   603,   604,   603,    57,   602,    71,   589,    87,
     602,   119,   263,   603,   604,   603,   604,   445,   602,    83,
     602,   132,   603,   192,  2345,    59,   603,   604,  2344,   325,
    2252,   574,   385,  2349,  2355,   433,   589,   602,  2354,   602,
    2361,   293,  2358,   602,  2360,   168,   458,   459,   603,   604,
     603,   347,   175,   219,  2370,   293,  2372,  2373,   602,  2375,
     602,   604,  2383,   602,   133,   602,  2382,  2388,  2384,   603,
     604,   116,   106,  2394,  2395,   109,   602,  2393,   201,   603,
     604,   333,   521,   117,    71,  2401,   116,   339,   603,   604,
     589,   202,  2408,  2409,   347,   333,   383,   495,   603,   604,
     602,   339,  3024,   347,  2420,  3614,  3615,   603,   604,   336,
     603,   604,   602,   165,   602,   179,   602,   169,   603,   604,
     184,   290,   291,  1027,  1028,  1029,   295,   296,   180,  4154,
     175,   232,   240,   602,   385,  1039,   602,   433,   602,   589,
    2362,  2363,  2393,   315,   267,   175,   603,   604,   576,   602,
     589,   602,   589,   217,   602,  2916,   201,   603,   604,   512,
     602,  2477,  2478,   591,   242,  2387,  1070,   333,   602,  1073,
     397,   602,   399,   339,   603,   604,   240,  3838,   603,   604,
     533,   593,   594,   595,   596,   597,   598,   599,   600,  1093,
    1094,   602,   179,  1097,   602,  2956,   603,   604,   604,   495,
     470,   302,   453,   326,  4229,   142,   143,  3532,  3533,   607,
    3535,  3536,  1116,  1117,   337,   603,   604,    73,   341,   342,
     573,    48,   267,   264,  2446,    48,  2477,   335,   336,   604,
     217,    87,    73,   341,   347,   313,   441,   267,   404,   347,
     603,   604,   494,   347,  3753,   549,   315,   597,  3757,   301,
       6,  3181,   158,   240,   603,   604,   494,    13,    14,   510,
     338,   512,   455,   364,   105,   603,   604,   603,   604,    25,
      26,   127,   602,  3639,   253,   383,   180,   478,   479,   480,
     481,   482,   483,  2599,   603,   604,  2602,  2603,  2604,  2605,
     603,   604,   490,   327,   495,  2611,   509,   342,    61,   102,
      56,   158,  3811,  3812,    60,    61,   370,   490,    71,   150,
      66,   264,   342,  2629,   603,   604,  2632,    73,   396,   383,
      83,   149,   574,    82,  3560,    81,   603,   604,   494,  2645,
    3566,   604,  2648,  2649,  2650,    91,   574,   603,   604,   603,
     604,   349,   394,   451,  4005,  2661,  2765,   603,   604,   105,
     505,  2667,   604,  2669,  3769,  3210,   159,   603,   604,  2675,
    2611,   603,   604,   119,   603,   604,   122,   478,   479,   603,
     481,   472,   483,   129,   130,   148,   217,  3462,  3463,   545,
     136,  3769,   185,   370,   495,   119,   242,   105,   144,   458,
     459,   609,   148,     6,   150,   518,   383,  1102,  1103,   522,
    3876,  3877,   525,  3010,  3011,   506,   484,   602,   574,   473,
      25,    26,   535,   104,   217,     4,   179,   540,  2969,  2970,
     543,   184,   178,   595,   596,   597,   598,   599,   600,   463,
    2746,   476,   446,  2749,  2750,   573,  2752,   230,   604,  2661,
    3250,  3251,   550,    58,    59,    60,    18,   604,  4109,  2765,
    4111,   292,  2768,    68,   217,   370,    55,   313,    73,   215,
     263,   217,   413,   162,   105,   210,    81,  2783,   224,   310,
     604,   604,   595,   596,   133,  2791,  4137,   240,  2794,   335,
     336,   610,   338,   239,    68,    12,   550,   577,   603,   603,
     105,   525,   333,   518,   132,   540,     9,   604,  2814,   602,
     610,  2817,   252,   603,   119,   603,  2822,   122,   610,   604,
     540,   610,  2828,   150,  4175,  4176,  2832,   436,  2834,   553,
     609,   264,   264,    95,   593,   594,   595,   596,   597,   598,
     599,   600,   264,  2849,   264,   150,   292,    48,  2828,   264,
     396,   264,  3957,   604,  2766,   509,  2862,   602,   102,   259,
     604,   369,  2774,  2869,   310,  3485,   604,   529,   314,    35,
     604,   529,   604,   496,   497,  2881,  2817,   500,   501,  3957,
     152,   504,   604,   506,   230,   604,   148,   380,   604,  1483,
     152,   597,   385,  3819,   231,   507,    95,   170,  3537,  3538,
    3539,   510,  3741,   180,  3013,   351,   515,   604,   554,   604,
     356,   468,   217,   372,   128,   604,   178,   363,   180,   224,
    3029,   347,   603,   152,   370,   371,   604,   152,  2869,   152,
     383,  3571,   194,   152,   239,   556,   152,   199,   484,   152,
     184,   152,  2854,   109,  2950,   152,   152,   252,   152,   558,
     116,   213,  2958,   604,  3499,   401,   133,  1551,   220,   152,
     453,  1555,   152,   494,   573,   227,   315,   152,   152,   415,
     416,   417,   418,   217,   152,   237,  2982,  4033,   152,   510,
    1682,   152,  1684,   152,  1578,    31,   248,   292,   560,   584,
     185,   253,   438,   347,  3000,  3001,   347,   347,  3004,   182,
     262,    18,   168,   604,   603,   310,   603,  3013,   597,   175,
     603,   603,   603,  3019,   182,  3350,  3351,   510,   603,   263,
     473,   220,   515,  3029,  1726,  1727,  1728,   603,  3363,  3593,
     604,  3037,   596,  3368,   602,   201,   603,   603,   237,   604,
     533,   603,   603,   603,   549,   604,  2958,   603,   494,   248,
    3056,   603,  3692,   603,   456,   603,  3391,   602,   363,  3394,
     602,   600,  3068,   325,   510,   558,   371,   513,   602,  4125,
     218,   604,  3078,   529,  3080,   578,   602,   602,    95,   192,
     573,   182,   501,  3089,  4189,   347,   610,   133,   182,  3095,
     536,  3097,   603,  3099,   356,   393,   455,   550,   604,  3645,
     604,   267,   180,   549,  3213,    46,   484,  4212,   323,   458,
     459,  4189,   484,   484,  4219,   484,   484,   446,  4044,  4045,
    4225,  4047,    71,   385,   370,   370,   325,   370,   529,   128,
     238,   148,   238,   438,  4212,   152,   510,   510,   315,   128,
     370,  4219,    46,   370,   368,   416,   263,  4225,   347,   370,
     773,   602,   370,   610,   602,   602,   561,   226,   370,   603,
     326,   146,   608,   180,   603,  3171,   226,  4093,   610,  4095,
    4096,   433,   603,   603,  3283,   341,   342,   194,   603,    25,
      26,   610,   199,   610,   230,   603,   603,   610,   604,   494,
    3196,  3197,  3198,   455,   603,  3201,   610,   529,   610,   529,
     604,   518,   585,   220,   529,   510,   252,  3213,   513,   453,
     227,   259,    58,    59,    60,    46,   602,   602,   529,   152,
     237,   152,    68,   602,  4150,   353,   182,    73,   182,   473,
    3850,   248,   182,   495,   433,    81,   253,   227,   182,   234,
    3786,  3848,   173,   610,   549,   262,   595,   596,   597,   598,
     599,   600,  3164,   610,   342,   186,   604,   237,  3264,   105,
    4187,  3370,  3268,   237,   359,   196,   510,   306,   512,   315,
     105,   515,   105,   119,   240,  3187,   122,  3283,   240,   529,
     602,   458,   459,   602,    15,    16,   610,   549,   352,   335,
     336,   194,   518,    18,   430,   602,   495,   602,   560,   561,
     370,   610,   356,   597,   150,   602,   550,   602,   325,   228,
     228,   603,   243,   244,   558,   603,   578,   603,   580,  3325,
     603,  3866,   603,   610,  3335,   603,   580,   603,   603,   597,
     347,   347,   602,  3442,   213,   604,  3342,   603,   254,   356,
     271,   603,   604,   370,   603,   607,   608,   604,   603,   610,
     182,   133,   518,   555,   230,   250,   522,    68,   240,   525,
     237,   407,   237,   347,  3370,   604,   602,   240,   385,   535,
     604,   217,   604,   604,   540,   603,   381,   543,   224,   110,
     111,   112,   113,   114,   347,    73,   347,    18,   347,  3395,
     347,   470,  3501,   239,   602,   604,  3402,    46,   603,   253,
     447,   332,   602,   110,   111,   112,   113,   114,   449,   603,
     602,   602,   458,   459,  3420,   602,   433,   594,   595,   596,
     597,   598,   599,   600,   603,   471,   580,   603,   398,   595,
     596,   133,   192,   139,   604,   246,  3442,   194,   455,   152,
     153,   603,   457,   602,   602,   237,   292,   237,   230,   604,
     602,   382,   119,   119,   379,   602,   602,   610,    77,  3371,
     135,   465,   603,   470,   310,   442,   603,    18,    33,   604,
    4090,  4078,   603,   186,   205,   206,   207,   208,   495,   603,
     603,  3487,   603,   196,   603,   603,    33,    25,    26,   603,
     312,   603,   603,   242,   393,  3501,   262,  3409,   205,   206,
     207,   208,   353,   580,   227,   602,   602,   610,   199,    46,
     603,   520,   604,  3519,   604,   312,   518,   363,   398,   561,
     233,   518,    60,   561,   289,   371,  3532,  3533,   230,  3535,
    3536,   244,   549,   315,   602,    73,  4156,   602,   571,   602,
     602,  4087,  3651,    81,   561,   602,   602,   593,   594,   595,
     596,   597,   598,   599,   600,   555,   119,   571,   271,   603,
     240,   578,   602,   580,   240,   341,    33,   105,   342,    12,
      13,   603,   602,  4180,   305,   604,   307,   308,   309,   342,
     312,   119,   164,   518,   122,   316,   603,   604,   518,   518,
     607,   608,   438,  3599,  3600,   240,   565,   512,   305,   227,
     307,   308,   309,   561,   347,  3611,  4226,  4214,   561,   316,
     603,   603,   150,   315,   566,   337,   329,   604,   488,   353,
     580,   430,   342,   555,   355,   603,   500,   358,   180,   602,
     602,   602,  3638,   147,   577,   644,    30,   180,   603,   603,
     366,   128,   520,   611,   128,  3651,   150,   602,   494,   385,
      70,    94,   603,   406,   577,   182,    30,    61,   353,  3600,
      61,   392,   604,   603,   510,   674,   602,   513,   255,    46,
      46,   501,     5,   347,   602,  3681,   458,   459,   602,   217,
     123,   690,   494,   347,   146,   392,   224,   227,   608,   127,
     353,  3697,   353,   136,   135,   602,  3702,  3638,    46,    46,
     145,   239,    46,   549,   123,   555,   577,   146,   520,   212,
     269,   608,   118,   444,   445,   611,   159,   141,   161,   437,
      46,   602,    52,    46,    46,   734,   521,   439,   210,   172,
      54,   603,   146,   197,    46,   604,   603,   444,   445,    63,
     608,   604,   604,   608,   603,   603,    52,   604,    72,   192,
     420,   180,   180,    33,   292,   180,   458,   459,   604,   213,
      84,    85,    86,  3769,   579,   521,   119,   342,   602,  3775,
    3879,   455,   310,   181,   217,   604,   100,  3707,  2156,  3173,
     223,  3174,   622,  1957,  2333,  3418,  3734,  3851,  4024,  3416,
     947,  4025,  3420,  3598,  3800,  4214,  3802,  4167,  3804,    45,
     550,  3590,  1722,  2645,  3590,  3590,  3590,  3590,  3590,  4177,
    3590,   593,   594,   595,   596,   597,   598,   599,   600,   262,
    4058,  3590,  3590,  3590,  3830,   363,  3915,   639,  4058,  3590,
    3742,  3590,   644,   371,  4018,  3590,  3941,  3940,  1653,  1916,
    1409,   986,  3607,  1401,  1399,   576,   126,  2624,  2789,  2209,
    2982,  1245,  3869,  3775,  3266,  4125,  4041,  3786,   589,   590,
     591,  4087,   674,  3639,   489,  1453,  3190,  1909,  2855,   576,
     150,  3980,  3099,  3879,   154,  2478,  1917,  2411,   690,  3885,
    3078,  3155,  3122,   590,   591,  3122,  3558,  3334,  3379,  3866,
    3370,   593,   594,   595,   596,   597,   598,   599,   600,  3029,
     438,    11,  3808,    11,  3812,  3745,  3811,   187,  1991,  3757,
    3753,  3611,  3566,  1467,  1916,  3080,  1795,  2404,  1359,   731,
     732,   733,   734,  3339,   204,  3079,  2221,  1449,  1408,  1716,
    4039,   743,  2188,  2611,  2977,  2243,  2107,  3592,   570,  2958,
     862,  2025,  2589,   386,  2296,  1065,  3046,   390,  2106,  1733,
    3666,  3957,  3995,  3526,  3996,  3171,   494,  1039,  2135,   968,
    3089,  3873,  3877,   406,  3520,  4156,  3501,  2248,  1233,  1996,
    2183,   414,   510,  1258,  3980,   513,  2994,  2225,  3268,   422,
     304,  2995,  3056,  3957,   264,  1476,   560,   635,  1784,  3995,
    3996,  1311,   549,  1672,  1339,  3097,  1263,   321,  4080,  1785,
    2980,  3987,  4123,  4219,   447,  4051,   286,  4225,  3372,  1291,
    3000,   549,  1738,  2677,  1023,  1024,  3294,   460,   461,   541,
    3037,  3509,  1698,  1032,  1033,  1281,   844,  1036,  1037,  1038,
    1226,  3634,  3628,  4039,  1043,  2599,   542,  1046,  1047,   849,
    1049,   485,  1051,   485,   622,   622,   622,  1458,    -1,  1058,
    1059,  1060,  1061,    -1,  1063,  3967,  3968,  4063,    -1,    -1,
      -1,   504,  1071,  1072,  4070,  1074,  1075,    -1,    -1,    -1,
      -1,  1080,    -1,  1082,  1083,  1084,    -1,    -1,  1087,  1088,
    1089,  1090,  1091,  1092,    -1,    -1,  1095,  1096,    -1,  1098,
     533,  1100,    -1,    -1,    -1,  1104,    -1,  1106,  1107,  4208,
      -1,    -1,    -1,    -1,   384,    -1,    -1,    -1,    -1,  1118,
    1119,    -1,   555,   393,   557,    -1,    -1,  1126,    -1,   443,
      -1,    -1,    -1,    -1,  1133,  1134,  1135,    -1,   408,    -1,
      -1,    -1,  4138,    -1,    -1,    -1,    -1,  4143,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   426,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   968,  1166,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   497,  4180,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4189,    -1,   465,   466,    -1,    -1,    -1,
     514,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,  4208,    -1,    -1,    -1,  4212,    -1,  4214,    -1,
     490,  1023,  1024,  4219,    -1,    -1,    -1,    -1,    -1,  4225,
    1032,  1033,  1034,  1035,  1036,  1037,  1038,    -1,    -1,   509,
      -1,  1043,   512,    -1,  1046,  1047,    -1,  1049,    -1,  1051,
      -1,    -1,    -1,  1055,    -1,    -1,  1058,  1059,  1060,  1061,
      -1,  1063,  1064,    -1,    -1,    -1,    -1,    -1,    -1,  1071,
    1072,    -1,  1074,  1075,  1076,  1077,  1078,    -1,  1080,    -1,
    1082,  1083,  1084,  1085,  1086,  1087,  1088,  1089,  1090,  1091,
    1092,    -1,  1291,  1095,  1096,    -1,  1098,    -1,  1100,   126,
    1299,    -1,  1104,    -1,  1106,  1107,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1118,  1119,    -1,    -1,
      -1,    -1,    -1,   150,  1126,    -1,    -1,   154,    -1,    -1,
      -1,  1133,  1134,  1135,    -1,  1137,    -1,    -1,    -1,    -1,
      -1,    -1,  1144,  1145,  1146,    -1,  1148,  1149,  1150,  1151,
    1152,    -1,  1154,  1155,  1156,  1157,  1158,  1159,  1160,  1161,
     187,    13,    14,  1165,  1166,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   204,    30,    32,
      33,    -1,    34,    -1,    -1,    38,    -1,    40,    -1,    42,
      43,    -1,    -1,    -1,    -1,    -1,    48,    49,    -1,    -1,
      -1,    -1,    -1,  3922,    56,    -1,    59,    -1,    60,    61,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3937,    -1,
      -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3950,    -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,
      -1,    -1,    94,    -1,    12,    13,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,    -1,    -1,   109,    -1,    -1,   286,
      -1,    -1,    -1,   115,   117,    -1,    -1,    -1,    -1,    -1,
      -1,   123,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,   135,   136,    -1,    -1,    -1,    -1,  1291,
    1489,    -1,    -1,    -1,    -1,    -1,   148,  1299,   151,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   174,    -1,   176,    -1,   177,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,
     192,    -1,  4061,    -1,    -1,   197,    -1,    13,   200,    -1,
      -1,    -1,  4071,    -1,    -1,   123,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,    -1,   136,    -1,
      -1,   223,    -1,   225,    -1,   228,    -1,    -1,    -1,    -1,
      -1,   408,    -1,    -1,    -1,    -1,  1585,  1586,  1587,   241,
      -1,   159,    -1,   161,    -1,    -1,    -1,    -1,    -1,   426,
      -1,    -1,  4121,   256,   172,    -1,   258,    -1,    -1,    -1,
     262,    -1,   265,   266,    -1,   268,    -1,    -1,    -1,    -1,
    4139,    -1,  4141,    -1,   192,    -1,  1625,    -1,    94,  4148,
      -1,    -1,    -1,    -1,    -1,  1634,    -1,  1636,   465,   466,
    4159,    -1,    -1,    -1,    -1,   298,   299,   300,    -1,   217,
      -1,    -1,    -1,    -1,    -1,   223,    -1,   123,    -1,    -1,
      -1,    -1,    -1,   490,   317,   318,   319,    -1,    -1,    -1,
     136,   324,  4191,  4192,   327,    -1,    -1,  4196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1489,    -1,    -1,
     343,   344,    -1,   159,   262,   161,    -1,    -1,    -1,   351,
      -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,
      -1,    -1,  1711,    -1,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   375,   376,    -1,    -1,   192,    -1,   380,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,    -1,    -1,
      -1,   217,    -1,    -1,    -1,    -1,    -1,   223,    -1,    -1,
      -1,   413,    -1,    -1,   416,    -1,   418,    -1,    -1,   421,
      -1,    -1,   424,   425,    -1,    -1,    -1,    -1,    -1,    -1,
     432,    -1,   434,  1585,  1586,  1587,    -1,    -1,    -1,   441,
      -1,    -1,    -1,    -1,    -1,   447,   262,  1599,   451,    -1,
      -1,    -1,   455,   455,    -1,    -1,    -1,    -1,   460,    -1,
     462,    -1,    -1,   465,   467,    -1,    -1,    -1,   386,    -1,
      -1,    -1,   390,  1625,    -1,    -1,    -1,    -1,    -1,  1631,
      -1,    -1,  1634,    -1,  1636,    -1,    -1,   489,   406,    -1,
    1642,   493,  1644,  1645,    -1,    -1,   414,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   422,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   519,    -1,    -1,   522,
      -1,    -1,   525,   526,   527,   528,    -1,    -1,    -1,   447,
      -1,    -1,    -1,    -1,   536,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   460,   461,    -1,    -1,   548,    -1,    -1,    -1,
     552,   214,    -1,   555,    -1,    -1,    -1,    -1,   560,  1711,
      -1,    -1,    -1,    -1,   567,   568,    -1,    -1,    -1,    -1,
     386,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   587,   504,    -1,   591,  1938,
     406,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   414,    -1,
     602,    -1,    -1,    -1,    -1,    -1,   422,    -1,    -1,   272,
     273,   274,   275,   276,   277,   533,   279,   280,   281,   282,
     283,   284,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,   447,    -1,    -1,    -1,    -1,    -1,   555,    -1,   557,
      -1,    -1,    -1,    -1,   460,   461,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2005,    -1,    -1,    -1,
    2009,    -1,    -1,    -1,    -1,  2014,  2015,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2023,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2036,   504,  2038,
      -1,    -1,  2041,  2042,  2043,  2044,  2045,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2057,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2065,   533,  2067,    -1,
    2069,  2070,  2071,    -1,    -1,    -1,    -1,  2076,  2077,  2078,
      -1,    -1,    -1,    -1,  2083,  2084,  2085,    -1,  2087,   555,
    2089,   557,  2091,    -1,  2093,    -1,  2095,   410,   411,    -1,
      -1,  2100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2118,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2134,  1938,    -1,  2137,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     6,    -1,
      -1,    -1,    -1,    -1,    -1,    13,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    25,    26,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,    -1,
      -1,    -1,    60,  2005,    -1,    -1,    -1,  2009,    -1,    -1,
      -1,    -1,  2014,  2015,    -1,    73,    -1,    -1,    -1,    -1,
      -1,  2023,    -1,    81,  2026,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    91,  2036,    -1,  2038,  2039,    -1,  2041,
    2042,  2043,  2044,  2045,    -1,    -1,  2048,   105,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2057,    -1,    -1,    -1,    -1,
      -1,   119,    -1,  2065,   122,  2067,    -1,  2069,  2070,  2071,
    2072,   129,    -1,    -1,  2076,  2077,  2078,    -1,   136,    -1,
      -1,  2083,  2084,  2085,    -1,  2087,   144,  2089,    -1,  2091,
      -1,  2093,   150,  2095,    -1,    -1,    -1,    -1,  2100,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2118,    -1,    -1,    -1,
     178,    -1,    -1,  2125,    -1,    -1,  2128,    -1,    -1,    -1,
      -1,    -1,  2134,    -1,    -1,  2137,    -1,    -1,    -1,  2141,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,
      -1,    13,    14,    -1,    -1,    -1,   224,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   239,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2196,    -1,    48,    49,    25,    26,
      -1,    -1,    -1,    -1,    56,    -1,    -1,    -1,    60,    61,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    58,    59,    60,   292,    -1,    -1,    -1,    -1,    -1,
      -1,    68,    94,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,   310,    -1,    81,    -1,   314,    -1,    -1,    -1,
      -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   123,   124,   125,    -1,    -1,    -1,    -1,   105,    -1,
      -1,    -1,    -1,   135,   136,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,    -1,   122,    23,    -1,   356,    -1,
    2499,    -1,    -1,    -1,  2503,   363,    33,    34,    -1,   161,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   150,    -1,   177,  2525,  2526,    -1,    -1,
      -1,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     192,    -1,    69,    -1,    -1,   197,  2545,    -1,   200,    -1,
      -1,    -1,    -1,    -1,    -1,  2554,    -1,  2556,   416,  2558,
      -1,    -1,    -1,    90,    -1,    92,    -1,    94,    -1,    -1,
      -1,   223,    -1,   225,    -1,    -1,   103,    -1,    -1,    -1,
     438,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,
     217,    -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   258,    -1,  2607,    -1,
     262,    -1,   239,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   149,   150,    -1,    -1,    -1,    -1,   155,    -1,
      -1,   158,    -1,    -1,    -1,    -1,   494,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,    -1,   513,   183,    -1,   185,    -1,
      -1,    -1,    -1,    -1,   191,   292,   193,    -1,    -1,    -1,
      -1,  2670,    -1,    -1,    -1,  2674,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   310,    -1,    -1,    -1,    -1,    -1,   216,
     217,   549,    -1,    -1,    -1,    -1,    -1,  2499,    -1,   351,
      -1,  2503,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   238,    -1,    -1,    -1,    -1,    -1,    -1,   370,  2718,
      -1,    -1,    -1,  2525,  2526,    -1,    -1,    -1,   380,    -1,
      -1,    -1,   259,    -1,    -1,    -1,   363,    -1,    -1,   391,
      -1,    -1,    -1,  2545,   371,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2554,    -1,  2556,    -1,  2558,    -1,    -1,   286,
      -1,   413,    -1,    -1,   416,    -1,   418,    -1,    -1,   421,
      -1,    -1,   424,   425,    -1,    -1,  2578,    -1,    -1,    -1,
     432,  2583,   434,    -1,    -1,    -1,    -1,    -1,    -1,   441,
      -1,    -1,    -1,    -1,    -1,   447,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   455,    -1,  2607,    -1,    -1,   460,    -1,
     462,   438,    -1,   465,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   350,    -1,    -1,  2825,  2826,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   489,    -1,    -1,
      -1,   493,    -1,    -1,    -1,    -1,   373,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,    -1,
      -1,   388,   389,    -1,    -1,    -1,    -1,   494,  2670,    -1,
      -1,    -1,  2674,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   409,   510,   536,    -1,   513,    -1,    -1,    -1,
    2889,    -1,    -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,
     552,    -1,    -1,   555,    -1,    -1,    -1,    -1,   560,    -1,
      -1,    -1,    -1,    -1,  2913,  2914,  2718,    -1,    -1,    -1,
      -1,    -1,   549,    -1,    -1,   452,  2925,    -1,    -1,    -1,
      -1,  2930,    -1,    -1,  2933,   587,  2935,  2936,   465,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,    -1,
      -1,    -1,  2971,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   512,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2994,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2825,  2826,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3038,
      -1,    -1,   569,    -1,    -1,    -1,    -1,    -1,   575,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3058,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3067,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2889,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2913,  2914,    -1,  2916,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2925,    -1,    -1,    -1,    -1,  2930,    -1,
      -1,  2933,    -1,  2935,  2936,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2956,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2971,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2994,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3024,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3038,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3058,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3067,    -1,    -1,    -1,    -1,
    3269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3308,
    3309,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3317,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3451,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3482,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3496,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3308,  3309,    -1,    -1,
    3509,    -1,    -1,    -1,    -1,  3317,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3451,
    3649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3658,
      -1,  3660,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3496,  3694,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3509,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3590,    -1,
      -1,    -1,  3791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3823,    -1,  3825,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3835,  3639,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3649,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3658,    -1,  3660,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3694,    -1,    -1,    -1,    -1,    -1,  3700,  3701,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3920,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3938,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3958,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3791,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4004,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3823,    -1,  3825,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3835,    -1,  3837,  3838,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3860,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4068,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3920,    -1,
    3922,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4128,
      -1,    -1,    -1,    -1,    -1,  3937,  3938,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3950,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3958,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4004,  4005,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4017,  4018,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4228,
      -1,  4033,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4061,
      -1,    -1,    -1,    -1,    -1,    -1,  4068,    -1,    -1,  4071,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4102,    -1,    -1,    -1,    -1,    -1,    -1,  4109,    -1,  4111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4121,
      -1,    -1,    -1,  4125,    -1,    -1,  4128,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4137,    -1,  4139,    -1,  4141,
      -1,    -1,    -1,    -1,    -1,    -1,  4148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4159,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4175,  4176,    -1,    -1,    -1,    -1,  4181,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,  4191,
    4192,    -1,    -1,    17,  4196,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      44,    45,    -1,    47,    48,    -1,  4228,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,   100,   101,   102,    -1,
     104,   105,   106,   107,   108,   109,    -1,    -1,    -1,    -1,
     114,   115,   116,    -1,    -1,   119,   120,    -1,   122,    -1,
      -1,    -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,
      -1,   135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,
     144,    -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,
     154,   155,    -1,   157,   158,   159,   160,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,
      -1,   185,    -1,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,    -1,   197,   198,    -1,   200,   201,    -1,   203,
     204,    -1,    -1,    -1,   208,   209,   210,   211,   212,    -1,
     214,   215,   216,    -1,    -1,   219,    -1,    -1,    -1,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,   232,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,
      -1,   245,   246,    -1,   248,   249,   250,    -1,    -1,    -1,
      -1,    -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,    -1,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,
     304,   305,   306,    -1,    -1,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,    -1,   348,   349,   350,    -1,   352,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,    -1,
     384,    -1,   386,   387,   388,   389,   390,    -1,   392,   393,
     394,    -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,
     404,   405,    -1,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,    -1,
     424,    -1,   426,   427,    -1,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
      -1,   445,   446,    -1,    -1,    -1,   450,   451,   452,   453,
      -1,    -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,    -1,
      -1,    -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,    -1,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,    -1,    -1,   513,
     514,   515,   516,    -1,   518,   519,   520,    -1,   522,   523,
     524,   525,    -1,    -1,    -1,    -1,   530,   531,   532,    -1,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,
     554,    -1,   556,    -1,   558,   559,    -1,    -1,   562,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,
     584,    -1,   586,   587,   588,    -1,    -1,   591,    -1,    -1,
      -1,   595,   596,    -1,    -1,    -1,    -1,   601,   602,    -1,
      -1,   605,   606,    -1,    -1,   609,   610,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    35,    36,    37,
      38,    39,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    52,    53,    54,    55,    -1,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,   100,   101,   102,    -1,   104,   105,   106,   107,
     108,   109,    -1,    -1,    -1,    -1,   114,   115,   116,    -1,
      -1,   119,   120,    -1,   122,    -1,    -1,    -1,   126,    -1,
     128,   129,   130,   131,    -1,    -1,    -1,   135,    -1,    -1,
     138,   139,   140,    -1,    -1,    -1,   144,    -1,   146,   147,
      -1,   149,   150,   151,    -1,    -1,   154,   155,    -1,   157,
     158,   159,   160,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,   170,    -1,   172,   173,   174,   175,    -1,   177,
      -1,    -1,    -1,   181,    -1,   183,    -1,   185,    -1,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,    -1,   197,
     198,    -1,   200,   201,    -1,   203,   204,    -1,    -1,    -1,
     208,   209,   210,   211,   212,    -1,   214,   215,   216,    -1,
      -1,   219,    -1,    -1,    -1,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,   232,    -1,   234,   235,    -1,    -1,
      -1,   239,    -1,    -1,   242,   243,    -1,    -1,   246,    -1,
     248,   249,   250,    -1,    -1,    -1,    -1,    -1,   256,   257,
      -1,   259,    -1,   261,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,    -1,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
      -1,    -1,    -1,   301,   302,   303,   304,   305,   306,    -1,
      -1,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,    -1,   384,    -1,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,    -1,    -1,   397,
      -1,    -1,    -1,   401,   402,   403,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,    -1,   424,    -1,   426,   427,
      -1,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,    -1,   445,   446,    -1,
      -1,    -1,   450,   451,   452,   453,    -1,    -1,    -1,   457,
      -1,    -1,    -1,   461,    -1,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,
      -1,   479,   480,    -1,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,    -1,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,    -1,    -1,   513,   514,   515,   516,    -1,
     518,   519,   520,    -1,   522,   523,   524,   525,    -1,    -1,
      -1,    -1,    -1,   531,   532,    -1,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,    -1,   547,
     548,    -1,    -1,   551,    -1,    -1,   554,    -1,   556,    -1,
     558,   559,    -1,    -1,   562,   563,   564,   565,   566,    -1,
      -1,   569,   570,    -1,   572,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,    -1,   583,   584,    -1,   586,   587,
     588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,    -1,
      -1,    -1,    -1,   601,   602,    -1,    -1,   605,   606,    -1,
      -1,   609,   610,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,   100,   101,
     102,    -1,   104,   105,   106,   107,   108,   109,    -1,    -1,
      -1,    -1,   114,   115,   116,    -1,    -1,   119,   120,    -1,
     122,    -1,    -1,    -1,   126,    -1,   128,   129,   130,   131,
      -1,    -1,    -1,   135,    -1,    -1,   138,   139,   140,    -1,
      -1,    -1,   144,    -1,   146,   147,    -1,   149,   150,   151,
      -1,    -1,   154,   155,    -1,   157,   158,   159,   160,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,   170,    -1,
     172,   173,   174,   175,    -1,   177,    -1,    -1,    -1,   181,
      -1,   183,    -1,   185,    -1,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,    -1,   197,   198,    -1,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,   208,   209,   210,   211,
     212,    -1,   214,   215,   216,    -1,    -1,   219,    -1,    -1,
      -1,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
     232,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,
     242,   243,    -1,    -1,   246,    -1,   248,   249,   250,    -1,
      -1,    -1,    -1,    -1,   256,   257,    -1,   259,    -1,   261,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,    -1,    -1,    -1,   301,
     302,   303,   304,   305,   306,    -1,    -1,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,    -1,   348,   349,   350,    -1,
     352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,    -1,   384,    -1,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,    -1,   397,    -1,    -1,    -1,   401,
     402,   403,   404,   405,    -1,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,    -1,   424,    -1,   426,   427,    -1,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,    -1,   445,   446,    -1,    -1,    -1,   450,   451,
     452,   453,    -1,    -1,    -1,   457,    -1,    -1,    -1,   461,
      -1,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,    -1,    -1,    -1,    -1,    -1,    -1,   479,   480,    -1,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,    -1,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
      -1,   513,   514,   515,   516,    -1,   518,   519,   520,    -1,
     522,   523,   524,   525,    -1,    -1,    -1,    -1,    -1,   531,
     532,    -1,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,    -1,   547,   548,    -1,    -1,   551,
      -1,    -1,   554,    -1,   556,    -1,   558,   559,    -1,    -1,
     562,   563,   564,   565,   566,    -1,    -1,   569,   570,    -1,
     572,   573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,
      -1,   583,   584,    -1,   586,   587,   588,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
     602,   603,    -1,   605,   606,    -1,    -1,   609,   610,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    35,
      36,    37,    38,    39,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    52,    53,    54,    55,
      -1,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    -1,   100,   101,   102,    -1,   104,   105,
     106,   107,   108,   109,    -1,    -1,    -1,    -1,   114,   115,
     116,    -1,    -1,   119,   120,    -1,   122,    -1,    -1,    -1,
     126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,   135,
      -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,    -1,
     146,   147,    -1,   149,   150,   151,    -1,    -1,   154,   155,
      -1,   157,   158,   159,   160,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
      -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,
      -1,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
      -1,   197,   198,    -1,   200,   201,    -1,   203,   204,    -1,
      -1,    -1,   208,   209,   210,   211,   212,    -1,   214,   215,
     216,    -1,    -1,   219,    -1,    -1,    -1,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,   232,    -1,   234,   235,
      -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,    -1,
     246,    -1,   248,   249,   250,    -1,    -1,    -1,    -1,    -1,
     256,   257,    -1,   259,    -1,   261,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,    -1,    -1,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,   305,
     306,    -1,    -1,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,    -1,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,    -1,   384,    -1,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,    -1,
      -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,   405,
      -1,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,    -1,   424,    -1,
     426,   427,    -1,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,    -1,   445,
     446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,    -1,
      -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,    -1,    -1,    -1,
      -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,    -1,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,    -1,    -1,   513,   514,   515,
     516,    -1,   518,   519,   520,    -1,   522,   523,   524,   525,
      -1,    -1,    -1,    -1,    -1,   531,   532,    -1,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
      -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,    -1,
     556,    -1,   558,   559,    -1,    -1,   562,   563,   564,   565,
     566,    -1,    -1,   569,   570,    -1,   572,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,    -1,
     586,   587,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,
     596,    -1,    -1,    -1,    -1,   601,   602,    -1,    -1,   605,
     606,    -1,    -1,   609,   610,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    35,    36,    37,    38,    39,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    52,    53,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
     100,   101,   102,    -1,   104,   105,   106,   107,   108,   109,
      -1,    -1,    -1,    -1,   114,   115,   116,    -1,    -1,   119,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
     170,    -1,   172,   173,   174,   175,    -1,   177,    -1,    -1,
      -1,   181,   182,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,    -1,   197,   198,    -1,
     200,   201,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,   248,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,   518,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,   562,   563,   564,   565,   566,    -1,    -1,   569,
     570,    -1,   572,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
      -1,   591,    -1,    -1,    -1,   595,   596,    -1,    -1,    -1,
      -1,   601,   602,    -1,    -1,   605,   606,    -1,    -1,   609,
     610,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,   100,   101,   102,    -1,
     104,   105,   106,   107,   108,   109,    -1,    -1,    -1,    -1,
     114,   115,   116,    -1,    -1,   119,   120,    -1,   122,    -1,
      -1,    -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,
      -1,   135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,
     144,    -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,
     154,   155,    -1,   157,   158,   159,   160,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,
      -1,   185,    -1,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,    -1,   197,   198,    -1,   200,   201,    -1,   203,
     204,    -1,    -1,    -1,   208,   209,   210,   211,   212,    -1,
     214,   215,   216,    -1,    -1,   219,    -1,    -1,    -1,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,   232,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,
      -1,    -1,   246,    -1,   248,   249,   250,    -1,    -1,    -1,
      -1,    -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,    -1,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,
     304,   305,   306,    -1,    -1,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,    -1,   348,   349,   350,    -1,   352,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,    -1,
     384,    -1,   386,   387,   388,   389,   390,    -1,   392,   393,
     394,    -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,
     404,   405,    -1,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,    -1,
     424,    -1,   426,   427,    -1,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
      -1,   445,   446,    -1,    -1,    -1,   450,   451,   452,   453,
      -1,    -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,    -1,
      -1,    -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,    -1,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,    -1,    -1,   513,
     514,   515,   516,    -1,   518,   519,   520,    -1,   522,   523,
     524,   525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,
     554,    -1,   556,    -1,   558,   559,    -1,    -1,   562,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,
     584,    -1,   586,   587,   588,    -1,    -1,   591,    -1,    -1,
      -1,   595,   596,    -1,    -1,    -1,    -1,   601,   602,    -1,
      -1,   605,   606,    -1,    -1,   609,   610,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    35,    36,    37,
      38,    39,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    52,    53,    54,    55,    -1,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,   100,   101,   102,    -1,   104,   105,   106,   107,
     108,   109,    -1,    -1,    -1,    -1,   114,   115,   116,    -1,
      -1,   119,   120,    -1,   122,    -1,    -1,    -1,   126,    -1,
     128,   129,   130,   131,    -1,    -1,    -1,   135,    -1,    -1,
     138,   139,   140,    -1,    -1,    -1,   144,    -1,   146,   147,
      -1,   149,   150,   151,    -1,    -1,   154,   155,    -1,   157,
     158,   159,   160,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,   170,    -1,   172,   173,   174,   175,    -1,   177,
      -1,    -1,    -1,   181,    -1,   183,    -1,   185,    -1,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,    -1,   197,
     198,    -1,   200,   201,    -1,   203,   204,    -1,    -1,    -1,
     208,   209,   210,   211,   212,    -1,   214,   215,   216,    -1,
      -1,   219,    -1,    -1,    -1,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,   232,    -1,   234,   235,    -1,    -1,
      -1,   239,    -1,    -1,   242,   243,    -1,    -1,   246,    -1,
     248,   249,   250,    -1,    -1,    -1,    -1,    -1,   256,   257,
      -1,   259,    -1,   261,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,    -1,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
      -1,    -1,    -1,   301,   302,   303,   304,   305,   306,    -1,
      -1,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,    -1,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,    -1,   384,    -1,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,    -1,    -1,   397,
      -1,    -1,    -1,   401,   402,   403,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,    -1,   424,    -1,   426,   427,
      -1,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,    -1,   445,   446,    -1,
      -1,    -1,   450,   451,   452,   453,    -1,    -1,    -1,   457,
      -1,    -1,    -1,   461,    -1,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,
      -1,   479,   480,    -1,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,    -1,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,    -1,    -1,   513,   514,   515,   516,    -1,
     518,   519,   520,    -1,   522,   523,   524,   525,    -1,    -1,
      -1,    -1,    -1,   531,   532,    -1,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,    -1,   547,
     548,    -1,    -1,   551,    -1,    -1,   554,    -1,   556,    -1,
     558,   559,    -1,    -1,   562,   563,   564,   565,   566,    -1,
      -1,   569,   570,    -1,   572,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,    -1,   583,   584,    -1,   586,   587,
     588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,    -1,
      -1,    -1,    -1,   601,   602,    -1,    -1,   605,   606,    -1,
      -1,   609,   610,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,   100,   101,
     102,    -1,   104,   105,   106,   107,   108,   109,    -1,    -1,
      -1,    -1,   114,   115,   116,    -1,    -1,   119,   120,    -1,
     122,    -1,    -1,    -1,   126,    -1,   128,   129,   130,   131,
      -1,    -1,    -1,   135,    -1,    -1,   138,   139,   140,    -1,
      -1,    -1,   144,    -1,   146,   147,    -1,   149,   150,   151,
      -1,    -1,   154,   155,    -1,   157,   158,   159,   160,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,   170,    -1,
     172,   173,   174,   175,    -1,   177,    -1,    -1,    -1,   181,
      -1,   183,    -1,   185,    -1,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,    -1,   197,   198,    -1,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,   208,   209,   210,   211,
     212,    -1,   214,   215,   216,    -1,    -1,   219,    -1,    -1,
      -1,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
     232,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,
     242,   243,    -1,    -1,   246,    -1,   248,   249,   250,    -1,
      -1,    -1,    -1,    -1,   256,   257,    -1,   259,    -1,   261,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,    -1,    -1,    -1,   301,
     302,   303,   304,   305,   306,    -1,    -1,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,    -1,   348,   349,   350,    -1,
     352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,    -1,   384,    -1,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,    -1,   397,    -1,    -1,    -1,   401,
     402,   403,   404,   405,    -1,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,    -1,   424,    -1,   426,   427,    -1,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,    -1,   445,   446,    -1,    -1,    -1,   450,   451,
     452,   453,    -1,    -1,    -1,   457,    -1,    -1,    -1,   461,
      -1,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,    -1,    -1,    -1,    -1,    -1,    -1,   479,   480,    -1,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,    -1,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
      -1,   513,   514,   515,   516,    -1,   518,   519,   520,    -1,
     522,   523,   524,   525,    -1,    -1,    -1,    -1,    -1,   531,
     532,    -1,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,    -1,   547,   548,    -1,    -1,   551,
      -1,    -1,   554,    -1,   556,    -1,   558,   559,    -1,    -1,
     562,   563,   564,   565,   566,    -1,    -1,   569,   570,    -1,
     572,   573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,
      -1,   583,   584,    -1,   586,   587,   588,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
     602,    -1,    -1,   605,   606,    -1,    -1,   609,   610,     5,
      -1,     7,     8,     9,    10,    11,    12,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    35,
      36,    37,    38,    39,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    52,    53,    54,    55,
      -1,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    -1,   100,   101,   102,    -1,   104,   105,
     106,   107,   108,   109,    -1,    -1,    -1,    -1,   114,   115,
     116,    -1,    -1,   119,   120,    -1,   122,    -1,    -1,    -1,
     126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,   135,
      -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,    -1,
     146,   147,    -1,   149,   150,   151,    -1,    -1,   154,   155,
      -1,   157,   158,   159,   160,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
      -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,   185,
      -1,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
      -1,   197,   198,    -1,   200,   201,    -1,   203,   204,    -1,
      -1,    -1,   208,   209,   210,   211,   212,    -1,   214,   215,
     216,    -1,    -1,   219,    -1,    -1,    -1,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,   232,    -1,   234,   235,
      -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,    -1,
     246,    -1,   248,   249,   250,    -1,    -1,    -1,    -1,    -1,
     256,   257,    -1,   259,    -1,   261,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,    -1,    -1,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,   305,
     306,    -1,    -1,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,    -1,    -1,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,    -1,   384,    -1,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,    -1,
      -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,   405,
      -1,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,    -1,   424,    -1,
     426,   427,    -1,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,    -1,   445,
     446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,    -1,
      -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,    -1,    -1,    -1,
      -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,    -1,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,    -1,    -1,   513,   514,   515,
     516,    -1,   518,   519,   520,    -1,   522,   523,   524,   525,
      -1,    -1,    -1,    -1,    -1,   531,   532,    -1,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
      -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,    -1,
     556,    -1,   558,   559,    -1,    -1,   562,   563,   564,   565,
     566,    -1,    -1,   569,   570,    -1,   572,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,    -1,
     586,   587,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,
     596,    -1,    -1,    -1,    -1,   601,   602,    -1,    -1,   605,
     606,    -1,    -1,   609,   610,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    35,    36,    37,    38,    39,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    52,    53,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
     100,   101,   102,    -1,   104,   105,   106,   107,   108,   109,
      -1,    -1,    -1,    -1,   114,   115,   116,    -1,    -1,   119,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
     170,    -1,   172,   173,   174,   175,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,    -1,   197,   198,    -1,
     200,   201,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,   248,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,   518,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,   562,   563,   564,   565,   566,    -1,    -1,   569,
     570,    -1,   572,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
      -1,   591,    -1,    -1,    -1,   595,   596,    -1,    -1,    -1,
      -1,   601,   602,    -1,    -1,   605,   606,    -1,    -1,   609,
     610,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,   100,   101,   102,    -1,
     104,   105,   106,   107,   108,   109,    -1,    -1,    -1,    -1,
     114,   115,   116,    -1,    -1,   119,   120,    -1,   122,    -1,
      -1,    -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,
      -1,   135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,
     144,    -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,
     154,   155,    -1,   157,   158,   159,   160,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,
      -1,   185,    -1,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,    -1,   197,   198,    -1,   200,   201,    -1,   203,
     204,    -1,    -1,    -1,   208,   209,   210,   211,   212,    -1,
     214,   215,   216,    -1,    -1,   219,    -1,    -1,    -1,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,   232,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,
      -1,    -1,   246,    -1,   248,   249,   250,    -1,    -1,    -1,
      -1,    -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,    -1,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,
     304,   305,   306,    -1,    -1,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,    -1,   348,   349,   350,    -1,   352,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,    -1,
     384,    -1,   386,   387,   388,   389,   390,    -1,   392,   393,
     394,    -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,
     404,   405,    -1,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,    -1,
     424,    -1,   426,   427,    -1,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
      -1,   445,   446,    -1,    -1,    -1,   450,   451,   452,   453,
      -1,    -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,    -1,
      -1,    -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,    -1,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,    -1,    -1,   513,
     514,   515,   516,    -1,   518,   519,   520,    -1,   522,   523,
     524,   525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,
     554,    -1,   556,    -1,   558,   559,    -1,    -1,   562,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,
     584,    -1,   586,   587,   588,    -1,    -1,   591,    -1,    -1,
      -1,   595,   596,    -1,    -1,    -1,    -1,   601,   602,    -1,
      -1,   605,   606,    -1,    -1,   609,   610,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    35,    36,    37,
      38,    39,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    52,    53,    54,    55,    -1,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,   100,   101,   102,    -1,   104,   105,   106,   107,
     108,   109,    -1,    -1,    -1,    -1,   114,   115,   116,    -1,
      -1,   119,   120,    -1,   122,    -1,    -1,    -1,   126,    -1,
     128,   129,   130,   131,    -1,    -1,    -1,   135,    -1,    -1,
     138,   139,   140,    -1,    -1,    -1,   144,    -1,   146,   147,
      -1,   149,   150,   151,    -1,    -1,   154,   155,    -1,   157,
     158,   159,   160,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,   170,    -1,   172,   173,   174,   175,    -1,   177,
      -1,    -1,    -1,   181,    -1,   183,    -1,   185,    -1,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,    -1,   197,
     198,    -1,   200,   201,    -1,   203,   204,    -1,    -1,    -1,
     208,   209,   210,   211,   212,    -1,   214,   215,   216,    -1,
      -1,   219,    -1,    -1,    -1,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,   232,    -1,   234,   235,    -1,    -1,
      -1,   239,    -1,    -1,   242,   243,    -1,    -1,   246,    -1,
     248,   249,   250,    -1,    -1,    -1,    -1,    -1,   256,   257,
      -1,   259,    -1,   261,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,    -1,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
      -1,    -1,    -1,   301,   302,   303,   304,   305,   306,    -1,
      -1,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,    -1,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,    -1,   384,    -1,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,    -1,    -1,   397,
      -1,    -1,    -1,   401,   402,   403,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,   417,
     418,   419,   420,   421,   422,    -1,   424,    -1,   426,   427,
      -1,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,    -1,   445,   446,    -1,
      -1,    -1,   450,   451,   452,   453,    -1,    -1,    -1,   457,
      -1,    -1,    -1,   461,    -1,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,
      -1,   479,   480,    -1,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,    -1,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,    -1,    -1,   513,   514,   515,   516,    -1,
     518,   519,   520,    -1,   522,   523,   524,   525,    -1,    -1,
      -1,    -1,    -1,   531,   532,    -1,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,    -1,   547,
     548,    -1,    -1,   551,    -1,    -1,   554,    -1,   556,    -1,
     558,   559,    -1,    -1,   562,   563,   564,   565,   566,    -1,
      -1,   569,   570,    -1,   572,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,    -1,   583,   584,    -1,   586,   587,
     588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,    -1,
      -1,    -1,    -1,   601,   602,    -1,    -1,   605,   606,    -1,
      -1,   609,   610,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,   100,   101,
     102,    -1,   104,   105,   106,   107,   108,   109,    -1,    -1,
      -1,    -1,   114,   115,   116,    -1,    -1,   119,   120,    -1,
     122,    -1,    -1,    -1,   126,    -1,   128,   129,   130,   131,
      -1,    -1,    -1,   135,    -1,    -1,   138,   139,   140,    -1,
      -1,    -1,   144,    -1,   146,   147,    -1,   149,   150,   151,
      -1,    -1,   154,   155,    -1,   157,   158,   159,   160,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,   170,    -1,
     172,   173,   174,   175,    -1,   177,    -1,    -1,    -1,   181,
      -1,   183,    -1,   185,    -1,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,    -1,   197,   198,    -1,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,   208,   209,   210,   211,
     212,    -1,   214,   215,   216,    -1,    -1,   219,    -1,    -1,
      -1,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
     232,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,
     242,   243,    -1,    -1,   246,    -1,   248,   249,   250,    -1,
      -1,    -1,    -1,    -1,   256,   257,    -1,   259,    -1,   261,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,    -1,    -1,   301,
     302,   303,   304,   305,   306,    -1,    -1,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,    -1,    -1,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,    -1,   348,   349,   350,    -1,
     352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,    -1,   384,    -1,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,    -1,   397,    -1,    -1,    -1,   401,
     402,   403,   404,   405,    -1,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,   417,   418,   419,   420,   421,
     422,    -1,   424,    -1,   426,   427,    -1,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,    -1,   445,   446,    -1,    -1,    -1,   450,   451,
     452,   453,    -1,    -1,    -1,   457,    -1,    -1,    -1,   461,
      -1,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,    -1,    -1,    -1,    -1,    -1,    -1,   479,   480,    -1,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,    -1,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
      -1,   513,   514,   515,   516,    -1,   518,   519,   520,    -1,
     522,   523,   524,   525,    -1,    -1,    -1,    -1,    -1,   531,
     532,    -1,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,    -1,   547,   548,    -1,    -1,   551,
      -1,    -1,   554,    -1,   556,    -1,   558,   559,    -1,    -1,
     562,   563,   564,   565,   566,    -1,    -1,   569,   570,    -1,
     572,   573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,
      -1,   583,   584,    -1,   586,   587,   588,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
     602,    -1,    -1,   605,   606,    -1,    -1,   609,   610,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    35,
      36,    37,    38,    39,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    52,    53,    54,    55,
      -1,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    -1,   100,   101,   102,    -1,   104,   105,
     106,   107,   108,   109,    -1,    -1,    -1,    -1,   114,   115,
     116,    -1,    -1,   119,   120,    -1,   122,    -1,    -1,    -1,
     126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,   135,
      -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,    -1,
     146,   147,    -1,   149,   150,   151,    -1,    -1,   154,   155,
      -1,   157,   158,   159,   160,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
      -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,   185,
      -1,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
      -1,   197,   198,    -1,   200,   201,    -1,   203,   204,    -1,
      -1,    -1,   208,   209,   210,   211,   212,    -1,   214,   215,
     216,    -1,    -1,   219,    -1,    -1,    -1,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,   232,    -1,   234,   235,
      -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,    -1,
     246,    -1,   248,   249,   250,    -1,    -1,    -1,    -1,    -1,
     256,   257,    -1,   259,    -1,   261,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,    -1,    -1,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,   305,
     306,    -1,    -1,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,    -1,    -1,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,    -1,   384,    -1,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,    -1,
      -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,   405,
      -1,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,    -1,   424,    -1,
     426,   427,    -1,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,    -1,   445,
     446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,    -1,
      -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,    -1,    -1,    -1,
      -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,    -1,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,    -1,    -1,   513,   514,   515,
     516,    -1,   518,   519,   520,    -1,   522,   523,   524,   525,
      -1,    -1,    -1,    -1,    -1,   531,   532,    -1,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
      -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,    -1,
     556,    -1,   558,   559,    -1,    -1,   562,   563,   564,   565,
     566,    -1,    -1,   569,   570,    -1,   572,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,    -1,
     586,   587,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,
     596,    -1,    -1,    -1,    -1,   601,   602,    -1,    -1,   605,
     606,    -1,    -1,   609,   610,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    35,    36,    37,    38,    39,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    52,    53,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
     100,   101,   102,    -1,   104,   105,   106,   107,   108,   109,
      -1,    -1,    -1,    -1,   114,   115,   116,    -1,    -1,   119,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
     170,    -1,   172,   173,   174,   175,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,    -1,   197,   198,    -1,
     200,   201,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,   248,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,    -1,
      -1,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
     420,   421,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,   518,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,   562,   563,   564,   565,   566,    -1,    -1,   569,
     570,    -1,   572,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
      -1,   591,    -1,    -1,    -1,   595,   596,    -1,    -1,    -1,
      -1,   601,   602,    -1,    -1,   605,   606,    -1,    -1,   609,
     610,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,   100,   101,   102,    -1,
     104,   105,   106,   107,   108,   109,    -1,    -1,    -1,    -1,
     114,   115,   116,    -1,    -1,   119,   120,    -1,   122,    -1,
      -1,    -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,
      -1,   135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,
     144,    -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,
     154,   155,    -1,   157,   158,   159,   160,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,
      -1,   185,    -1,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,    -1,   197,   198,    -1,   200,   201,    -1,   203,
     204,    -1,    -1,    -1,   208,   209,   210,   211,   212,    -1,
     214,   215,   216,    -1,    -1,   219,    -1,    -1,    -1,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,   232,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,
      -1,    -1,   246,    -1,   248,   249,   250,    -1,    -1,    -1,
      -1,    -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,    -1,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,
     304,   305,   306,    -1,    -1,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,    -1,    -1,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,    -1,   348,   349,   350,    -1,   352,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,    -1,
     384,    -1,   386,   387,   388,   389,   390,    -1,   392,   393,
     394,    -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,
     404,   405,    -1,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,   417,   418,   419,   420,   421,   422,    -1,
     424,    -1,   426,   427,    -1,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
      -1,   445,   446,    -1,    -1,    -1,   450,   451,   452,   453,
      -1,    -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,    -1,
      -1,    -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,    -1,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,    -1,    -1,   513,
     514,   515,   516,    -1,   518,   519,   520,    -1,   522,   523,
     524,   525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,
     554,    -1,   556,    -1,   558,   559,    -1,    -1,   562,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,
     584,    -1,   586,   587,   588,    -1,    -1,   591,    -1,    -1,
      -1,   595,   596,    -1,    -1,    -1,    -1,   601,   602,    -1,
      -1,   605,   606,    -1,    -1,   609,   610,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    35,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,    -1,
      -1,   109,    -1,    -1,    -1,    -1,   114,   115,   116,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,   126,    -1,
     128,   129,   130,   131,    -1,    -1,    -1,   135,    -1,    -1,
     138,   139,   140,    -1,    -1,    -1,   144,    -1,   146,   147,
      -1,   149,   150,   151,    -1,    -1,   154,   155,    -1,   157,
     158,   159,   160,   161,    -1,    -1,   164,   165,   166,    -1,
     168,   169,   170,    -1,   172,   173,   174,   175,    -1,   177,
      -1,    -1,    -1,   181,    -1,   183,    -1,   185,    -1,   187,
     188,   189,   190,   191,    -1,   193,    -1,    -1,    -1,   197,
     198,    -1,   200,   201,    -1,   203,   204,    -1,    -1,    -1,
     208,   209,   210,   211,    -1,    -1,   214,   215,   216,    -1,
      -1,   219,    -1,    -1,    -1,    -1,   224,   225,    -1,    -1,
      -1,   229,    -1,   231,   232,    -1,   234,   235,    -1,    -1,
      -1,   239,    -1,    -1,   242,   243,    -1,    -1,   246,    -1,
      -1,   249,   250,    -1,    -1,    -1,    -1,    -1,   256,   257,
      -1,   259,    -1,   261,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,    -1,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,    -1,   286,   287,
     288,    -1,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,    -1,    -1,   301,   302,   303,   304,   305,   306,    -1,
      -1,   309,   310,    -1,   312,    -1,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,    -1,    -1,   331,   332,   333,   334,    -1,    -1,    -1,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,    -1,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,   380,   381,   382,    -1,   384,    -1,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,    -1,    -1,   397,
      -1,    -1,    -1,   401,   402,   403,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,   417,
     418,   419,    -1,    -1,   422,    -1,   424,    -1,   426,   427,
      -1,   429,   430,    -1,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,    -1,   445,   446,    -1,
      -1,    -1,   450,   451,   452,   453,    -1,    -1,    -1,   457,
      -1,    -1,    -1,   461,    -1,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,
      -1,   479,   480,    -1,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,    -1,    -1,   493,   494,    -1,   496,   497,
     498,   499,   500,   501,    -1,    -1,   504,   505,   506,   507,
      -1,   509,   510,    -1,    -1,   513,   514,   515,   516,    -1,
     518,   519,   520,    -1,   522,   523,   524,   525,    -1,    -1,
      -1,    -1,    -1,   531,   532,    -1,    -1,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,    -1,   547,
     548,    -1,    -1,   551,    -1,    -1,   554,    -1,   556,    -1,
     558,   559,    -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,
      -1,   569,    -1,    -1,    -1,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,    -1,   583,   584,    -1,   586,   587,
     588,    -1,    -1,   591,    -1,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,   609,   610,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,
      -1,    -1,   109,    -1,    -1,    -1,    -1,   114,   115,    -1,
      -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,   126,
      -1,   128,   129,   130,   131,    -1,    -1,    -1,   135,    -1,
      -1,   138,   139,   140,    -1,    -1,    -1,   144,    -1,   146,
     147,    -1,   149,   150,   151,    -1,    -1,   154,   155,    -1,
     157,   158,   159,   160,   161,    -1,    -1,   164,   165,   166,
      -1,    -1,   169,   170,    -1,   172,   173,   174,    -1,    -1,
     177,    -1,    -1,    -1,   181,    -1,   183,   184,   185,    -1,
     187,   188,   189,   190,   191,    -1,   193,    -1,    -1,    -1,
     197,   198,    -1,   200,    -1,    -1,   203,   204,    -1,    -1,
      -1,   208,   209,   210,   211,    -1,    -1,   214,   215,   216,
     217,    -1,   219,    -1,    -1,    -1,    -1,   224,   225,    -1,
      -1,    -1,   229,    -1,   231,   232,    -1,   234,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,   246,
      -1,    -1,   249,   250,    -1,   252,    -1,    -1,    -1,   256,
     257,    -1,   259,    -1,   261,    -1,   263,   264,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,    -1,   286,
     287,   288,    -1,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,    -1,    -1,   301,   302,   303,   304,   305,   306,
      -1,    -1,   309,   310,    -1,   312,    -1,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,    -1,
     327,   328,    -1,    -1,   331,   332,   333,   334,    -1,    -1,
      -1,   338,   339,    -1,    -1,    -1,    -1,   344,   345,   346,
      -1,   348,   349,   350,    -1,   352,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,   380,   381,   382,    -1,   384,    -1,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,    -1,    -1,
     397,    -1,    -1,    -1,   401,   402,   403,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,    -1,
     417,   418,   419,    -1,    -1,   422,    -1,   424,    -1,   426,
     427,    -1,   429,   430,    -1,    -1,    -1,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,    -1,   445,   446,
     447,    -1,    -1,   450,   451,   452,   453,    -1,    -1,    -1,
     457,    -1,    -1,    -1,   461,    -1,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,    -1,    -1,    -1,
      -1,    -1,   479,   480,    -1,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,    -1,    -1,   493,   494,    -1,   496,
     497,   498,   499,   500,   501,    -1,    -1,   504,   505,   506,
     507,    -1,   509,   510,    -1,    -1,   513,   514,   515,   516,
      -1,    -1,   519,   520,    -1,   522,   523,   524,   525,    -1,
      -1,    -1,    -1,    -1,   531,   532,    -1,    -1,    -1,   536,
     537,   538,   539,    -1,   541,   542,    -1,   544,   545,    -1,
     547,   548,    -1,    -1,   551,    -1,    -1,   554,    -1,   556,
      -1,   558,   559,    -1,    -1,    -1,    -1,    -1,    -1,   566,
      -1,    -1,   569,    -1,    -1,    -1,   573,   574,   575,   576,
      -1,    -1,    -1,    -1,    -1,    -1,   583,   584,    -1,   586,
     587,   588,    -1,    -1,   591,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,   610,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,    -1,
      -1,   109,    -1,    -1,    -1,    -1,   114,   115,    -1,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,   126,    -1,
     128,   129,   130,   131,    -1,    -1,    -1,   135,    -1,    -1,
     138,   139,   140,    -1,    -1,    -1,   144,    -1,   146,   147,
      -1,   149,   150,   151,    -1,    -1,   154,   155,    -1,   157,
     158,   159,   160,   161,    -1,    -1,   164,   165,   166,    -1,
      -1,   169,   170,    -1,   172,   173,   174,    -1,    -1,   177,
      -1,    -1,    -1,   181,    -1,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,    -1,   193,    -1,    -1,    -1,   197,
     198,    -1,   200,    -1,    -1,   203,   204,    -1,    -1,    -1,
     208,   209,   210,   211,    -1,    -1,   214,   215,   216,   217,
      -1,   219,    -1,    -1,    -1,    -1,   224,   225,    -1,    -1,
      -1,   229,    -1,   231,   232,    -1,   234,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,   246,    -1,
      -1,   249,   250,    -1,    -1,    -1,    -1,    -1,   256,   257,
      -1,   259,    -1,   261,    -1,   263,   264,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,    -1,   286,   287,
     288,    -1,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,    -1,    -1,   301,   302,   303,   304,   305,   306,    -1,
      -1,   309,   310,    -1,   312,    -1,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,    -1,   327,
     328,    -1,    -1,   331,   332,   333,   334,    -1,    -1,    -1,
     338,   339,    -1,    -1,    -1,    -1,   344,   345,   346,    -1,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,   380,   381,   382,    -1,   384,    -1,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,    -1,    -1,   397,
      -1,    -1,    -1,   401,   402,   403,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,   417,
     418,   419,    -1,    -1,   422,    -1,   424,    -1,   426,   427,
      -1,   429,   430,    -1,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,    -1,   445,   446,    -1,
      -1,    -1,   450,   451,   452,   453,    -1,    -1,    -1,   457,
      -1,    -1,    -1,   461,    -1,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,
      -1,   479,   480,    -1,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,    -1,    -1,   493,   494,    -1,   496,   497,
     498,   499,   500,   501,    -1,    -1,   504,   505,   506,   507,
      -1,   509,   510,    -1,    -1,   513,   514,   515,   516,    -1,
      -1,   519,   520,    -1,   522,   523,   524,   525,    -1,    -1,
      -1,    -1,    -1,   531,   532,    -1,    -1,    -1,   536,   537,
     538,   539,    -1,   541,   542,    -1,   544,   545,    -1,   547,
     548,    -1,    -1,   551,    -1,    -1,   554,    -1,   556,    -1,
     558,   559,    -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,
      -1,   569,    -1,    -1,    -1,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,    -1,   583,   584,    -1,   586,   587,
     588,    -1,    -1,   591,    -1,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,   610,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,
      -1,   100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,
     109,    -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,
      -1,   120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,
     129,   130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,
     139,   140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,
     149,   150,   151,    -1,    -1,   154,   155,    -1,   157,   158,
     159,   160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,
     169,   170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,
      -1,    -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,
     189,   190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,
      -1,   200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,
     209,   210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,    -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,
     229,    -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,
     239,    -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,
     249,   250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,
     259,    -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,    -1,   286,   287,   288,
      -1,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
      -1,    -1,   301,   302,   303,   304,   305,   306,    -1,    -1,
     309,   310,    -1,   312,    -1,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,    -1,   327,   328,
      -1,    -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,
     339,    -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,
     349,   350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,   380,   381,   382,    -1,   384,    -1,   386,   387,   388,
     389,   390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,
      -1,    -1,   401,   402,   403,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,   417,   418,
     419,    -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,
     429,   430,    -1,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,    -1,   445,   446,   447,    -1,
      -1,   450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,
      -1,    -1,   461,    -1,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,
     479,   480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,    -1,    -1,   493,   494,    -1,   496,   497,   498,
     499,   500,   501,    -1,    -1,   504,   505,   506,   507,    -1,
     509,   510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,
     519,   520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,
      -1,    -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,
     539,    -1,   541,   542,    -1,   544,   545,    -1,   547,   548,
      -1,    -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,
     559,    -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,
     569,    -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,
      -1,    -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,
      -1,    -1,   591,    -1,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,   603,    -1,    -1,    17,    -1,    -1,
      20,   610,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
      -1,   591,    -1,    -1,    -1,    -1,     5,    -1,     7,     8,
       9,    10,    11,   603,    -1,    -1,    -1,    -1,    17,   609,
     610,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,
      -1,   100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,
     109,    -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,
      -1,   120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,
     129,   130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,
     139,   140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,
     149,   150,   151,    -1,    -1,   154,   155,    -1,   157,   158,
     159,   160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,
     169,   170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,
      -1,    -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,
     189,   190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,
      -1,   200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,
     209,   210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,    -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,
     229,    -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,
     239,    -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,
     249,   250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,
     259,    -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,    -1,   286,   287,   288,
      -1,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
      -1,    -1,   301,   302,   303,   304,   305,   306,    -1,    -1,
     309,   310,    -1,   312,    -1,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,    -1,   327,   328,
      -1,    -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,
     339,    -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,
     349,   350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,   380,   381,   382,    -1,   384,    -1,   386,   387,   388,
     389,   390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,
      -1,    -1,   401,   402,   403,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,    -1,   417,   418,
     419,    -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,
     429,   430,    -1,    -1,    -1,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,    -1,   445,   446,    -1,    -1,
      -1,   450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,
      -1,    -1,   461,    -1,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,
     479,   480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,    -1,    -1,   493,   494,    -1,   496,   497,   498,
     499,   500,   501,    -1,    -1,   504,   505,   506,   507,    -1,
     509,   510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,
     519,   520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,
      -1,    -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,
     539,    -1,   541,   542,    -1,   544,   545,    -1,   547,   548,
      -1,    -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,
     559,    -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,
     569,    -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,
      -1,    -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,
      -1,    -1,   591,    -1,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,   602,    -1,    -1,    -1,    17,    -1,    -1,
      20,   610,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,   227,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
      -1,   591,    -1,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
     610,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,   100,
      -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,    -1,
      -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,   120,
      -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,   130,
     131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,   140,
      -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,   150,
     151,    -1,    -1,   154,   155,    -1,   157,   158,   159,   160,
     161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,   170,
      -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,
     181,    -1,   183,    -1,   185,    -1,   187,   188,   189,   190,
     191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,   200,
      -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,   210,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,    -1,
      -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,    -1,
     231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,
      -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,   250,
      -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,    -1,
     261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,    -1,   286,   287,   288,    -1,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,    -1,
     301,   302,   303,   304,   305,   306,    -1,    -1,   309,   310,
      -1,   312,    -1,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,    -1,   327,   328,    -1,    -1,
     331,   332,   333,   334,    -1,    -1,    -1,   338,   339,    -1,
      -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,   350,
      -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,   380,
     381,   382,    -1,   384,    -1,   386,   387,   388,   389,   390,
      -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,    -1,
     401,   402,   403,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,   417,   418,   419,    -1,
      -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,   430,
      -1,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,   450,
     451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,    -1,
     461,    -1,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,   480,
      -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
      -1,    -1,   493,   494,    -1,   496,   497,   498,   499,   500,
     501,    -1,    -1,   504,   505,   506,   507,    -1,   509,   510,
      -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,   520,
      -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,    -1,
     531,   532,    -1,    -1,    -1,   536,   537,   538,   539,    -1,
     541,   542,    -1,   544,   545,    -1,   547,   548,    -1,    -1,
     551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,    -1,
      -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,    -1,
      -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,
      -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,    -1,
     591,    -1,    -1,    -1,    -1,     5,   597,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,   610,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
      -1,   591,    -1,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,   602,    -1,    -1,    -1,    17,    -1,    -1,    20,
     610,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,   100,
      -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,    -1,
      -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,   120,
      -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,   130,
     131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,   140,
      -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,   150,
     151,    -1,    -1,   154,   155,    -1,   157,   158,   159,   160,
     161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,   170,
      -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,
     181,    -1,   183,    -1,   185,    -1,   187,   188,   189,   190,
     191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,   200,
      -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,   210,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,    -1,
      -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,    -1,
     231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,
      -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,   250,
      -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,    -1,
     261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,    -1,   286,   287,   288,    -1,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,    -1,
     301,   302,   303,   304,   305,   306,    -1,    -1,   309,   310,
      -1,   312,    -1,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,    -1,   327,   328,    -1,    -1,
     331,   332,   333,   334,    -1,    -1,    -1,   338,   339,    -1,
      -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,   350,
      -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,   380,
     381,   382,    -1,   384,    -1,   386,   387,   388,   389,   390,
      -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,    -1,
     401,   402,   403,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,   417,   418,   419,    -1,
      -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,   430,
      -1,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,   450,
     451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,    -1,
     461,    -1,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,   480,
      -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
      -1,    -1,   493,   494,    -1,   496,   497,   498,   499,   500,
     501,    -1,    -1,   504,   505,   506,   507,    -1,   509,   510,
      -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,   520,
      -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,    -1,
     531,   532,    -1,    -1,    -1,   536,   537,   538,   539,    -1,
     541,   542,    -1,   544,   545,    -1,   547,   548,    -1,    -1,
     551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,    -1,
      -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,    -1,
      -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,
      -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,    -1,
     591,    -1,    -1,    -1,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,   609,   610,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
      -1,   591,    -1,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
     610,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,   100,
      -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,    -1,
      -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,   120,
      -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,   130,
     131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,   140,
      -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,   150,
     151,    -1,    -1,   154,   155,    -1,   157,   158,   159,   160,
     161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,   170,
      -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,
     181,    -1,   183,    -1,   185,    -1,   187,   188,   189,   190,
     191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,   200,
      -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,   210,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,    -1,
      -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,    -1,
     231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,
      -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,   250,
      -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,    -1,
     261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,    -1,   286,   287,   288,    -1,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,    -1,
     301,   302,   303,   304,   305,   306,    -1,    -1,   309,   310,
      -1,   312,    -1,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,    -1,   327,   328,    -1,    -1,
     331,   332,   333,   334,    -1,    -1,    -1,   338,   339,    -1,
      -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,   350,
      -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,   380,
     381,   382,    -1,   384,    -1,   386,   387,   388,   389,   390,
      -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,    -1,
     401,   402,   403,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,    -1,   417,   418,   419,    -1,
      -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,   430,
      -1,    -1,    -1,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,   450,
     451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,    -1,
     461,    -1,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,   480,
      -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
      -1,    -1,   493,   494,    -1,   496,   497,   498,   499,   500,
     501,    -1,    -1,   504,   505,   506,   507,    -1,   509,   510,
      -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,   520,
      -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,    -1,
     531,   532,    -1,    -1,    -1,   536,   537,   538,   539,    -1,
     541,   542,    -1,   544,   545,    -1,   547,   548,    -1,    -1,
     551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,    -1,
      -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,    -1,
      -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,
      -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,    -1,
     591,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,   610,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    -1,    -1,   100,    -1,
      -1,    -1,   104,   105,   106,    -1,    -1,   109,    -1,    -1,
      -1,    -1,   114,   115,    -1,    -1,    -1,    -1,   120,    -1,
     122,    -1,    -1,    -1,   126,    -1,   128,   129,   130,   131,
      -1,    -1,    -1,   135,    -1,    -1,   138,   139,   140,    -1,
      -1,    -1,   144,    -1,   146,   147,    -1,   149,   150,   151,
      -1,    -1,   154,   155,    -1,   157,   158,   159,   160,   161,
      -1,    -1,   164,   165,   166,    -1,    -1,   169,   170,    -1,
     172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,   181,
      -1,   183,    -1,   185,    -1,   187,   188,   189,   190,   191,
      -1,   193,    -1,    -1,    -1,   197,   198,    -1,   200,    -1,
      -1,   203,   204,    -1,    -1,    -1,   208,   209,   210,   211,
      -1,    -1,   214,   215,   216,    -1,    -1,   219,    -1,    -1,
      -1,    -1,   224,   225,    -1,    -1,    -1,   229,    -1,   231,
     232,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,
     242,   243,    -1,    -1,   246,    -1,    -1,   249,   250,    -1,
      -1,    -1,    -1,    -1,   256,   257,    -1,   259,    -1,   261,
      -1,   263,   264,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,    -1,   286,   287,   288,    -1,   290,   291,
     292,   293,    -1,   295,   296,    -1,    -1,    -1,    -1,   301,
     302,   303,   304,   305,   306,    -1,    -1,   309,   310,    -1,
     312,    -1,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,    -1,   327,   328,    -1,    -1,   331,
     332,   333,   334,    -1,    -1,    -1,   338,   339,    -1,    -1,
      -1,    -1,   344,   345,   346,    -1,   348,   349,   350,    -1,
     352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,   380,   381,
     382,    -1,   384,    -1,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,    -1,   397,    -1,    -1,    -1,   401,
     402,   403,   404,   405,    -1,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,    -1,   417,   418,   419,    -1,    -1,
     422,    -1,   424,    -1,   426,   427,    -1,   429,   430,    -1,
      -1,    -1,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,    -1,   445,   446,    -1,    -1,    -1,   450,   451,
     452,   453,    -1,    -1,    -1,   457,    -1,    -1,    -1,   461,
      -1,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,    -1,    -1,    -1,    -1,    -1,    -1,   479,   480,    -1,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,    -1,
      -1,   493,   494,    -1,   496,   497,   498,   499,   500,   501,
      -1,    -1,   504,   505,   506,   507,    -1,   509,   510,    -1,
      -1,   513,   514,   515,   516,    -1,    -1,   519,   520,    -1,
     522,   523,   524,   525,    -1,    -1,    -1,    -1,    -1,   531,
     532,    -1,    -1,    -1,   536,   537,   538,   539,    -1,   541,
     542,    -1,   544,   545,    -1,   547,   548,    -1,    -1,   551,
      -1,    -1,   554,    -1,   556,    -1,   558,   559,    -1,    -1,
      -1,    -1,    -1,    -1,   566,    -1,    -1,   569,    -1,    -1,
      -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,
      -1,   583,   584,    -1,   586,   587,   588,    -1,    -1,   591,
      -1,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,   610,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    -1,    -1,   100,    -1,    -1,
      -1,   104,   105,   106,    -1,    -1,   109,    -1,    -1,    -1,
      -1,   114,   115,    -1,    -1,    -1,    -1,   120,    -1,   122,
      -1,    -1,    -1,   126,    -1,   128,   129,   130,   131,    -1,
      -1,    -1,   135,    -1,    -1,   138,   139,   140,    -1,    -1,
      -1,   144,    -1,   146,   147,    -1,   149,   150,   151,    -1,
      -1,   154,   155,    -1,   157,   158,   159,   160,   161,    -1,
      -1,   164,   165,   166,    -1,    -1,   169,   170,    -1,   172,
     173,   174,    -1,    -1,   177,    -1,    -1,    -1,   181,    -1,
     183,    -1,   185,    -1,   187,   188,   189,   190,   191,    -1,
     193,    -1,    -1,    -1,   197,   198,    -1,   200,    -1,    -1,
     203,   204,    -1,    -1,    -1,   208,   209,   210,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,    -1,    -1,    -1,
      -1,   224,   225,    -1,    -1,    -1,   229,    -1,   231,   232,
      -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,   242,
     243,    -1,    -1,   246,    -1,    -1,   249,   250,    -1,    -1,
      -1,    -1,    -1,   256,   257,    -1,   259,    -1,   261,    -1,
     263,   264,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,    -1,   286,   287,   288,    -1,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,    -1,    -1,   301,   302,
     303,   304,   305,   306,    -1,    -1,   309,   310,    -1,   312,
      -1,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,    -1,   327,   328,    -1,    -1,   331,   332,
     333,   334,    -1,    -1,    -1,   338,   339,    -1,    -1,    -1,
      -1,   344,   345,   346,    -1,   348,   349,   350,    -1,   352,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,    -1,   380,   381,   382,
      -1,   384,    -1,   386,   387,   388,   389,   390,    -1,   392,
     393,   394,    -1,    -1,   397,    -1,    -1,    -1,   401,   402,
     403,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,    -1,   417,   418,   419,    -1,    -1,   422,
      -1,   424,    -1,   426,   427,    -1,   429,   430,    -1,    -1,
      -1,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,    -1,   445,   446,    -1,    -1,    -1,   450,   451,   452,
     453,    -1,    -1,    -1,   457,    -1,    -1,    -1,   461,    -1,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
      -1,    -1,    -1,    -1,    -1,    -1,   479,   480,    -1,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,    -1,    -1,
     493,   494,    -1,   496,   497,   498,   499,   500,   501,    -1,
      -1,   504,   505,   506,   507,    -1,   509,   510,    -1,    -1,
     513,   514,   515,   516,    -1,    -1,   519,   520,    -1,   522,
     523,   524,   525,    -1,    -1,    -1,    -1,    -1,   531,   532,
      -1,    -1,    -1,   536,   537,   538,   539,    -1,   541,   542,
      -1,   544,   545,    -1,   547,   548,    -1,    -1,   551,    -1,
      -1,   554,    -1,   556,    -1,   558,   559,    -1,    -1,    -1,
      -1,    -1,    -1,   566,    -1,    -1,   569,    -1,    -1,    -1,
     573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,    -1,
     583,   584,    -1,   586,   587,   588,    -1,    -1,   591,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,   610,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,
     104,   105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,
     114,   115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,
      -1,    -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,
      -1,   135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,
     144,    -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,
     154,   155,    -1,   157,   158,   159,   160,   161,    -1,    -1,
     164,   165,   166,    -1,    -1,   169,   170,    -1,   172,   173,
     174,    -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,
      -1,   185,    -1,   187,   188,   189,   190,   191,    -1,   193,
      -1,    -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,
     204,    -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,
     214,   215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,
     224,   225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,
      -1,    -1,   246,    -1,    -1,   249,   250,   251,    -1,    -1,
      -1,    -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,
     264,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,    -1,   286,   287,   288,    -1,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,
     304,   305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,
     334,    -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,
     344,   345,   346,    -1,   348,   349,   350,    -1,   352,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,   380,   381,   382,    -1,
     384,    -1,   386,   387,   388,   389,   390,    -1,   392,   393,
     394,    -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,
     404,   405,    -1,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,
     424,    -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
      -1,   445,   446,    -1,    -1,    -1,   450,   451,   452,   453,
      -1,    -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,    -1,
      -1,    -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,
     494,    -1,   496,   497,   498,   499,   500,   501,    -1,    -1,
     504,   505,   506,   507,    -1,   509,   510,    -1,    -1,   513,
     514,   515,   516,    -1,   518,   519,   520,    -1,   522,   523,
     524,   525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,
      -1,    -1,   536,   537,   538,   539,    -1,   541,   542,    -1,
     544,   545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,
     554,    -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,
      -1,    -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,
     584,    -1,   586,   587,   588,    -1,    -1,   591,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,   609,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,
     106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,   115,
      -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,
     126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,   135,
      -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,    -1,
     146,   147,    -1,   149,   150,   151,    -1,    -1,   154,   155,
      -1,   157,   158,   159,   160,   161,    -1,    -1,   164,   165,
     166,    -1,    -1,   169,   170,    -1,   172,   173,   174,    -1,
      -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,   185,
      -1,   187,   188,   189,   190,   191,    -1,   193,    -1,    -1,
      -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,    -1,
      -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,   215,
     216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,   225,
      -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,   235,
      -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,    -1,
     246,    -1,    -1,   249,   250,   251,    -1,    -1,    -1,    -1,
     256,   257,    -1,   259,    -1,   261,    -1,   263,   264,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,    -1,
     286,   287,   288,    -1,   290,   291,   292,   293,    -1,   295,
     296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,   305,
     306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
      -1,   327,   328,    -1,    -1,   331,   332,   333,   334,    -1,
      -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,   345,
     346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,   380,   381,   382,    -1,   384,    -1,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,    -1,
      -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,   405,
      -1,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
      -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,    -1,
     426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,    -1,   445,
     446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,    -1,
      -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,    -1,    -1,    -1,
      -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,    -1,
     496,   497,   498,   499,   500,   501,    -1,    -1,   504,   505,
     506,   507,    -1,   509,   510,    -1,    -1,   513,   514,   515,
     516,    -1,   518,   519,   520,    -1,   522,   523,   524,   525,
      -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,    -1,
     536,   537,   538,   539,    -1,   541,   542,    -1,   544,   545,
      -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,    -1,
     556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,    -1,
     566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,    -1,
     586,   587,   588,    -1,    -1,   591,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,   609,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,    -1,
      -1,   109,    -1,    -1,    -1,    -1,   114,   115,    -1,    -1,
      -1,    -1,   120,    -1,   122,    -1,    -1,    -1,   126,    -1,
     128,   129,   130,   131,    -1,    -1,    -1,   135,    -1,    -1,
     138,   139,   140,    -1,    -1,    -1,   144,    -1,   146,   147,
      -1,   149,   150,   151,    -1,    -1,   154,   155,    -1,   157,
     158,   159,   160,   161,    -1,    -1,   164,   165,   166,    -1,
      -1,   169,   170,    -1,   172,   173,   174,    -1,    -1,   177,
      -1,    -1,    -1,   181,    -1,   183,    -1,   185,    -1,   187,
     188,   189,   190,   191,    -1,   193,    -1,    -1,    -1,   197,
     198,    -1,   200,    -1,    -1,   203,   204,    -1,    -1,    -1,
     208,   209,   210,   211,    -1,    -1,   214,   215,   216,    -1,
      -1,   219,    -1,    -1,    -1,    -1,   224,   225,    -1,    -1,
      -1,   229,    -1,   231,   232,    -1,   234,   235,    -1,    -1,
      -1,   239,    -1,    -1,   242,   243,    -1,    -1,   246,    -1,
      -1,   249,   250,   251,    -1,    -1,    -1,    -1,   256,   257,
      -1,   259,    -1,   261,    -1,   263,   264,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,    -1,   286,   287,
     288,    -1,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,    -1,    -1,   301,   302,   303,   304,   305,   306,    -1,
      -1,   309,   310,    -1,   312,    -1,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,    -1,   327,
     328,    -1,    -1,   331,   332,   333,   334,    -1,    -1,    -1,
     338,   339,    -1,    -1,    -1,    -1,   344,   345,   346,    -1,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,   380,   381,   382,    -1,   384,    -1,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,    -1,    -1,   397,
      -1,    -1,    -1,   401,   402,   403,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,    -1,   417,
     418,   419,    -1,    -1,   422,    -1,   424,    -1,   426,   427,
      -1,   429,   430,    -1,    -1,    -1,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,    -1,   445,   446,    -1,
      -1,    -1,   450,   451,   452,   453,    -1,    -1,    -1,   457,
      -1,    -1,    -1,   461,    -1,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,
      -1,   479,   480,    -1,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,    -1,    -1,   493,   494,    -1,   496,   497,
     498,   499,   500,   501,    -1,    -1,   504,   505,   506,   507,
      -1,   509,   510,    -1,    -1,   513,   514,   515,   516,    -1,
     518,   519,   520,    -1,   522,   523,   524,   525,    -1,    -1,
      -1,    -1,    -1,   531,   532,    -1,    -1,    -1,   536,   537,
     538,   539,    -1,   541,   542,    -1,   544,   545,    -1,   547,
     548,    -1,    -1,   551,    -1,    -1,   554,    -1,   556,    -1,
     558,   559,    -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,
      -1,   569,    -1,    -1,    -1,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,    -1,   583,   584,    -1,   586,   587,
     588,    -1,    -1,   591,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,   609,    22,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    -1,    74,    -1,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    -1,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,    -1,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,    -1,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,    -1,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,   171,   172,   173,   174,    -1,    -1,    -1,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,    -1,   198,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,   236,    -1,    -1,   239,
      -1,    -1,    -1,   243,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   363,   364,    -1,    -1,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,    -1,    -1,    -1,
      -1,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,    -1,    -1,   417,    -1,   419,
     420,    -1,   422,    -1,    -1,    -1,   426,    -1,    -1,   429,
     430,   431,    -1,    -1,    -1,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,    -1,   445,    -1,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,    -1,   464,    -1,   466,    -1,   468,    -1,
      -1,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,    -1,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,    -1,    -1,    -1,
      -1,   551,    -1,    -1,   554,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,   579,
      -1,    -1,    -1,   583,    -1,    -1,   586,    -1,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,   604,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,   597,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,   597,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,   597,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,   597,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,   116,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
     175,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,   201,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,   267,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,   338,   339,    -1,    -1,   342,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
     475,   476,   477,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,   540,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,   119,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,   152,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,   251,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,   456,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,   518,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,   267,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,   342,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,   540,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,   119,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,   251,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,   518,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,   119,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,   251,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,   518,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,   251,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,   518,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,   251,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,   518,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    35,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,   201,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,   518,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,   251,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,   518,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,   119,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,   251,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,   518,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,   251,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,   518,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    18,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,   518,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,   163,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,   476,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,   119,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,   119,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,   518,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,   119,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,   135,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,   161,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,   197,   198,    -1,
     200,    -1,    -1,   203,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,   225,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,   242,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,   338,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
     380,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,   415,    -1,   417,   418,   419,
      -1,    -1,   422,    -1,   424,    -1,   426,   427,    -1,   429,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,    -1,    -1,    -1,
     450,   451,   452,   453,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,    -1,    -1,   493,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,   536,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,   547,   548,    -1,
      -1,   551,    -1,    -1,   554,    -1,   556,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,   584,    -1,   586,   587,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
     115,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
     135,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,   161,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,   197,   198,    -1,   200,    -1,    -1,   203,   204,
      -1,    -1,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
     225,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,   242,   243,    -1,
      -1,   246,    -1,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,   338,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,   352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,   380,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,    -1,   417,   418,   419,    -1,    -1,   422,    -1,   424,
      -1,   426,   427,    -1,   429,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,    -1,    -1,    -1,   450,   451,   452,   453,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,    -1,    -1,   493,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,   536,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,   547,   548,    -1,    -1,   551,    -1,    -1,   554,
      -1,   556,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,    -1,   583,   584,
      -1,   586,   587,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    22,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    -1,    74,    -1,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    -1,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,    -1,    -1,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,    -1,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,   171,   172,   173,   174,    -1,    -1,    -1,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,    -1,   198,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,   236,    -1,    -1,   239,
      -1,    -1,    -1,   243,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   363,   364,    -1,    -1,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,    -1,    -1,    -1,
      -1,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,    -1,    -1,   417,    -1,   419,
     420,    -1,   422,    -1,    -1,    -1,   426,    -1,    -1,   429,
     430,   431,    -1,    -1,    -1,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,    -1,   445,    -1,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,    -1,   464,    -1,   466,    -1,   468,    -1,
      -1,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,    -1,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,    -1,    -1,    -1,
      -1,   551,    -1,    -1,   554,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,   579,
      -1,    -1,    -1,   583,    -1,    -1,   586,    -1,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    -1,    74,
      -1,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
      -1,    -1,    -1,   138,   139,   140,    -1,   142,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,    -1,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,   171,   172,   173,   174,
      -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,    -1,   198,    -1,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,   236,    -1,    -1,   239,    -1,    -1,    -1,   243,    -1,
      -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,    -1,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,   364,
      -1,    -1,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,    -1,    -1,    -1,    -1,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
      -1,    -1,   417,    -1,   419,   420,    -1,   422,    -1,    -1,
      -1,   426,    -1,    -1,   429,   430,   431,    -1,    -1,    -1,
     435,   436,   437,   438,   439,   440,    -1,   442,   443,    -1,
     445,    -1,    -1,    -1,    -1,   450,   451,   452,    -1,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,    -1,   464,
      -1,   466,    -1,   468,    -1,    -1,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,    -1,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,    -1,    -1,    -1,    -1,   551,    -1,    -1,   554,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,   577,    -1,   579,    -1,    -1,    -1,   583,    -1,
      -1,   586,    -1,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    22,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    -1,    74,    -1,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    -1,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,    -1,    -1,    -1,   138,   139,
     140,    -1,   142,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,    -1,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,   171,   172,   173,   174,    -1,    -1,    -1,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,    -1,   198,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,   236,    -1,    -1,   239,
      -1,    -1,    -1,   243,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   363,   364,    -1,    -1,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,    -1,    -1,    -1,
      -1,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,    -1,    -1,   417,    -1,   419,
     420,    -1,   422,    -1,    -1,    -1,   426,    -1,    -1,   429,
     430,   431,    -1,    -1,    -1,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,    -1,   445,    -1,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,    -1,   464,    -1,   466,    -1,   468,    -1,
      -1,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,    -1,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,    -1,    -1,    -1,
      -1,   551,    -1,    -1,   554,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,   577,    -1,   579,
      -1,    -1,    -1,   583,    -1,    -1,   586,    -1,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    -1,    74,
      -1,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
      -1,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,    -1,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,   171,   172,   173,   174,
      -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,    -1,   198,    -1,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,   236,    -1,    -1,   239,    -1,    -1,    -1,   243,    -1,
      -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,    -1,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,   364,
      -1,    -1,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,    -1,    -1,    -1,    -1,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
      -1,    -1,   417,    -1,   419,   420,    -1,   422,    -1,    -1,
      -1,   426,    -1,    -1,   429,   430,   431,    -1,    -1,    -1,
     435,   436,   437,   438,   439,   440,    -1,   442,   443,    -1,
     445,    -1,    -1,    -1,    -1,   450,   451,   452,    -1,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,    -1,   464,
      -1,   466,    -1,   468,    -1,    -1,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,    -1,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,    -1,    -1,    -1,    -1,   551,    -1,    -1,   554,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,   579,    -1,    -1,    -1,   583,    -1,
      -1,   586,    -1,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    22,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    -1,    74,    -1,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    -1,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,    -1,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,    -1,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,   171,   172,   173,   174,    -1,    -1,    -1,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,    -1,   198,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,   236,    -1,    -1,   239,
      -1,    -1,    -1,   243,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   363,   364,    -1,    -1,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,    -1,    -1,    -1,
      -1,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,    -1,    -1,   417,    -1,   419,
     420,    -1,   422,    -1,    -1,    -1,   426,    -1,    -1,   429,
     430,   431,    -1,    -1,    -1,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,    -1,   445,    -1,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,    -1,   464,    -1,   466,    -1,   468,    -1,
      -1,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,    -1,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,    -1,    -1,    -1,
      -1,   551,    -1,    -1,   554,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,   579,
      -1,    -1,    -1,   583,    -1,    -1,   586,    -1,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    -1,    74,
      -1,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
      -1,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,    -1,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,   171,   172,   173,   174,
      -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,    -1,   198,    -1,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,   236,    -1,    -1,   239,    -1,    -1,    -1,   243,    -1,
      -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,    -1,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,   364,
      -1,    -1,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,    -1,    -1,    -1,    -1,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
      -1,    -1,   417,    -1,   419,   420,    -1,   422,    -1,    -1,
      -1,   426,    -1,    -1,   429,   430,   431,    -1,    -1,    -1,
     435,   436,   437,   438,   439,   440,    -1,   442,   443,    -1,
     445,    -1,    -1,    -1,    -1,   450,   451,   452,    -1,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,    -1,   464,
      -1,   466,    -1,   468,    -1,    -1,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,    -1,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,    -1,    -1,    -1,    -1,   551,    -1,    -1,   554,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,   579,    -1,    -1,    -1,   583,    -1,
      -1,   586,    -1,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    22,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    -1,    74,    -1,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    -1,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,    -1,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,   146,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,    -1,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,   171,   172,   173,   174,    -1,    -1,    -1,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,    -1,   198,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,   236,    -1,    -1,   239,
      -1,    -1,    -1,   243,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   363,   364,    -1,    -1,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,    -1,    -1,    -1,
      -1,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,    -1,    -1,   417,    -1,   419,
     420,    -1,   422,    -1,    -1,    -1,   426,    -1,    -1,   429,
     430,   431,    -1,    -1,    -1,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,    -1,   445,    -1,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,    -1,   464,    -1,   466,    -1,   468,    -1,
      -1,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,    -1,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,    -1,    -1,    -1,
      -1,   551,    -1,    -1,   554,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,   579,
      -1,    -1,    -1,   583,    -1,    -1,   586,    -1,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    -1,    74,
      -1,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
      -1,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,   146,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,    -1,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,   171,   172,   173,   174,
      -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,    -1,   198,    -1,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,   236,    -1,    -1,   239,    -1,    -1,    -1,   243,    -1,
      -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,    -1,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,   364,
      -1,    -1,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,    -1,    -1,    -1,    -1,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
      -1,    -1,   417,    -1,   419,   420,    -1,   422,    -1,    -1,
      -1,   426,    -1,    -1,   429,   430,   431,    -1,    -1,    -1,
     435,   436,   437,   438,   439,   440,    -1,   442,   443,    -1,
     445,    -1,    -1,    -1,    -1,   450,   451,   452,    -1,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,    -1,   464,
      -1,   466,    -1,   468,    -1,    -1,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,    -1,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,    -1,    -1,    -1,    -1,   551,    -1,    -1,   554,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,   579,    -1,    -1,    -1,   583,    -1,
      -1,   586,    -1,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    22,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    -1,    74,    -1,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    -1,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,    -1,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,    -1,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,    -1,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,   171,   172,   173,   174,    -1,    -1,    -1,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,    -1,   198,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,   236,    -1,    -1,   239,
      -1,    -1,    -1,   243,    -1,    -1,   246,   247,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
     350,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   363,   364,    -1,    -1,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,    -1,    -1,    -1,
      -1,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,    -1,    -1,   417,    -1,   419,
     420,    -1,   422,    -1,    -1,    -1,   426,    -1,    -1,   429,
     430,   431,    -1,    -1,    -1,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,    -1,   445,    -1,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,    -1,   464,    -1,   466,    -1,   468,    -1,
      -1,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,    -1,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,    -1,    -1,    -1,
      -1,   551,    -1,    -1,   554,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,   579,
      -1,    -1,    -1,   583,    -1,    -1,   586,    -1,   588,    -1,
       5,   591,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    -1,    74,
      -1,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,    -1,    -1,   109,    -1,    -1,    -1,    -1,   114,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,   126,    -1,   128,   129,   130,   131,    -1,    -1,    -1,
      -1,    -1,    -1,   138,   139,   140,    -1,    -1,    -1,   144,
      -1,    -1,   147,    -1,   149,   150,   151,    -1,    -1,   154,
     155,    -1,   157,   158,   159,   160,    -1,    -1,    -1,   164,
     165,   166,    -1,    -1,   169,   170,   171,   172,   173,   174,
      -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,   183,    -1,
     185,    -1,   187,   188,   189,   190,   191,    -1,   193,    -1,
      -1,    -1,    -1,   198,    -1,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,    -1,    -1,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,    -1,   231,   232,    -1,   234,
     235,   236,    -1,    -1,   239,    -1,    -1,    -1,   243,    -1,
      -1,   246,   247,    -1,   249,   250,    -1,    -1,    -1,    -1,
      -1,   256,   257,    -1,   259,    -1,   261,    -1,   263,   264,
      -1,    -1,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,    -1,    -1,   301,   302,   303,   304,
     305,   306,    -1,    -1,   309,   310,    -1,   312,    -1,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,    -1,   327,   328,    -1,    -1,   331,   332,   333,   334,
      -1,    -1,    -1,    -1,   339,    -1,    -1,    -1,    -1,   344,
     345,   346,    -1,   348,   349,   350,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,   364,
      -1,    -1,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,    -1,    -1,    -1,    -1,   381,   382,    -1,   384,
      -1,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
      -1,    -1,   397,    -1,    -1,    -1,   401,   402,   403,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
      -1,    -1,   417,    -1,   419,   420,    -1,   422,    -1,    -1,
      -1,   426,    -1,    -1,   429,   430,   431,    -1,    -1,    -1,
     435,   436,   437,   438,   439,   440,    -1,   442,   443,    -1,
     445,    -1,    -1,    -1,    -1,   450,   451,   452,    -1,    -1,
      -1,    -1,   457,    -1,    -1,    -1,   461,    -1,    -1,   464,
      -1,   466,    -1,   468,    -1,    -1,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,   479,   480,    -1,   482,    -1,    -1,
     485,    -1,    -1,   488,    -1,   490,    -1,    -1,    -1,   494,
      -1,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
     505,   506,   507,    -1,   509,   510,    -1,    -1,   513,   514,
     515,   516,    -1,    -1,   519,   520,    -1,   522,   523,   524,
     525,    -1,    -1,    -1,    -1,    -1,   531,   532,    -1,    -1,
      -1,    -1,   537,   538,   539,    -1,   541,   542,    -1,   544,
     545,    -1,    -1,    -1,    -1,    -1,   551,    -1,    -1,   554,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
     575,   576,    -1,    -1,   579,    -1,    -1,    -1,   583,    -1,
      -1,   586,    -1,   588,    -1,     5,   591,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    22,    23,    24,    25,    26,    27,    -1,    -1,
      -1,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    -1,    66,    67,    -1,    69,
      70,    -1,    72,    -1,    74,    -1,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    -1,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,   126,    -1,   128,   129,
     130,   131,    -1,    -1,    -1,    -1,    -1,    -1,   138,   139,
     140,    -1,    -1,    -1,   144,    -1,    -1,   147,    -1,   149,
     150,   151,    -1,    -1,   154,   155,    -1,   157,   158,   159,
     160,    -1,    -1,    -1,   164,   165,   166,    -1,    -1,   169,
     170,    -1,   172,   173,   174,    -1,    -1,    -1,    -1,    -1,
      -1,   181,    -1,   183,    -1,   185,    -1,   187,   188,   189,
     190,   191,    -1,   193,    -1,    -1,    -1,    -1,   198,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,   208,   209,
     210,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
      -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
      -1,   231,   232,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,    -1,   243,    -1,    -1,   246,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,   256,   257,    -1,   259,
      -1,   261,    -1,   263,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,   288,    -1,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,    -1,
      -1,   301,   302,   303,   304,   305,   306,    -1,    -1,   309,
     310,    -1,   312,    -1,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,   327,   328,    -1,
      -1,   331,   332,   333,   334,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,    -1,   344,   345,   346,    -1,   348,   349,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   363,   364,    -1,    -1,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,    -1,    -1,    -1,
      -1,   381,   382,    -1,   384,    -1,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,    -1,   397,    -1,    -1,
      -1,   401,   402,   403,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,    -1,   414,    -1,    -1,   417,    -1,   419,
      -1,    -1,   422,    -1,    -1,    -1,   426,    -1,    -1,   429,
     430,    -1,    -1,    -1,    -1,   435,   436,   437,   438,   439,
     440,    -1,   442,   443,    -1,   445,    -1,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,    -1,    -1,   457,    -1,    -1,
      -1,   461,    -1,    -1,   464,    -1,   466,    -1,   468,    -1,
      -1,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,   479,
     480,    -1,   482,    -1,    -1,   485,    -1,    -1,   488,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
     500,   501,    -1,    -1,   504,   505,   506,   507,    -1,   509,
     510,    -1,    -1,   513,   514,   515,   516,    -1,    -1,   519,
     520,    -1,   522,   523,   524,   525,    -1,    -1,    -1,    -1,
      -1,   531,   532,    -1,    -1,    -1,    -1,   537,   538,   539,
      -1,   541,   542,    -1,   544,   545,    -1,    -1,    -1,    -1,
      -1,   551,    -1,    -1,   554,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,    -1,   583,    -1,    -1,   586,    -1,   588,    -1,
      -1,   591
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    13,    14,    30,    34,    48,    49,    56,    60,    61,
      75,    94,   115,   123,   124,   125,   135,   136,   148,   161,
     177,   192,   197,   200,   223,   225,   241,   258,   262,   351,
     370,   380,   391,   413,   416,   418,   421,   424,   425,   432,
     434,   441,   447,   455,   460,   462,   465,   489,   493,   536,
     548,   552,   555,   560,   587,   602,   613,   616,   617,   618,
     619,   620,   622,   627,   629,   636,   666,   694,   701,   809,
     959,   997,  1000,  1008,  1011,  1016,  1018,  1019,  1024,  1027,
    1032,  1039,  1051,  1052,  1207,  1209,  1219,  1222,  1247,  1255,
    1266,  1273,  1287,  1290,  1293,  1302,  1306,  1310,  1312,  1313,
    1363,  1380,  1386,  1388,  1395,  1397,  1423,  1429,  1430,  1431,
    1432,  1485,  1493,  1494,    11,   102,   120,   185,   213,   263,
     385,   453,   510,   993,  1454,  1455,  1456,  1459,   259,   340,
    1026,  1424,   518,  1354,   217,     5,     7,     8,     9,    10,
      11,    17,    20,    22,    23,    24,    25,    26,    27,    28,
      30,    34,    38,    41,    42,    43,    45,    47,    48,    51,
      54,    55,    57,    58,    60,    62,    63,    64,    65,    66,
      67,    69,    70,    72,    73,    74,    75,    76,    77,    78,
      79,    81,    82,    84,    85,    86,    87,    88,    90,    93,
      96,   100,   104,   105,   106,   109,   114,   115,   120,   122,
     126,   128,   129,   130,   131,   135,   138,   139,   140,   144,
     146,   147,   149,   150,   151,   154,   155,   157,   158,   159,
     160,   161,   164,   165,   166,   169,   170,   172,   173,   174,
     177,   181,   183,   185,   187,   188,   189,   190,   191,   193,
     197,   198,   200,   203,   204,   208,   209,   210,   211,   214,
     215,   216,   219,   224,   225,   229,   231,   232,   234,   235,
     239,   242,   243,   246,   249,   250,   256,   257,   259,   261,
     263,   264,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   286,   287,   288,   290,   291,
     292,   293,   295,   296,   301,   302,   303,   304,   305,   306,
     309,   310,   312,   314,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   327,   328,   331,   332,   333,   334,   338,
     339,   344,   345,   346,   348,   349,   350,   352,   362,   363,
     364,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   380,   381,   382,   384,   386,   387,   388,
     389,   390,   392,   393,   394,   397,   401,   402,   403,   404,
     405,   408,   409,   410,   411,   412,   414,   415,   417,   418,
     419,   422,   424,   426,   427,   429,   430,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   445,   446,   450,
     451,   452,   453,   457,   461,   463,   464,   465,   466,   468,
     469,   470,   471,   472,   479,   480,   482,   485,   488,   489,
     490,   493,   494,   496,   497,   498,   499,   500,   501,   504,
     505,   506,   507,   509,   510,   513,   514,   515,   516,   519,
     520,   522,   523,   524,   525,   531,   532,   536,   537,   538,
     539,   541,   542,   544,   545,   547,   548,   551,   554,   556,
     558,   559,   566,   569,   573,   574,   575,   576,   583,   584,
     586,   587,   588,   591,   660,  1353,  1357,  1361,  1362,   286,
     509,   512,  1382,  1382,   583,  1425,   102,   184,   263,   453,
     473,   510,   515,   550,   558,   642,   643,   860,   861,   862,
     937,   938,   939,  1256,  1208,   102,   159,   185,   217,   263,
     385,   453,   510,   515,   533,   558,   573,  1218,  1357,  1026,
     659,   610,  1350,  1352,  1357,   628,  1220,   374,    81,   393,
    1311,   105,   217,   588,  1318,  1382,  1026,   810,  1357,  1307,
     441,   558,  1382,  1026,  1223,  1303,   476,   691,   695,   696,
    1357,   659,  1425,  1357,  1055,  1057,  1058,   353,  1365,  1274,
     695,   489,   493,   465,   531,   465,   512,  1268,   374,  1387,
    1248,  1357,    30,    75,   146,   380,   402,   434,   489,  1487,
     447,   602,  1053,     0,   148,   614,   380,   165,   369,  1291,
    1350,  1357,   152,   970,  1357,   152,   660,   194,   660,   251,
    1354,  1357,  1359,   756,   757,   760,   783,  1357,   512,   159,
     965,  1454,  1382,  1425,  1033,   667,   610,   529,  1009,  1020,
      16,  1426,   212,   863,   194,  1359,   758,   783,   659,   358,
    1451,  1455,  1456,  1457,  1458,  1459,   512,   861,   217,   217,
     217,   213,   270,   394,  1264,  1265,     7,    20,    27,    33,
      35,    36,    37,    39,    52,    53,    58,    59,    66,    69,
      87,    91,    92,    97,    98,   101,   102,   107,   108,   109,
     114,   116,   119,   162,   167,   168,   175,   188,   190,   195,
     201,   208,   212,   223,   226,   248,   256,   267,   289,   294,
     305,   309,   311,   315,   316,   317,   318,   319,   326,   335,
     336,   337,   341,   342,   346,   365,   371,   375,   376,   378,
     392,   420,   421,   433,   439,   445,   491,   492,   498,   502,
     503,   508,   518,   522,   523,   524,   525,   534,   535,   536,
     540,   543,   558,   562,   563,   564,   565,   570,   572,   576,
     591,   595,   596,   601,   602,   605,   606,   609,   610,  1072,
    1073,  1074,  1075,  1079,  1082,  1083,  1084,  1085,  1086,  1087,
    1095,  1099,  1109,  1337,  1339,  1341,  1342,  1346,  1348,  1353,
    1357,   212,  1217,  1217,  1217,  1357,   194,  1217,  1217,   783,
    1217,   659,  1217,  1382,   623,  1294,    12,    13,    94,   123,
     136,   159,   161,   172,   192,   217,   223,   262,   386,   390,
     406,   414,   422,   447,   460,   461,   504,   533,   555,   557,
    1398,  1400,  1402,  1403,  1357,   350,    65,   398,   610,  1359,
     121,   202,   270,  1225,  1357,  1072,   227,  1314,  1381,  1382,
      46,   811,   182,    33,   286,  1279,  1308,  1357,   659,  1028,
    1382,   121,   270,  1226,  1254,   286,   393,   465,  1304,  1305,
     566,   692,   455,   697,    12,   390,  1396,  1400,   529,  1426,
    1056,    12,   132,   202,   478,   479,   480,   481,   482,   483,
     495,  1062,  1063,  1064,  1450,  1364,    23,    34,    58,    59,
      69,    90,    92,    94,   103,   150,   155,   158,   183,   185,
     191,   193,   216,   217,   238,   259,   286,   350,   373,   384,
     385,   388,   389,   409,   452,   465,   494,   512,   575,   911,
     936,  1275,  1279,  1280,  1282,  1371,   697,  1002,  1003,  1002,
    1002,   580,  1001,  1002,  1267,  1357,  1382,  1254,    35,   201,
     518,  1338,  1355,  1486,  1486,  1486,  1486,  1486,  1057,  1053,
     603,   608,  1357,  1289,  1288,   303,   516,   542,   961,   556,
      98,  1359,  1360,   963,   762,   784,  1357,   962,   352,     6,
      56,   136,   336,   397,   399,   785,  1350,   660,   484,  1460,
    1461,   964,  1017,  1034,  1035,  1036,  1037,  1350,   602,   668,
    1357,   630,  1213,  1214,  1350,  1213,    55,   338,   338,   413,
    1427,   335,   336,  1078,  1357,   761,   784,   179,     6,  1360,
    1413,  1414,   421,    10,   385,   533,   646,  1068,  1453,  1461,
    1469,  1473,  1474,  1480,   646,  1068,  1452,  1461,  1469,  1474,
    1480,  1454,  1459,   863,  1357,  1357,  1357,   182,  1257,  1261,
    1262,  1357,  1264,   602,   602,   602,  1082,   602,   602,   602,
    1072,  1112,   602,   602,   602,   602,   602,   602,   602,   602,
     602,  1071,  1071,   602,  1071,   602,   602,   602,   543,   602,
    1337,   602,   602,   602,   602,   602,   602,   602,   602,   602,
     602,   602,  1072,   602,   602,   602,  1110,  1111,  1346,  1357,
     602,   602,   602,   602,   602,   602,   602,   602,   602,  1072,
     602,  1071,   602,   602,   602,   602,   602,   602,   602,   602,
     602,   602,   602,   602,   602,   602,   602,   602,   602,  1071,
     602,  1337,   602,   602,   602,  1337,   602,   602,    35,   201,
     518,   602,  1071,  1071,  1071,   602,   602,   602,   602,   602,
    1082,  1082,  1082,  1072,  1445,  1446,  1357,  1100,  1357,    15,
      16,   355,   358,   589,  1076,  1077,   152,   153,   186,   196,
     233,   244,   271,   329,  1080,    31,   133,   230,   252,   315,
     407,   458,   459,   471,   593,   594,   595,   596,   597,   598,
     599,   600,  1078,  1082,    68,   357,   604,  1355,   602,   610,
     162,  1357,   660,  1357,   347,   784,   660,  1359,   794,  1280,
     660,  1360,  1412,  1212,  1217,   561,   624,    33,   126,   150,
     154,   187,   204,   264,   286,   384,   393,   408,   426,   465,
     466,   490,  1295,  1299,  1300,  1382,   384,  1401,   436,   436,
     510,   515,   558,   573,   353,  1405,   509,   347,  1407,    64,
     465,  1404,   103,   573,  1406,   347,   604,    18,   152,  1162,
    1163,  1389,  1357,   993,   470,    48,    79,   270,  1320,  1350,
    1383,  1384,  1025,   254,   257,   395,   812,   814,   609,   621,
    1354,   264,  1029,  1360,  1030,  1031,  1350,  1012,   227,  1214,
    1227,  1228,    48,   604,  1355,    54,    63,    72,    84,    85,
      86,   100,   304,   321,   443,   497,   514,   698,   700,  1401,
     347,   347,   441,  1428,  1427,   549,  1433,  1434,   597,  1066,
    1067,  1068,  1064,  1366,  1367,  1368,   158,   455,   252,   578,
    1286,   602,   102,   159,   185,   385,   512,   533,   573,  1286,
      12,   872,  1359,   253,  1181,  1183,   182,   230,  1281,  1283,
      67,   490,   180,   490,   509,    67,   490,    12,    41,    88,
      93,   232,   302,   364,   472,   506,  1269,  1270,  1271,   158,
     204,   490,   490,  1181,  1286,  1283,   264,   149,    70,   387,
     509,   532,   490,   569,   999,   412,   485,  1004,  1005,   998,
      82,  1214,   993,   604,   349,  1489,   505,  1490,   237,   429,
    1488,   603,  1434,  1436,  1438,  1439,   148,   615,  1051,  1292,
    1338,  1357,   119,   858,   859,   869,   870,   920,   105,  1071,
     609,   661,     6,   763,   661,   602,   104,   780,   780,   780,
       4,   960,   966,   446,   573,  1461,  1213,   230,   604,   370,
    1045,  1047,  1048,   669,   670,  1072,   214,   272,   273,   274,
     275,   276,   277,   279,   280,   281,   282,   283,   284,   285,
     287,   288,   410,   411,   631,   632,   635,   165,   394,   604,
    1010,    57,   165,   169,   180,   301,   394,  1021,  1022,  1023,
      55,   413,   162,   641,   763,   105,   780,   210,   604,  1068,
    1068,  1068,   159,   185,   185,  1461,  1350,   940,   941,   940,
     940,  1215,  1216,  1350,  1351,  1357,   604,  1259,   610,  1263,
    1072,  1072,    12,   132,  1105,  1164,  1105,  1105,  1105,   577,
    1114,  1072,  1072,  1109,  1109,  1072,  1072,  1072,   132,  1105,
    1164,   603,  1072,   603,  1072,  1072,  1072,  1072,  1346,  1445,
     110,   111,   112,   113,   114,   205,   206,   207,   208,   305,
     307,   308,   309,   316,   392,   444,   445,   576,   590,   591,
    1159,  1160,  1109,   106,   109,   522,   525,  1161,   132,  1102,
    1072,  1072,  1072,  1072,  1159,  1072,  1109,  1111,     9,   604,
     610,   132,  1105,  1072,  1072,   132,  1105,  1072,  1072,  1109,
    1109,  1109,  1072,  1072,  1072,  1072,  1109,  1075,  1072,  1072,
    1072,  1072,  1072,  1072,  1105,  1105,  1072,  1072,   132,  1105,
    1072,  1072,  1160,  1160,  1072,    44,   245,   530,  1072,  1072,
     603,  1347,  1348,  1357,  1105,  1105,  1072,  1072,   603,   604,
     603,   447,   602,  1442,  1443,  1072,   609,  1101,  1359,   610,
    1072,  1072,  1072,  1074,   168,   341,   535,   551,  1078,    12,
      17,  1074,  1081,  1075,  1075,   602,  1082,  1075,  1075,  1075,
    1075,   252,  1075,  1075,   226,  1075,   226,  1075,  1075,  1075,
    1075,  1075,    31,   230,   252,   407,  1359,  1082,  1072,  1088,
    1357,   610,  1350,   794,   339,   574,   795,   796,   150,   604,
    1213,  1210,   609,   625,   626,   264,   264,   264,   264,    48,
     264,   264,   604,  1296,   509,   602,  1415,  1360,  1415,  1415,
    1415,   185,   385,   512,  1399,  1403,  1357,   173,   332,  1357,
    1390,  1391,  1227,  1354,  1040,   259,  1319,  1163,   604,  1213,
      70,   602,   818,   819,   818,   819,   369,   821,   198,   240,
    1359,    29,   529,  1309,   604,   529,   604,   529,  1213,  1228,
    1224,  1305,   604,   152,   604,  1360,   185,   385,  1399,  1357,
      12,   132,  1441,   604,  1059,  1072,  1344,  1357,   604,   191,
     259,   348,   452,  1369,  1370,  1373,  1374,   230,  1284,  1354,
    1072,   597,   863,   660,   660,   660,  1350,   660,  1350,   264,
     320,   490,  1278,  1278,   267,   342,   540,  1184,  1185,  1339,
    1357,  1286,  1357,   660,  1286,  1360,  1281,   660,  1286,   231,
     507,   170,   180,  1272,   604,  1284,  1281,  1350,  1283,  1281,
    1281,  1286,  1286,   554,  1006,   604,  1006,   468,   447,   602,
     606,  1115,  1116,  1117,  1118,  1119,  1128,  1129,  1143,  1338,
     372,  1491,   356,  1177,  1183,  1440,   859,    68,   911,   128,
    1359,    73,    87,   242,   313,   338,   396,   484,   663,   665,
     403,   544,   781,   782,   219,   777,   778,   779,   786,   794,
     796,   102,   203,   362,   371,   377,   469,   558,   644,   645,
    1354,    24,   293,   771,   772,   773,   786,   787,   788,   794,
     796,   764,   765,   771,     6,    13,    14,    25,    26,    56,
      60,    61,    66,    73,    81,    91,   105,   122,   129,   130,
     136,   144,   150,   178,   215,   217,   224,   239,   292,   310,
     314,   351,   356,   363,   370,   371,   401,   415,   416,   417,
     418,   438,   494,   510,   513,   536,   549,   806,   865,   867,
     869,   870,   971,   975,   977,   980,   986,   987,   988,  1173,
     347,   654,   967,   120,   229,  1350,   119,  1038,  1357,  1036,
    1350,   808,  1047,   217,   240,   934,  1049,   603,   604,   152,
     152,   152,   152,   152,   152,   152,   152,   152,   152,   152,
     152,   152,   152,   152,   152,   152,   152,   604,  1214,   556,
    1022,   857,   858,    73,   333,   404,   545,   774,   775,   776,
     786,   790,   791,   792,   793,   794,   796,   584,   560,   759,
      46,   580,  1414,   185,   660,   660,   863,   660,  1357,   637,
     538,   561,   948,   347,   347,   347,   604,  1260,  1258,   610,
    1263,  1262,   182,   597,  1357,   604,   603,  1105,   603,  1106,
     603,   603,   603,  1072,   142,   577,  1113,    18,   603,   561,
     603,   603,   603,   604,   561,   604,  1096,   603,   597,   603,
     604,   604,   603,   603,   603,   603,   182,   603,   604,  1098,
     603,   604,   604,   604,   596,   604,   603,   603,   602,  1346,
    1357,  1105,   603,   603,   603,  1105,   603,   604,   603,   603,
     603,   603,   603,   603,   603,   604,   603,   230,   603,   604,
     604,   604,   604,   603,   603,   603,   604,   182,   604,  1105,
     603,   603,   603,   604,   604,   604,   603,   182,  1072,   182,
    1072,   182,  1072,   182,   603,   604,   603,   603,   603,   603,
     604,   603,  1109,  1133,  1134,  1135,   447,   602,  1054,  1437,
    1438,   549,  1447,   607,   191,   259,   452,  1372,   456,  1357,
     168,   341,   535,   551,   602,    16,  1072,  1445,   157,  1169,
    1075,  1072,  1072,  1075,   602,  1082,  1075,  1068,  1092,  1093,
    1094,   602,   610,  1357,  1211,   795,   152,   456,  1238,  1239,
    1360,    50,   428,   994,  1213,  1359,   604,  1300,  1213,  1301,
    1357,  1416,  1417,   529,   597,  1350,  1357,  1411,  1411,  1411,
     152,   173,   186,   196,   243,   244,   271,   332,   382,  1392,
    1394,   578,  1165,  1221,  1041,  1042,  1043,  1044,  1350,   218,
     270,   398,   585,  1385,  1384,   602,  1068,   116,   175,   201,
     267,   342,   540,  1188,  1191,  1192,   501,   822,   813,   602,
    1072,  1354,  1360,  1360,  1031,  1350,   165,   394,   559,  1013,
    1014,  1015,   447,   455,   565,   566,   602,   853,  1229,  1232,
     700,   109,   522,   525,   699,  1099,  1341,  1346,   192,   182,
    1411,  1411,  1411,  1435,  1067,   182,   227,  1060,  1061,  1176,
    1177,  1202,  1069,  1069,   610,  1367,   119,   531,  1357,  1376,
     322,   371,   609,   911,  1375,  1354,   182,  1285,   603,  1357,
     345,   604,  1286,   393,  1181,  1271,  1285,  1286,  1281,  1350,
    1286,  1286,   635,  1007,  1005,  1142,  1357,    95,   220,   237,
     248,   325,   433,   495,  1127,   455,   604,  1350,  1142,   604,
     180,  1492,    46,  1181,  1239,  1239,   323,  1354,   484,   484,
     484,   484,   484,   446,  1354,  1354,  1239,   604,   779,  1354,
    1354,  1354,  1354,   116,   175,   201,   267,   342,   540,  1187,
    1354,  1354,   603,   604,  1239,  1239,   604,   773,   766,   767,
     786,   787,   788,    71,    83,   370,   881,   884,   885,   932,
     934,   938,   939,   992,   992,   370,  1239,  1239,   992,  1239,
     370,   370,  1239,  1239,   529,   128,  1239,   238,   510,   179,
     370,   383,   934,   992,   238,  1239,   510,   128,  1239,  1239,
    1239,  1239,   992,   370,    46,  1239,   808,  1239,   370,   368,
      18,   152,   529,   996,   370,   370,  1239,   131,   302,  1357,
    1239,   370,  1239,   865,   604,   805,   806,   975,   602,   610,
     880,   886,  1349,  1357,    77,   442,   416,   968,  1462,  1046,
     602,  1072,   602,  1187,  1354,  1354,   116,   175,   267,   342,
     540,  1189,  1354,  1187,  1354,  1354,  1354,  1354,  1354,  1187,
    1187,  1354,  1342,  1354,  1187,   632,  1239,  1239,  1239,  1239,
     604,   776,  1359,   263,   166,   768,   769,   770,   786,   787,
     788,   789,   792,   793,   794,   796,   371,   518,  1359,  1357,
    1481,     8,    29,   754,   660,   602,   430,   252,   602,   798,
     864,   866,   867,    45,   198,   440,   953,   953,  1350,  1350,
    1350,  1216,  1357,   561,  1165,  1357,  1116,   610,  1263,   226,
    1072,   603,  1072,   521,  1072,  1072,   146,    33,    59,   106,
     109,   117,   327,   463,   525,   553,  1107,    33,   912,  1359,
    1072,   912,  1107,  1109,   603,   226,   226,  1072,  1072,  1109,
    1072,  1072,  1072,  1072,  1072,  1075,   603,   603,  1072,  1072,
    1072,  1072,  1072,  1072,  1109,   226,  1072,  1072,  1072,   603,
    1072,  1072,  1072,  1072,   182,  1072,   182,  1072,   182,  1072,
    1072,  1072,   603,  1448,  1449,  1450,  1134,  1054,   603,  1441,
     610,   610,   610,  1359,  1072,  1445,  1074,   603,   604,   603,
    1082,  1159,  1159,    16,  1072,  1445,  1169,  1072,   603,   604,
    1108,  1109,  1357,   871,  1359,   994,   626,  1297,   603,   604,
    1413,   610,   610,   529,   529,   529,  1393,  1166,  1182,  1183,
    1229,   604,  1045,  1047,   518,  1356,   585,   259,   815,   816,
     817,  1357,   827,  1075,    46,   602,   829,   819,   815,   529,
    1014,   854,  1230,   602,  1235,  1240,  1235,   603,   853,  1231,
    1343,  1344,  1347,  1357,  1233,   152,   353,  1413,   182,   182,
     182,  1052,   137,  1116,  1203,   180,   262,  1065,  1202,  1182,
    1061,    18,  1070,  1354,  1357,   597,  1357,   610,   234,   610,
    1238,   119,   912,   913,  1238,   180,  1238,   609,  1359,    33,
     119,   915,   916,  1359,  1189,  1276,   155,   575,  1185,  1185,
     342,  1277,  1165,  1281,   604,  1130,  1137,  1142,  1115,   237,
     237,   359,  1144,   237,   248,   433,  1144,  1128,  1115,  1250,
    1251,  1347,  1117,  1163,  1139,  1140,  1187,   306,  1178,   119,
     917,   919,  1359,   913,   105,   105,   120,   229,   209,   797,
    1188,   779,   645,   797,   797,   773,   604,   767,   956,  1349,
    1026,    61,   179,   383,   550,   883,   933,   956,   934,   935,
     935,  1349,  1026,  1189,  1187,  1349,  1187,    12,   976,   984,
     985,  1357,  1026,  1354,  1354,   911,  1239,  1187,   240,   984,
     240,  1349,  1349,   871,  1239,   173,   243,   338,   874,  1187,
    1189,  1189,  1349,  1026,  1174,  1175,  1347,   119,  1187,   807,
    1354,  1026,  1350,  1026,  1026,    76,    78,   119,   140,   174,
     405,   873,  1187,   976,   868,     6,   136,   988,   877,   878,
     879,   880,   881,  1357,     8,   173,   995,   406,   882,   883,
     926,   887,   610,   336,   381,    22,   160,   648,   529,   129,
     144,   650,   602,  1463,   602,   383,  1155,  1156,  1157,  1357,
     633,   634,  1187,  1354,  1188,   797,   797,   776,   352,   194,
    1239,   604,   770,   518,    18,   430,   602,   123,   223,   555,
     755,   647,  1475,   117,   228,   400,   496,   876,  1350,   252,
     370,   799,   804,   805,   877,   804,   604,   866,   638,   639,
     640,   610,  1116,  1176,  1263,  1165,  1072,   603,  1072,   521,
     602,   903,   904,   904,   602,   898,   899,   903,   904,   228,
     228,   603,   603,   603,   603,   603,  1097,  1072,  1072,   603,
     603,  1104,  1177,   604,   604,   603,   604,   603,   230,  1089,
    1090,   603,   603,   603,   603,   604,   603,   603,  1072,   603,
     180,   603,   603,   604,   603,   604,   604,   603,  1072,   603,
    1072,   603,  1072,   603,   603,   603,  1066,  1450,   603,  1444,
     610,   957,   603,  1109,  1074,   603,   604,   603,  1069,  1094,
     603,   580,  1298,  1417,   580,  1420,   597,   597,  1413,  1413,
    1413,   602,  1072,   347,  1245,  1043,  1350,  1047,   213,  1050,
    1315,   603,   604,  1069,   814,   370,   830,   831,   603,  1360,
    1062,  1236,  1237,  1347,  1241,   604,   602,  1232,   603,   603,
     604,   610,  1433,   699,   182,  1413,  1413,  1413,  1165,  1165,
     138,   360,  1198,  1199,  1204,   555,   230,  1354,  1357,   610,
    1357,   250,  1357,    12,    33,   119,   347,  1072,  1379,    68,
     918,  1072,  1360,   346,   371,   518,  1378,  1372,  1238,  1181,
    1181,  1286,   635,   549,   603,  1437,  1138,   607,   237,  1128,
    1144,  1144,   237,   347,   347,   561,   604,  1249,  1238,  1153,
    1154,  1062,  1072,  1179,  1345,   767,   978,   602,   240,   240,
     935,   956,   941,   956,   956,   136,   455,   976,   989,   973,
     604,  1188,   913,  1354,   956,   994,  1354,   990,   976,   604,
      19,   124,  1180,   811,   976,   981,   976,   602,   603,   604,
    1357,  1350,    32,    33,    38,    40,    42,    43,    59,   106,
     109,   117,   134,   151,   174,   176,   188,   189,   228,   256,
     265,   266,   268,   298,   299,   300,   317,   318,   319,   324,
     327,   343,   344,   375,   376,   400,   451,   455,   467,   519,
     522,   525,   526,   527,   528,   567,   568,   591,   888,   891,
     892,   893,   894,   895,   896,   897,  1357,   381,  1072,  1072,
     347,   654,   660,   347,    73,   655,  1357,  1464,    18,   976,
     603,   604,   603,   604,   602,  1357,   797,   770,  1354,   876,
    1482,   347,   347,   671,   672,   674,  1357,   470,  1350,   853,
     603,   213,   421,   801,  1321,   866,   602,   602,   602,  1357,
    1165,   253,  1186,  1159,  1072,   116,   267,   342,   540,    20,
      33,    47,   547,   911,   921,   922,   923,   342,   603,  1159,
    1159,   449,  1103,  1072,  1072,  1109,    42,   325,   603,   580,
    1091,  1072,  1159,  1072,  1072,  1072,  1072,   603,   603,   603,
    1136,  1442,  1357,   603,  1109,  1070,   398,   192,   423,  1418,
    1418,  1418,   119,  1072,  1243,  1244,   139,  1050,   246,  1321,
     817,   603,   198,   240,   832,   603,   604,  1066,   604,  1238,
    1242,  1243,  1240,  1234,  1232,  1343,  1357,  1413,  1182,   194,
    1170,  1356,  1356,   609,  1200,  1201,  1359,   457,   597,   398,
     419,   450,  1377,   919,  1238,   602,   602,  1376,  1072,  1441,
    1163,  1118,  1115,  1128,   237,   237,  1115,  1128,  1121,  1120,
    1122,  1251,  1165,  1244,  1151,  1152,  1066,   604,  1180,   369,
     602,   979,  1072,   956,   941,   602,   940,   940,   119,   119,
     886,  1021,   985,   918,   888,   972,  1175,   982,   984,   974,
    1301,   879,   602,   927,   903,   903,   904,   898,   379,   889,
     898,   898,   923,    59,   567,   892,   894,   923,   923,    59,
     568,   568,   571,   898,   890,   904,   923,   903,   904,    25,
      68,    73,   119,   341,   347,   383,   451,   550,   906,   907,
     908,   925,  1078,   571,   903,   923,    33,   903,   924,   903,
     903,   904,   602,   899,   905,   610,  1159,   465,  1354,   135,
     969,   603,   604,  1465,  1466,   603,  1156,   634,   644,   470,
     221,   230,   361,   675,   676,   677,   678,  1068,   442,   603,
     604,   673,  1354,   603,   603,   864,    18,   856,   954,   955,
    1357,   954,   954,  1185,   603,   603,   603,   603,   603,    33,
      20,   547,   911,    33,   912,   604,   603,   603,  1338,   603,
     603,   604,   603,   312,   242,   393,   603,   603,   603,   603,
     603,   603,   875,  1061,  1182,  1437,   603,   262,   353,    62,
     235,   334,   486,   499,   586,  1409,  1410,   580,  1419,  1419,
    1419,   603,   604,  1246,   227,   602,   820,   602,   833,  1357,
     831,   855,  1237,  1244,   603,  1436,    46,   199,  1167,  1205,
    1359,   604,   312,    74,   541,   398,  1378,   518,   518,  1238,
    1131,   347,  1124,  1128,  1128,   347,  1126,  1072,  1072,   602,
    1176,   178,   213,   560,  1146,  1147,  1150,  1141,  1345,  1188,
     830,   603,   602,   602,   954,   602,   602,   109,   522,   525,
     595,   596,  1340,  1341,   995,   906,  1026,   983,  1013,   603,
     928,  1357,   289,   929,   463,   553,   592,   900,   901,   902,
     602,   900,   900,   923,   571,   900,   602,   923,   900,   917,
    1354,   337,   910,  1340,   555,   119,   240,   908,   240,   341,
     923,   924,   923,   924,   900,   342,   900,  1357,   649,   656,
     657,  1357,   447,   602,  1467,   603,  1354,   603,   604,   673,
    1470,   648,  1476,   674,   888,   909,   800,   804,   602,   853,
     603,   604,  1180,   602,   603,   603,   912,   924,   342,  1072,
     312,   164,  1065,  1065,   518,   518,   518,    16,  1408,   192,
     290,   291,   295,   296,  1421,  1422,  1244,   240,   512,  1068,
     823,   825,   826,  1357,   565,   834,   875,  1171,  1345,  1168,
    1176,   911,   914,  1201,   603,   603,  1379,  1442,  1123,   561,
    1125,   561,  1158,  1357,  1186,   934,   934,  1147,   875,  1180,
     603,   954,   954,   603,   954,   954,  1342,  1342,   991,   227,
     603,   604,   183,   367,   464,   347,   930,   902,   958,  1338,
     958,  1071,   337,   566,   488,   651,    52,    65,   171,   212,
     236,   247,   350,   431,   658,   705,   707,   708,   709,   711,
     712,   713,   714,   715,   716,   718,   726,   727,   730,   741,
     744,   746,   747,  1353,  1358,  1362,  1055,  1053,   580,  1468,
    1483,   677,  1357,  1350,   653,   654,   430,   918,  1436,   801,
     853,   802,    73,   239,   942,   945,   948,   949,   950,   955,
     342,   580,   943,   947,   949,   952,   944,   946,   949,   951,
     603,   603,  1409,   353,  1187,  1187,  1187,  1187,  1422,   555,
    1350,   827,   500,   828,   603,   604,   230,   249,    73,   105,
     217,   292,   310,   333,   510,   850,   851,   852,  1280,   581,
     582,   604,  1172,  1180,  1072,  1182,   913,  1206,  1132,  1072,
     602,  1072,   602,   603,   604,   180,  1145,  1145,   603,   603,
     942,   603,   603,   995,   602,  1357,   123,   555,   603,   604,
     603,  1071,  1072,   147,   652,   728,   731,  1357,   182,   332,
     719,   706,  1358,  1358,  1357,   710,   617,   269,   420,   579,
     750,    30,   748,   611,   603,    51,    61,   259,   662,   909,
     180,   650,  1477,   603,  1433,  1354,  1239,   950,  1180,   603,
     366,   952,   951,  1252,  1253,  1347,  1316,  1069,  1188,   824,
     826,   836,   520,  1239,   128,   128,  1239,  1239,  1239,  1239,
     602,   845,   852,   150,  1345,   385,  1193,    70,  1322,  1437,
    1158,  1158,  1357,   194,   237,   356,  1149,  1148,   926,   942,
     943,   944,   830,    50,   338,   428,   455,   931,   931,   923,
    1338,   923,  1072,  1072,   577,   733,   737,   182,  1357,   721,
     722,  1072,   680,   704,   705,   707,   709,   711,   713,   714,
     715,   716,   718,   726,   741,   744,   746,   680,   751,   749,
     742,   745,  1436,    61,   353,    61,   127,   663,   664,  1078,
    1484,  1068,   655,   909,   803,  1187,  1353,   604,  1238,   914,
     603,   828,   602,   838,   840,   835,  1354,  1239,  1239,   267,
     342,   540,  1190,  1191,  1190,  1188,  1359,   501,   846,   847,
    1239,  1180,  1357,   145,   156,   354,   517,  1323,  1324,   255,
    1325,   603,   603,    46,    46,   602,   602,   603,     5,   119,
     341,   347,   347,   729,   738,   142,   737,   740,   227,   146,
    1072,   146,   704,   608,   554,  1072,   681,   750,   748,   353,
     353,   127,   704,  1471,   135,  1478,  1436,  1253,  1244,  1317,
     602,   839,   840,   841,   297,   837,   840,  1354,  1354,   848,
     603,   604,   871,  1194,    46,    46,   145,    46,  1324,   487,
     517,  1326,  1327,  1155,  1157,   555,   123,   577,   732,   734,
    1072,   680,   146,   717,   212,   521,   269,   608,   753,   135,
     118,   679,   682,   743,  1358,   743,   141,   656,   662,   437,
    1328,   603,   604,   297,   843,   844,  1075,   849,  1359,   847,
     602,  1338,  1338,    46,  1338,    46,    46,  1327,   603,   603,
     931,   931,   735,   734,   740,   739,    52,   720,  1357,   723,
    1072,   752,    89,   163,   687,   702,  1357,   146,   704,   608,
     439,  1479,   210,  1322,   840,   604,   842,   850,  1068,  1195,
    1196,  1197,  1338,  1338,  1338,  1072,   146,   521,   604,   680,
     146,   680,   197,   604,   683,    80,    99,   608,  1472,   704,
      46,  1325,   844,   603,  1072,   603,   604,   736,    52,   680,
    1357,   724,   420,   146,   180,  1357,   909,   180,   180,   704,
    1338,   213,  1329,  1069,  1197,   521,   142,   143,   725,   579,
     684,   119,   703,   690,   691,  1187,   685,   686,   342,   602,
    1331,   680,   680,   721,   475,   477,   688,   689,   690,   693,
    1078,  1357,  1072,  1051,   255,   437,  1330,   603,   609,  1332,
    1333,  1347,   455,  1334,   604,   704,   181,  1359,   603,   604,
    1335,  1336,  1347,   689,  1333,   604,  1238,  1336,  1068,  1244,
    1069
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
#endif
{
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, int yyrule)
#else
static void
yy_reduce_print (yyvsp, yyrule)
    YYSTYPE *yyvsp;
    int yyrule;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       		       );
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, Rule); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
#else
static void
yydestruct (yymsg, yytype, yyvaluep)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  YYUSE (yyvaluep);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void)
#else
int
yyparse ()

#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;


  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;


	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),

		    &yystacksize);

	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);

#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;


      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1657 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
              (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 3:
#line 1669 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if ((YYTHD->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 5:
#line 1694 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 61:
#line 1767 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 64:
#line 1782 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(2) - (4)].lex_str);
          }
    break;

  case 65:
#line 1792 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 66:
#line 1799 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 67:
#line 1809 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 68:
#line 1816 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 73:
#line 1831 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 74:
#line 1843 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 75:
#line 1851 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 76:
#line 1862 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            bzero((char*) &lex->mi, sizeof(lex->mi));
            /*
              resetting flags that can left from the previous CHANGE MASTER
            */
            lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_UNCHANGED;
            my_init_dynamic_array(&Lex->mi.repl_ignore_server_ids,
                                  sizeof(::server_id), 16, 16);
          }
    break;

  case 77:
#line 1874 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 80:
#line 1884 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 81:
#line 1888 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 82:
#line 1892 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 83:
#line 1896 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 84:
#line 1900 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 85:
#line 1904 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 86:
#line 1909 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 87:
#line 1913 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 88:
#line 1917 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 89:
#line 1921 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 90:
#line 1925 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 91:
#line 1929 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 92:
#line 1935 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[(3) - (3)].item_num)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning_printf(YYTHD, MYSQL_ERROR::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning_printf(YYTHD, MYSQL_ERROR::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 93:
#line 1966 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 98:
#line 1981 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 99:
#line 1987 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 100:
#line 1991 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 101:
#line 2007 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 102:
#line 2011 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
    break;

  case 103:
#line 2022 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(5) - (5)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            /*
              For CREATE TABLE, an non-existing table is not an error.
              Instruct open_tables() to just take an MDL lock if the
              table does not exist.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_IF_EXISTS;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            bzero((char*) &lex->create_info,sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[(2) - (5)].num) | (yyvsp[(4) - (5)].num);
            lex->create_info.db_type= ha_default_handlerton(thd);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
    break;

  case 104:
#line 2048 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= YYTHD->lex;
            lex->current_select= &lex->select_lex; 
            if (!lex->create_info.db_type)
            {
              lex->create_info.db_type= ha_default_handlerton(YYTHD);
              push_warning_printf(YYTHD, MYSQL_ERROR::WARN_LEVEL_WARN,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[(5) - (7)].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
    break;

  case 105:
#line 2063 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 106:
#line 2068 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 107:
#line 2074 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 108:
#line 2079 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 109:
#line 2085 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 110:
#line 2090 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 111:
#line 2095 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 112:
#line 2100 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info.options=(yyvsp[(3) - (6)].num);
          }
    break;

  case 113:
#line 2107 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
    break;

  case 114:
#line 2113 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 115:
#line 2115 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_CREATE_USER;
          }
    break;

  case 116:
#line 2119 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 117:
#line 2123 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 118:
#line 2127 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
          }
    break;

  case 119:
#line 2138 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->server_options.server_name= (yyvsp[(2) - (10)].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[(2) - (10)].lex_str).length;
            Lex->server_options.scheme= (yyvsp[(6) - (10)].lex_str).str;
          }
    break;

  case 122:
#line 2152 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->server_options.username= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 123:
#line 2156 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->server_options.host= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 124:
#line 2160 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->server_options.db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 125:
#line 2164 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->server_options.owner= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 126:
#line 2168 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->server_options.password= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 127:
#line 2172 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->server_options.socket= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 128:
#line 2176 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->server_options.port= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 129:
#line 2183 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[(1) - (4)].simple_string);
            lex->create_info.options= (yyvsp[(3) - (4)].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 130:
#line 2203 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 131:
#line 2214 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 133:
#line 2221 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 134:
#line 2227 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 135:
#line 2229 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 136:
#line 2235 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
    break;

  case 137:
#line 2241 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 138:
#line 2250 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local();
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 139:
#line 2257 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 141:
#line 2265 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 142:
#line 2271 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 144:
#line 2277 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 145:
#line 2283 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 146:
#line 2291 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 147:
#line 2293 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 148:
#line 2300 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }
              
            if (!(lex->sphead= new sp_head()))
              MYSQL_YYABORT;

            lex->sphead->reset_thd_mem_root(thd);
            lex->sphead->init(lex);
            lex->sphead->init_sp_name(thd, lex->event_parse_data->identifier);

            lex->sphead->m_type= TYPE_ENUM_PROCEDURE;

            bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
            lex->sphead->m_chistics= &lex->sp_chistics;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
    break;

  case 149:
#line 2343 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!

            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 163:
#line 2375 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= 0;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           bzero((char *)&(lex->mqh),sizeof(lex->mqh));
         }
    break;

  case 164:
#line 2390 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str || check_db_name(&(yyvsp[(1) - (3)].lex_str)))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (check_routine_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 165:
#line 2406 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (check_routine_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(db, (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 166:
#line 2424 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 167:
#line 2425 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 168:
#line 2429 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 169:
#line 2430 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 170:
#line 2436 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 171:
#line 2438 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 172:
#line 2440 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 173:
#line 2442 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 174:
#line 2444 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 175:
#line 2446 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 176:
#line 2448 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 177:
#line 2453 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { }
    break;

  case 178:
#line 2454 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 179:
#line 2455 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 180:
#line 2460 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 181:
#line 2464 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 182:
#line 2471 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), TYPE_ENUM_PROCEDURE);
          }
    break;

  case 183:
#line 2479 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 188:
#line 2495 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
           Lex->value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 189:
#line 2499 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 194:
#line 2517 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
    break;

  case 195:
#line 2537 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable(&(yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable_t *spvar= spc->push_variable(&(yyvsp[(1) - (3)].lex_str),
                                                     (enum enum_field_types)(yyvsp[(3) - (3)].num),
                                                     sp_param_in);

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                   &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 200:
#line 2574 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable(&(yyvsp[(3) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable_t *spvar= spc->push_variable(&(yyvsp[(3) - (4)].lex_str),
                                                     (enum enum_field_types)(yyvsp[(4) - (4)].num),
                                                     (sp_param_mode_t)(yyvsp[(1) - (4)].num));

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                   &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 201:
#line 2599 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= sp_param_in; }
    break;

  case 202:
#line 2600 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= sp_param_in; }
    break;

  case 203:
#line 2601 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= sp_param_out; }
    break;

  case 204:
#line 2602 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= sp_param_inout; }
    break;

  case 205:
#line 2606 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 207:
#line 2611 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 209:
#line 2617 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 210:
#line 2621 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 211:
#line 2647 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->reset_lex(YYTHD);
            lex->spcont->declare_var_boundary((yyvsp[(2) - (2)].num));
          }
    break;

  case 212:
#line 2655 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->spcont;
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[(4) - (5)].num);
            Item *dflt_value_item= (yyvsp[(5) - (5)].item);
            
            if (!dflt_value_item)
            {
              dflt_value_item= new (thd->mem_root) Item_null();
              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
              /* QQ Set to the var_type with null_value? */
            }
            
            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable_t *spvar= pctx->find_variable(var_idx);
            
              if (!spvar)
                MYSQL_YYABORT;
            
              spvar->type= var_type;
              spvar->dflt= dflt_value_item;
            
              if (lex->sphead->fill_field_definition(YYTHD, lex, var_type,
                                                     &spvar->field_def))
              {
                MYSQL_YYABORT;
              }
            
              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
            
              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= new sp_instr_set(lex->sphead->instructions(),
                                                 pctx,
                                                 var_idx,
                                                 dflt_value_item,
                                                 var_type,
                                                 lex,
                                                 (i == num_vars - 1));
              if (is == NULL ||
                  lex->sphead->add_instr(is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 213:
#line 2712 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_cond(&(yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(YYTHD->lex->spcont->push_cond(&(yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondtype)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 214:
#line 2727 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            lex->spcont= lex->spcont->push_context(LABEL_HANDLER_SCOPE);

            sp_pcontext *ctx= lex->spcont;
            sp_instr_hpush_jump *i=
              new sp_instr_hpush_jump(sp->instructions(), ctx, (yyvsp[(2) - (4)].num),
                                      ctx->current_var_count());
            if (i == NULL ||
                sp->add_instr(i) ||
                sp->push_backpatch(i, ctx->push_label((char *)"", 0)))
              MYSQL_YYABORT;
          }
    break;

  case 215:
#line 2743 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_label_t *hlab= lex->spcont->pop_label(); /* After this hdlr */
            sp_instr_hreturn *i;

            if ((yyvsp[(2) - (7)].num) == SP_HANDLER_CONTINUE)
            {
              i= new sp_instr_hreturn(sp->instructions(), ctx,
                                      ctx->current_var_count());
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              i= new sp_instr_hreturn(sp->instructions(), ctx, 0);
              if (i == NULL ||
                  sp->add_instr(i) ||
                  sp->push_backpatch(i, lex->spcont->last_label())) /* Block end */
                MYSQL_YYABORT;
            }
            lex->sphead->backpatch(hlab);

            lex->spcont= ctx->pop_context();

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= (yyvsp[(6) - (7)].num);
            lex->spcont->add_handlers((yyvsp[(6) - (7)].num));
          }
    break;

  case 216:
#line 2775 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint offp;
            sp_instr_cpush *i;

            if (ctx->find_cursor(&(yyvsp[(2) - (5)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              delete (yyvsp[(5) - (5)].lex);
              MYSQL_YYABORT;
            }
            i= new sp_instr_cpush(sp->instructions(), ctx, (yyvsp[(5) - (5)].lex),
                                  ctx->current_cursor_count());
            if (i == NULL ||
                sp->add_instr(i) ||
                ctx->push_cursor(&(yyvsp[(2) - (5)].lex_str)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 217:
#line 2800 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD);
          }
    break;

  case 218:
#line 2804 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            DBUG_ASSERT(lex->sql_command == SQLCOM_SELECT);

            if (lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }
            lex->sp_lex_in_use= TRUE;
            (yyval.lex)= lex;
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 219:
#line 2823 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= SP_HANDLER_EXIT; }
    break;

  case 220:
#line 2824 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= SP_HANDLER_CONTINUE; }
    break;

  case 221:
#line 2830 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 222:
#line 2832 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 223:
#line 2837 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (ctx->find_handler((yyvsp[(1) - (1)].spcondtype)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondtype));
              ctx->push_handler((yyvsp[(1) - (1)].spcondtype));
            }
          }
    break;

  case 224:
#line 2860 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
            if ((yyval.spcondtype) == NULL)
              MYSQL_YYABORT;
            (yyval.spcondtype)->type= sp_cond_type_t::number;
            (yyval.spcondtype)->mysqlerr= (yyvsp[(1) - (1)].ulong_num);
          }
    break;

  case 226:
#line 2877 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* SQLSTATE */
            if (!sp_cond_check(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
            if ((yyval.spcondtype) == NULL)
              MYSQL_YYABORT;
            (yyval.spcondtype)->type= sp_cond_type_t::state;
            memcpy((yyval.spcondtype)->sqlstate, (yyvsp[(3) - (3)].lex_str).str, SQLSTATE_LENGTH);
            (yyval.spcondtype)->sqlstate[SQLSTATE_LENGTH]= '\0';
          }
    break;

  case 227:
#line 2893 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 228:
#line 2894 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 229:
#line 2899 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.spcondtype)= (yyvsp[(1) - (1)].spcondtype);
          }
    break;

  case 230:
#line 2903 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.spcondtype)= Lex->spcont->find_cond(&(yyvsp[(1) - (1)].lex_str));
            if ((yyval.spcondtype) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 231:
#line 2912 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
            if ((yyval.spcondtype) == NULL)
              MYSQL_YYABORT;
            (yyval.spcondtype)->type= sp_cond_type_t::warning;
          }
    break;

  case 232:
#line 2919 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
            if ((yyval.spcondtype) == NULL)
              MYSQL_YYABORT;
            (yyval.spcondtype)->type= sp_cond_type_t::notfound;
          }
    break;

  case 233:
#line 2926 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
            if ((yyval.spcondtype) == NULL)
              MYSQL_YYABORT;
            (yyval.spcondtype)->type= sp_cond_type_t::exception;
          }
    break;

  case 234:
#line 2936 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_stmt= new (thd->mem_root) Signal_statement(lex, (yyvsp[(2) - (3)].spcondtype),
                                                      state->m_set_signal_info);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 235:
#line 2951 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_cond_type_t *cond;
            if (lex->spcont == NULL)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            cond= lex->spcont->find_cond(&(yyvsp[(1) - (1)].lex_str));
            if (cond == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_cond_type_t::state)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondtype)= cond;
          }
    break;

  case 236:
#line 2974 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.spcondtype)= (yyvsp[(1) - (1)].spcondtype); }
    break;

  case 237:
#line 2979 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.spcondtype)= NULL; }
    break;

  case 238:
#line 2981 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.spcondtype)= (yyvsp[(1) - (1)].spcondtype); }
    break;

  case 239:
#line 2986 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
    break;

  case 241:
#line 2994 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[(1) - (3)].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[(3) - (3)].item);
          }
    break;

  case 242:
#line 3003 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[(3) - (5)].diag_condition_item_name);
            if (info->m_item[index] != NULL)
            {
              my_error(ER_DUP_SIGNAL_SET, MYF(0),
                       Diag_condition_item_names[index].str);
              MYSQL_YYABORT;
            }
            info->m_item[index]= (yyvsp[(5) - (5)].item);
          }
    break;

  case 243:
#line 3022 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 244:
#line 3024 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 245:
#line 3042 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 246:
#line 3048 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
    break;

  case 247:
#line 3050 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
    break;

  case 248:
#line 3052 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
    break;

  case 249:
#line 3054 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
    break;

  case 250:
#line 3056 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
    break;

  case 251:
#line 3058 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
    break;

  case 252:
#line 3060 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
    break;

  case 253:
#line 3062 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
    break;

  case 254:
#line 3064 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
    break;

  case 255:
#line 3066 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
    break;

  case 256:
#line 3068 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
    break;

  case 257:
#line 3070 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
    break;

  case 258:
#line 3075 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->m_stmt= new (thd->mem_root) Resignal_statement(lex, (yyvsp[(2) - (3)].spcondtype),
                                                      state->m_set_signal_info);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 259:
#line 3090 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable(&(yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            spc->push_variable(&(yyvsp[(1) - (1)].lex_str), (enum_field_types)0, sp_param_in);
            (yyval.num)= 1;
          }
    break;

  case 260:
#line 3105 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable(&(yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            spc->push_variable(&(yyvsp[(3) - (3)].lex_str), (enum_field_types)0, sp_param_in);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 261:
#line 3122 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 262:
#line 3123 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item); }
    break;

  case 276:
#line 3144 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sphead->new_cont_backpatch(NULL); }
    break;

  case 277:
#line 3146 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sphead->do_cont_backpatch(); }
    break;

  case 278:
#line 3150 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
    break;

  case 279:
#line 3159 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=new sp_instr_stmt(sp->instructions(),
                                                 lex->spcont, lex);
              if (i == NULL)
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_end() - sp->m_tmp_query;
              if (!(i->m_query.str= strmake_root(thd->mem_root,
                                                 sp->m_tmp_query,
                                                 i->m_query.length)) ||
                    sp->add_instr(i))
                MYSQL_YYABORT;
            }
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 280:
#line 3207 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 281:
#line 3209 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            if (sp->m_type != TYPE_ENUM_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_freturn *i;

              i= new sp_instr_freturn(sp->instructions(), lex->spcont, (yyvsp[(3) - (3)].item),
                                      sp->m_return_field_def.sql_type, lex);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
              sp->m_flags|= sp_head::HAS_RETURN;
            }
            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 282:
#line 3235 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            LEX *lex= Lex;

            lex->spcont->push_label((char *)"", lex->sphead->instructions());
          }
    break;

  case 283:
#line 3241 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
    break;

  case 284:
#line 3250 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_label_t *lab= ctx->find_label((yyvsp[(2) - (2)].lex_str).str);

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_jump *i;
              uint ip= sp->instructions();
              uint n;
              /*
                When jumping to a BEGIN-END block end, the target jump
                points to the block hpop/cpop cleanup instructions,
                so we should exclude the block context here.
                When jumping to something else (i.e., SP_LAB_ITER),
                there are no hpop/cpop at the jump destination,
                so we should include the block context here for cleanup.
              */
              bool exclusive= (lab->type == SP_LAB_BEGIN);

              n= ctx->diff_handlers(lab->ctx, exclusive);
              if (n)
              {
                sp_instr_hpop *hpop= new sp_instr_hpop(ip++, ctx, n);
                if (hpop == NULL)
                  MYSQL_YYABORT;
                sp->add_instr(hpop);
              }
              n= ctx->diff_cursors(lab->ctx, exclusive);
              if (n)
              {
                sp_instr_cpop *cpop= new sp_instr_cpop(ip++, ctx, n);
                if (cpop == NULL)
                  MYSQL_YYABORT;
                sp->add_instr(cpop);
              }
              i= new sp_instr_jump(ip, ctx);
              if (i == NULL)
                MYSQL_YYABORT;
              sp->push_backpatch(i, lab);  /* Jumping forward */
              sp->add_instr(i);
            }
          }
    break;

  case 285:
#line 3303 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_label_t *lab= ctx->find_label((yyvsp[(2) - (2)].lex_str).str);

            if (! lab || lab->type != SP_LAB_ITER)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_jump *i;
              uint ip= sp->instructions();
              uint n;

              n= ctx->diff_handlers(lab->ctx, FALSE);  /* Inclusive the dest. */
              if (n)
              {
                sp_instr_hpop *hpop= new sp_instr_hpop(ip++, ctx, n);
                if (hpop == NULL ||
                    sp->add_instr(hpop))
                  MYSQL_YYABORT;
              }
              n= ctx->diff_cursors(lab->ctx, FALSE);  /* Inclusive the dest. */
              if (n)
              {
                sp_instr_cpop *cpop= new sp_instr_cpop(ip++, ctx, n);
                if (cpop == NULL ||
                    sp->add_instr(cpop))
                  MYSQL_YYABORT;
              }
              i= new sp_instr_jump(ip, ctx, lab->ip); /* Jump back */
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
          }
    break;

  case 286:
#line 3346 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_copen *i;

            if (! lex->spcont->find_cursor(&(yyvsp[(2) - (2)].lex_str), &offset))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            i= new sp_instr_copen(sp->instructions(), lex->spcont, offset);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 287:
#line 3366 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cfetch *i;

            if (! lex->spcont->find_cursor(&(yyvsp[(3) - (4)].lex_str), &offset))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            i= new sp_instr_cfetch(sp->instructions(), lex->spcont, offset);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 288:
#line 3383 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 289:
#line 3388 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (! lex->spcont->find_cursor(&(yyvsp[(2) - (2)].lex_str), &offset))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            i= new sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 293:
#line 3414 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable_t *spv;

            if (!spc || !(spv = spc->find_variable(&(yyvsp[(1) - (1)].lex_str))))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              /* An SP local variable */
              sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

              i->add_to_varlist(spv);
            }
          }
    break;

  case 294:
#line 3434 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable_t *spv;

            if (!spc || !(spv = spc->find_variable(&(yyvsp[(3) - (3)].lex_str))))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              /* An SP local variable */
              sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

              i->add_to_varlist(spv);
            }
          }
    break;

  case 295:
#line 3456 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 296:
#line 3458 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, ctx,
                                                               (yyvsp[(2) - (3)].item), lex);
            if (i == NULL ||
                sp->push_backpatch(i, ctx->push_label((char *)"", 0)) ||
                sp->add_cont_backpatch(i) ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 297:
#line 3474 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i = new sp_instr_jump(ip, ctx);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(i, ctx->push_label((char *)"", 0));
          }
    break;

  case 298:
#line 3486 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
    break;

  case 304:
#line 3506 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_case(lex);
            lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 305:
#line 3512 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_expr(lex, (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;

            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 306:
#line 3525 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_end_case(lex, true);
          }
    break;

  case 307:
#line 3533 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_case(lex);
          }
    break;

  case 308:
#line 3541 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_end_case(lex, false);
          }
    break;

  case 313:
#line 3559 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 314:
#line 3563 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (case_stmt_action_when(lex, (yyvsp[(3) - (3)].item), true))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 315:
#line 3575 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_then(lex))
              MYSQL_YYABORT;
          }
    break;

  case 316:
#line 3584 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 317:
#line 3588 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_when(lex, (yyvsp[(3) - (3)].item), false))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 318:
#line 3598 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_then(lex))
              MYSQL_YYABORT;
          }
    break;

  case 319:
#line 3607 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new sp_instr_error(ip, lex->spcont,
                                                  ER_SP_CASE_NOT_FOUND);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 321:
#line 3622 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *ctx= lex->spcont;
            sp_label_t *lab= ctx->find_label((yyvsp[(1) - (2)].lex_str).str);

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= lex->spcont->push_label((yyvsp[(1) - (2)].lex_str).str,
                                           lex->sphead->instructions());
              lab->type= SP_LAB_ITER;
            }
          }
    break;

  case 322:
#line 3640 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_label_t *lab= lex->spcont->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            lex->sphead->backpatch(lab);
          }
    break;

  case 323:
#line 3657 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 324:
#line 3658 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 325:
#line 3663 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *ctx= lex->spcont;
            sp_label_t *lab= ctx->find_label((yyvsp[(1) - (2)].lex_str).str);

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= lex->spcont->push_label((yyvsp[(1) - (2)].lex_str).str,
                                         lex->sphead->instructions());
            lab->type= SP_LAB_BEGIN;
          }
    break;

  case 326:
#line 3679 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_label_t *lab= lex->spcont->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 327:
#line 3695 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label_t *lab= lex->spcont->push_label((char *)"", ip);
            lab->type= SP_LAB_BEGIN;
          }
    break;

  case 328:
#line 3702 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->spcont->pop_label();
          }
    break;

  case 329:
#line 3710 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            LEX *lex= Lex;
            lex->spcont= lex->spcont->push_context(LABEL_DEFAULT_SCOPE);
          }
    break;

  case 330:
#line 3719 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_instr *i;

            sp->backpatch(ctx->last_label()); /* We always have a label */
            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              i= new sp_instr_hpop(sp->instructions(), ctx, (yyvsp[(3) - (5)].spblock).hndlrs);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              i= new sp_instr_cpop(sp->instructions(), ctx, (yyvsp[(3) - (5)].spblock).curs);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
            lex->spcont= ctx->pop_context();
          }
    break;

  case 331:
#line 3747 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 332:
#line 3757 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 333:
#line 3759 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
                                                               (yyvsp[(3) - (4)].item), lex);
            if (i == NULL ||
                /* Jumping forward */
                sp->push_backpatch(i, lex->spcont->last_label()) ||
                sp->new_cont_backpatch(i) ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 334:
#line 3775 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
            lex->sphead->do_cont_backpatch();
          }
    break;

  case 335:
#line 3786 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 336:
#line 3788 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
                                                               (yyvsp[(5) - (7)].item), lab->ip,
                                                               lex);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
    break;

  case 337:
#line 3807 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
    break;

  case 338:
#line 3809 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
    break;

  case 339:
#line 3814 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
    break;

  case 340:
#line 3816 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
    break;

  case 341:
#line 3818 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
    break;

  case 345:
#line 3852 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 346:
#line 3854 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 347:
#line 3864 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
    break;

  case 348:
#line 3870 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
    break;

  case 353:
#line 3893 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 400:
#line 3987 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 401:
#line 3995 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 402:
#line 4003 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 403:
#line 4011 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 404:
#line 4023 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 405:
#line 4035 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 406:
#line 4040 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 407:
#line 4045 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 408:
#line 4053 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 409:
#line 4061 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 410:
#line 4069 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 411:
#line 4077 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 412:
#line 4085 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 413:
#line 4093 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 414:
#line 4101 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 415:
#line 4114 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 416:
#line 4127 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 419:
#line 4146 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 420:
#line 4151 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 421:
#line 4163 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulong_num);}
    break;

  case 422:
#line 4165 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            uint str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 423:
#line 4215 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 424:
#line 4218 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 425:
#line 4220 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[(2) - (2)].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 426:
#line 4235 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 427:
#line 4254 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 428:
#line 4257 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 429:
#line 4258 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 430:
#line 4262 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 431:
#line 4264 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 432:
#line 4265 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 433:
#line 4267 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 434:
#line 4268 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 435:
#line 4273 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
    break;

  case 436:
#line 4309 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 438:
#line 4315 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= ALTER_PARTITION;
            }
          }
    break;

  case 440:
#line 4333 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_STRING partition_name={C_STRING_WITH_LEN("partition")};
            if (!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN))
            {
              my_error(ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                      "--skip-partition");
              MYSQL_YYABORT;
            }
#else
            my_error(ER_FEATURE_DISABLED, MYF(0), "partitioning",
                    "--with-plugin-partition");
            MYSQL_YYABORT;
#endif
          }
    break;

  case 441:
#line 4352 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_parse_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
    break;

  case 442:
#line 4364 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 444:
#line 4373 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
    break;

  case 445:
#line 4380 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 446:
#line 4381 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 447:
#line 4383 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 448:
#line 4385 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 449:
#line 4387 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 450:
#line 4389 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 451:
#line 4393 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 452:
#line 4395 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 453:
#line 4399 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 454:
#line 4400 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 455:
#line 4404 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 456:
#line 4405 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 457:
#line 4410 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 458:
#line 4429 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
    break;

  case 459:
#line 4439 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->set_part_expr((yyvsp[(2) - (5)].simple_string)+1, (yyvsp[(3) - (5)].item), (yyvsp[(4) - (5)].simple_string), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
    break;

  case 460:
#line 4450 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->part_info->set_part_expr((yyvsp[(2) - (5)].simple_string)+1, (yyvsp[(3) - (5)].item), (yyvsp[(4) - (5)].simple_string), TRUE))
            { MYSQL_YYABORT; }
          }
    break;

  case 461:
#line 4458 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 462:
#line 4460 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 463:
#line 4475 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 464:
#line 4477 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 465:
#line 4478 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 466:
#line 4481 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
    break;

  case 467:
#line 4486 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 468:
#line 4490 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 469:
#line 4491 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 470:
#line 4496 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 471:
#line 4514 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[(1) - (1)].item);
          }
    break;

  case 472:
#line 4529 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 473:
#line 4531 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
    break;

  case 474:
#line 4546 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
    break;

  case 475:
#line 4562 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 476:
#line 4583 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 477:
#line 4584 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 478:
#line 4589 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 479:
#line 4608 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 480:
#line 4613 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 481:
#line 4622 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
    break;

  case 482:
#line 4644 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
    break;

  case 483:
#line 4659 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 484:
#line 4661 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
    break;

  case 485:
#line 4676 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 486:
#line 4681 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 487:
#line 4702 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 488:
#line 4707 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 489:
#line 4736 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_parse_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 490:
#line 4747 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 491:
#line 4748 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 492:
#line 4753 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 493:
#line 4764 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 494:
#line 4766 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
    break;

  case 495:
#line 4789 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 496:
#line 4790 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 497:
#line 4795 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_parse_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 498:
#line 4808 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[(1) - (1)].item);

            if (!lex->safe_to_cache_query)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 499:
#line 4828 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 500:
#line 4842 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 501:
#line 4867 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 502:
#line 4868 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 503:
#line 4873 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
    break;

  case 504:
#line 4905 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 505:
#line 4910 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str; }
    break;

  case 506:
#line 4914 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 507:
#line 4915 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 508:
#line 4919 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 509:
#line 4920 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 510:
#line 4925 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 511:
#line 4927 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[(4) - (4)].db_type);
            part_info->default_engine_type= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 512:
#line 4933 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 513:
#line 4935 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 514:
#line 4937 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 515:
#line 4939 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 516:
#line 4941 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 517:
#line 4943 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 518:
#line 4952 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 519:
#line 4967 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 520:
#line 4971 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
    break;

  case 521:
#line 4981 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 522:
#line 4982 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 523:
#line 4986 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 524:
#line 4987 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 525:
#line 4991 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 526:
#line 4992 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 527:
#line 4996 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 528:
#line 4997 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 529:
#line 5001 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 530:
#line 5002 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (1)].num);}
    break;

  case 531:
#line 5006 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (1)].num); }
    break;

  case 532:
#line 5007 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 533:
#line 5011 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 534:
#line 5015 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 535:
#line 5016 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 543:
#line 5037 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[(3) - (3)].db_type);
            if ((yyvsp[(3) - (3)].db_type))
              Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 544:
#line 5043 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.max_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
    break;

  case 545:
#line 5048 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.min_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
    break;

  case 546:
#line 5053 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.avg_row_length=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
    break;

  case 547:
#line 5058 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.password=(yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
    break;

  case 548:
#line 5063 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.comment=(yyvsp[(3) - (3)].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
    break;

  case 549:
#line 5068 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.auto_increment_value=(yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
    break;

  case 550:
#line 5073 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 551:
#line 5088 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 552:
#line 5094 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 553:
#line 5099 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
             Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 554:
#line 5104 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
    break;

  case 555:
#line 5109 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.row_type= (yyvsp[(3) - (3)].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
    break;

  case 556:
#line 5114 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 557:
#line 5118 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
    break;

  case 560:
#line 5142 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.merge_insert_method= (yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
    break;

  case 561:
#line 5147 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.data_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
    break;

  case 562:
#line 5152 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.index_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
    break;

  case 563:
#line 5157 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {Lex->create_info.tablespace= (yyvsp[(2) - (2)].lex_str).str;}
    break;

  case 564:
#line 5159 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_DISK;}
    break;

  case 565:
#line 5161 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
    break;

  case 566:
#line 5163 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.connect_string.str= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[(3) - (3)].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
    break;

  case 567:
#line 5169 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 568:
#line 5177 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(4) - (4)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(4) - (4)].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 569:
#line 5195 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !((yyvsp[(4) - (4)].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[(4) - (4)].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 570:
#line 5212 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            plugin_ref plugin= ha_resolve_by_name(YYTHD, &(yyvsp[(1) - (1)].lex_str));

            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              if (YYTHD->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(YYTHD, MYSQL_ERROR::WARN_LEVEL_WARN,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[(1) - (1)].lex_str).str);
            }
          }
    break;

  case 571:
#line 5235 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            plugin_ref plugin;
            if ((plugin= ha_resolve_by_name(YYTHD, &(yyvsp[(1) - (1)].lex_str))))
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 572:
#line 5248 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 573:
#line 5249 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 574:
#line 5250 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 575:
#line 5251 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 576:
#line 5252 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 577:
#line 5253 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 578:
#line 5257 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 579:
#line 5258 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 580:
#line 5259 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 581:
#line 5263 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 583:
#line 5268 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 584:
#line 5269 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 585:
#line 5270 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 586:
#line 5271 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 587:
#line 5277 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
    break;

  case 593:
#line 5295 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 594:
#line 5302 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (7)].key_type), (yyvsp[(2) - (7)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 595:
#line 5308 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 596:
#line 5314 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 597:
#line 5320 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(2) - (8)].key_type), (yyvsp[(3) - (8)].lex_str).str ? (yyvsp[(3) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 598:
#line 5325 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[(4) - (8)].lex_str).str ? (yyvsp[(4) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str), lex->col_list,
                                      (yyvsp[(8) - (8)].table),
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, Key::MULTIPLE, (yyvsp[(1) - (8)].lex_str).str ? (yyvsp[(1) - (8)].lex_str) : (yyvsp[(4) - (8)].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_FOREIGN_KEY;
          }
    break;

  case 599:
#line 5343 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 603:
#line 5358 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 604:
#line 5359 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 605:
#line 5363 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 606:
#line 5368 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
          }
    break;

  case 607:
#line 5377 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[(1) - (4)].lex_str), (enum enum_field_types) (yyvsp[(3) - (4)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value, 
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 608:
#line 5390 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 609:
#line 5391 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 610:
#line 5392 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_FLOAT; }
    break;

  case 611:
#line 5394 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 612:
#line 5399 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 613:
#line 5403 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 614:
#line 5408 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 615:
#line 5413 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 616:
#line 5417 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 617:
#line 5422 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 618:
#line 5427 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 619:
#line 5433 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 620:
#line 5438 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 621:
#line 5444 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 622:
#line 5448 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
    break;

  case 623:
#line 5453 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 624:
#line 5458 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_YEAR; }
    break;

  case 625:
#line 5460 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATE; }
    break;

  case 626:
#line 5462 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TIME; }
    break;

  case 627:
#line 5464 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME;
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
              */
              Lex->type|= NOT_NULL_FLAG;
              (yyval.num)=MYSQL_TYPE_TIMESTAMP;
            }
          }
    break;

  case 628:
#line 5477 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATETIME; }
    break;

  case 629:
#line 5479 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 630:
#line 5484 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 631:
#line 5489 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[(1) - (1)].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 632:
#line 5501 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 633:
#line 5506 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 634:
#line 5511 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 635:
#line 5516 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 636:
#line 5518 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY_BLOB; }
    break;

  case 637:
#line 5520 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_BLOB; }
    break;

  case 638:
#line 5522 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 639:
#line 5524 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG_BLOB; }
    break;

  case 640:
#line 5526 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 641:
#line 5528 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 642:
#line 5530 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 643:
#line 5532 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 644:
#line 5534 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_ENUM; }
    break;

  case 645:
#line 5536 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 646:
#line 5538 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SET; }
    break;

  case 647:
#line 5540 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 648:
#line 5542 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
    break;

  case 649:
#line 5550 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 650:
#line 5551 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 651:
#line 5553 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->length= (char*)"25";
            (yyval.num)= Field::GEOM_POINT;
          }
    break;

  case 652:
#line 5557 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 653:
#line 5558 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 654:
#line 5559 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 655:
#line 5560 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 656:
#line 5561 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 657:
#line 5565 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 658:
#line 5569 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 659:
#line 5570 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 660:
#line 5574 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 661:
#line 5575 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 662:
#line 5579 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 663:
#line 5580 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 664:
#line 5581 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 665:
#line 5582 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 666:
#line 5583 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 667:
#line 5587 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG; }
    break;

  case 668:
#line 5588 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY; }
    break;

  case 669:
#line 5589 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SHORT; }
    break;

  case 670:
#line 5590 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_INT24; }
    break;

  case 671:
#line 5591 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
    break;

  case 672:
#line 5596 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
    break;

  case 673:
#line 5601 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 674:
#line 5603 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 675:
#line 5608 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->dec=Lex->length= (char*)0; }
    break;

  case 676:
#line 5610 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->dec= (char*)0; }
    break;

  case 677:
#line 5612 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 678:
#line 5617 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=(yyvsp[(2) - (5)].lex_str).str;
            lex->dec=(yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 679:
#line 5625 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 680:
#line 5626 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 681:
#line 5630 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 682:
#line 5631 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 683:
#line 5635 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 684:
#line 5636 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 685:
#line 5637 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 686:
#line 5641 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 687:
#line 5642 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 688:
#line 5643 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 689:
#line 5644 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 690:
#line 5647 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->length=(char*) 0; /* use default length */ }
    break;

  case 691:
#line 5648 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { }
    break;

  case 692:
#line 5652 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 693:
#line 5653 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 694:
#line 5657 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 695:
#line 5658 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 696:
#line 5662 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 698:
#line 5667 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type&= ~ NOT_NULL_FLAG; }
    break;

  case 699:
#line 5668 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 700:
#line 5669 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->default_value=(yyvsp[(2) - (2)].item); }
    break;

  case 701:
#line 5671 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local();
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->on_update_value= item;
          }
    break;

  case 702:
#line 5677 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 703:
#line 5679 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 704:
#line 5685 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 705:
#line 5691 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG; 
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 706:
#line 5697 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG; 
            lex->alter_info.flags|= ALTER_ADD_INDEX; 
          }
    break;

  case 707:
#line 5702 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 708:
#line 5704 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[(2) - (2)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(2) - (2)].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[(2) - (2)].charset);
            }
          }
    break;

  case 709:
#line 5721 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
          (yyval.num)= (yyvsp[(1) - (2)].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (2)].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[(2) - (2)].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
    break;

  case 710:
#line 5742 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 711:
#line 5748 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 712:
#line 5752 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 713:
#line 5753 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 714:
#line 5758 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 715:
#line 5765 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 716:
#line 5769 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 717:
#line 5770 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 718:
#line 5774 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 719:
#line 5775 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 720:
#line 5780 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 721:
#line 5788 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 722:
#line 5792 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 723:
#line 5793 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 724:
#line 5798 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_name((yyvsp[(1) - (1)].lex_str).str,MYF(0))))
            {
              my_error(ER_UNKNOWN_COLLATION, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 725:
#line 5808 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 726:
#line 5809 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 727:
#line 5813 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 728:
#line 5814 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 729:
#line 5818 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 730:
#line 5819 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 731:
#line 5824 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->charset= &my_charset_latin1; }
    break;

  case 732:
#line 5826 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 733:
#line 5830 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 734:
#line 5837 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                     MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 735:
#line 5846 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!(Lex->charset=get_charset_by_name("ucs2_bin", MYF(0))))
            {
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
              MYSQL_YYABORT;
            }
          }
    break;

  case 736:
#line 5854 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!(Lex->charset=get_charset_by_name("ucs2_bin", MYF(0))))
            {
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
              MYSQL_YYABORT;
            }
          }
    break;

  case 737:
#line 5864 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->charset=NULL; }
    break;

  case 740:
#line 5867 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->charset=&my_charset_bin; }
    break;

  case 741:
#line 5868 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->charset=(yyvsp[(2) - (3)].charset); }
    break;

  case 742:
#line 5870 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset= NULL;
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 743:
#line 5875 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(3) - (3)].charset);
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 744:
#line 5882 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { }
    break;

  case 745:
#line 5883 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 748:
#line 5898 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.table)=(yyvsp[(2) - (5)].table);
          }
    break;

  case 749:
#line 5905 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ref_list.empty(); }
    break;

  case 751:
#line 5911 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(3) - (3)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
    break;

  case 752:
#line 5918 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
    break;

  case 753:
#line 5930 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
    break;

  case 754:
#line 5932 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
    break;

  case 755:
#line 5934 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
    break;

  case 756:
#line 5936 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
    break;

  case 757:
#line 5941 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 758:
#line 5947 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 759:
#line 5953 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 760:
#line 5960 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 761:
#line 5967 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 762:
#line 5975 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_RESTRICT; }
    break;

  case 763:
#line 5976 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_CASCADE; }
    break;

  case 764:
#line 5977 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_SET_NULL; }
    break;

  case 765:
#line 5978 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_NO_ACTION; }
    break;

  case 766:
#line 5979 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_DEFAULT;  }
    break;

  case 767:
#line 5983 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 768:
#line 5987 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::PRIMARY; }
    break;

  case 769:
#line 5988 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 770:
#line 5992 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 771:
#line 5993 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 772:
#line 5997 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 774:
#line 6002 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 775:
#line 6003 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 776:
#line 6004 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 777:
#line 6008 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 778:
#line 6009 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 779:
#line 6013 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT;}
    break;

  case 780:
#line 6018 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 781:
#line 6030 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->key_create_info= default_key_create_info;
          }
    break;

  case 784:
#line 6047 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 786:
#line 6052 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 788:
#line 6057 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 796:
#line 6077 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 797:
#line 6078 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 798:
#line 6083 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->key_create_info.block_size= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 799:
#line 6084 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->key_create_info.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 804:
#line 6099 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (plugin_is_ready(&(yyvsp[(3) - (3)].lex_str), MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[(3) - (3)].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 805:
#line 6111 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 806:
#line 6112 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 807:
#line 6113 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 808:
#line 6117 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(3) - (4)].key_part)); }
    break;

  case 809:
#line 6118 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(1) - (2)].key_part)); }
    break;

  case 810:
#line 6123 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 811:
#line 6129 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (4)].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 812:
#line 6142 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 813:
#line 6143 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 814:
#line 6147 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 815:
#line 6148 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 816:
#line 6152 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(1) - (1)].string)); }
    break;

  case 817:
#line 6153 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(3) - (3)].string)); }
    break;

  case 818:
#line 6161 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR; 
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(4) - (4)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex.init_order();
            lex->select_lex.db= (lex->select_lex.table_list.first)->db;
            bzero((char*) &lex->create_info,sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_stmt);
          }
    break;

  case 819:
#line 6187 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_stmt)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_stmt= new (thd->mem_root) Alter_table_statement(lex);
              if (lex->m_stmt == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 820:
#line 6199 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 821:
#line 6204 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 822:
#line 6213 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[(3) - (7)].lex_str);
          }
    break;

  case 823:
#line 6224 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 824:
#line 6235 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 825:
#line 6242 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 826:
#line 6253 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 827:
#line 6260 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 828:
#line 6271 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 829:
#line 6278 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 830:
#line 6290 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 831:
#line 6292 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 832:
#line 6312 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 833:
#line 6325 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 834:
#line 6330 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 835:
#line 6335 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 836:
#line 6340 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 837:
#line 6345 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.server_name= (yyvsp[(3) - (7)].lex_str).str;
            lex->server_options.server_name_length= (yyvsp[(3) - (7)].lex_str).length;
          }
    break;

  case 838:
#line 6354 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 839:
#line 6355 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 840:
#line 6356 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 841:
#line 6357 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 842:
#line 6361 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 843:
#line 6363 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname); 
            (yyval.num)= 1;
          }
    break;

  case 844:
#line 6374 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 845:
#line 6375 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 846:
#line 6379 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 847:
#line 6380 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 849:
#line 6385 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->alter_info.tablespace_op= DISCARD_TABLESPACE; }
    break;

  case 850:
#line 6386 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->alter_info.tablespace_op= IMPORT_TABLESPACE; }
    break;

  case 856:
#line 6403 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_DROP_PARTITION;
          }
    break;

  case 857:
#line 6408 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 858:
#line 6415 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_stmt);
            lex->m_stmt= new (thd->mem_root)
                          Alter_table_optimize_partition_statement(lex);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 860:
#line 6429 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_stmt);
            lex->m_stmt= new (thd->mem_root)
                          Alter_table_analyze_partition_statement(lex);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 861:
#line 6441 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_stmt);
            lex->m_stmt= new (thd->mem_root)
                          Alter_table_check_partition_statement(lex);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 863:
#line 6454 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_stmt);
            lex->m_stmt= new (thd->mem_root)
                          Alter_table_repair_partition_statement(lex);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 865:
#line 6467 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 866:
#line 6474 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_stmt);
            lex->m_stmt= new (thd->mem_root)
                          Alter_table_truncate_partition_statement(lex);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 868:
#line 6489 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 869:
#line 6496 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_ALL_PARTITION;
          }
    break;

  case 871:
#line 6504 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 872:
#line 6516 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 874:
#line 6522 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
    break;

  case 875:
#line 6527 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->part_info->num_parts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 876:
#line 6534 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 878:
#line 6549 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_TABLE_REORG;
          }
    break;

  case 879:
#line 6553 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_REORGANIZE_PARTITION;
          }
    break;

  case 880:
#line 6557 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
    break;

  case 881:
#line 6564 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 882:
#line 6565 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 883:
#line 6570 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.partition_names.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
    break;

  case 886:
#line 6590 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= ALTER_ADD_COLUMN;
          }
    break;

  case 887:
#line 6599 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 888:
#line 6603 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 889:
#line 6608 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_ADD_COLUMN | ALTER_ADD_INDEX;
          }
    break;

  case 890:
#line 6612 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[(3) - (3)].lex_str).str;
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
          }
    break;

  case 891:
#line 6618 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 892:
#line 6622 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
          }
    break;

  case 893:
#line 6631 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[(3) - (6)].lex_str),
                                  (enum enum_field_types) (yyvsp[(5) - (6)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[(3) - (6)].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 894:
#line 6643 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 895:
#line 6647 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= ALTER_DROP_COLUMN;
          }
    break;

  case 896:
#line 6656 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_DROP_INDEX | ALTER_FOREIGN_KEY;
          }
    break;

  case 897:
#line 6660 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
    break;

  case 898:
#line 6669 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
    break;

  case 899:
#line 6678 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 900:
#line 6684 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 901:
#line 6690 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].lex_str).str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 902:
#line 6699 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 903:
#line 6708 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[(3) - (3)].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            if (check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length, FALSE) ||
                ((yyvsp[(3) - (3)].table)->db.str && check_db_name(&(yyvsp[(3) - (3)].table)->db)))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[(3) - (3)].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
    break;

  case 904:
#line 6727 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[(5) - (5)].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= ALTER_CONVERT;
          }
    break;

  case 905:
#line 6748 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
    break;

  case 906:
#line 6753 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
    break;

  case 907:
#line 6757 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
    break;

  case 908:
#line 6764 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 909:
#line 6765 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 910:
#line 6769 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ignore= 0;}
    break;

  case 911:
#line 6770 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ignore= 1;}
    break;

  case 912:
#line 6774 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 913:
#line 6775 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 914:
#line 6776 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 915:
#line 6780 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 916:
#line 6781 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { store_position_for_column((yyvsp[(2) - (2)].lex_str).str); }
    break;

  case 917:
#line 6782 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { store_position_for_column(first_keyword); }
    break;

  case 918:
#line 6786 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 919:
#line 6787 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 920:
#line 6788 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 921:
#line 6789 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 922:
#line 6798 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            bzero((char*) &lex->mi, sizeof(lex->mi));
            /* If you change this code don't forget to update SLAVE START too */
          }
    break;

  case 923:
#line 6807 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 924:
#line 6809 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
    break;

  case 925:
#line 6816 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            bzero((char*) &lex->mi, sizeof(lex->mi));
          }
    break;

  case 926:
#line 6824 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 927:
#line 6826 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
          }
    break;

  case 928:
#line 6835 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 929:
#line 6843 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 930:
#line 6845 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 931:
#line 6851 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->slave_thd_opt= 0; }
    break;

  case 932:
#line 6853 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 935:
#line 6862 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 936:
#line 6863 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_SQL; }
    break;

  case 937:
#line 6864 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_IO; }
    break;

  case 938:
#line 6868 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 939:
#line 6870 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos)))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
          }
    break;

  case 942:
#line 6891 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 943:
#line 6898 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 944:
#line 6902 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 945:
#line 6903 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 946:
#line 6904 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 947:
#line 6909 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 948:
#line 6919 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_stmt);
            lex->m_stmt= new (thd->mem_root) Repair_table_statement(lex);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 949:
#line 6930 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 950:
#line 6931 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 951:
#line 6935 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 952:
#line 6936 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 953:
#line 6940 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 954:
#line 6941 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 955:
#line 6942 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 956:
#line 6947 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 957:
#line 6957 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_stmt);
            lex->m_stmt= new (thd->mem_root) Analyze_table_statement(lex);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 958:
#line 6969 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 959:
#line 6977 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 960:
#line 6992 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_stmt);
            lex->m_stmt= new (thd->mem_root) Check_table_statement(lex);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 961:
#line 7003 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 962:
#line 7004 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 963:
#line 7008 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 964:
#line 7009 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 965:
#line 7013 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 966:
#line 7014 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 967:
#line 7015 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 968:
#line 7016 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 969:
#line 7017 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 970:
#line 7018 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 971:
#line 7023 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 972:
#line 7033 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_stmt);
            lex->m_stmt= new (thd->mem_root) Optimize_table_statement(lex);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 973:
#line 7044 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 974:
#line 7045 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 975:
#line 7046 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 976:
#line 7051 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 977:
#line 7055 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 978:
#line 7057 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 979:
#line 7064 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 980:
#line 7069 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 983:
#line 7082 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 984:
#line 7095 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 985:
#line 7099 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 990:
#line 7118 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 991:
#line 7128 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ, 
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 992:
#line 7137 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 993:
#line 7138 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 994:
#line 7143 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 995:
#line 7149 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1000:
#line 7164 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1001:
#line 7174 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1002:
#line 7184 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_ADMIN_PARTITION;
          }
    break;

  case 1004:
#line 7191 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->select_lex.alloc_index_hints(YYTHD);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        old_mode ? 
                                        INDEX_HINT_MASK_JOIN : 
                                        INDEX_HINT_MASK_ALL);
          }
    break;

  case 1006:
#line 7202 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { }
    break;

  case 1008:
#line 7208 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1009:
#line 7209 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1010:
#line 7219 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
          }
    break;

  case 1013:
#line 7233 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1015:
#line 7243 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1017:
#line 7252 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1019:
#line 7271 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1020:
#line 7279 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1022:
#line 7286 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1027:
#line 7296 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
    break;

  case 1030:
#line 7311 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Select->options & SELECT_DISTINCT && Select->options & SELECT_ALL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1034:
#line 7328 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=0;
              Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
            }
          }
    break;

  case 1035:
#line 7356 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }         
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=1;
              Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
            }
          }
    break;

  case 1037:
#line 7388 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->set_lock_for_tables(TL_WRITE);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1038:
#line 7394 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1041:
#line 7406 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root)
                          Item_field(&thd->lex->current_select->context,
                                     NULL, NULL, "*");
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_item_to_list(thd, item))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
    break;

  case 1042:
#line 7421 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_item_to_list(thd, (yyvsp[(2) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1043:
#line 7428 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            DBUG_ASSERT((yyvsp[(1) - (4)].simple_string) < (yyvsp[(3) - (4)].simple_string));

            if (add_item_to_list(thd, (yyvsp[(2) - (4)].item)))
              MYSQL_YYABORT;
            if ((yyvsp[(4) - (4)].lex_str).str)
            {
              if (Lex->sql_command == SQLCOM_CREATE_VIEW &&
                  check_column_name((yyvsp[(4) - (4)].lex_str).str))
              {
                my_error(ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[(4) - (4)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyvsp[(2) - (4)].item)->is_autogenerated_name= FALSE;
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[(2) - (4)].item)->name)
            {
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(1) - (4)].simple_string), (uint) ((yyvsp[(3) - (4)].simple_string) - (yyvsp[(1) - (4)].simple_string)), thd->charset());
            }
          }
    break;

  case 1044:
#line 7453 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
    break;

  case 1045:
#line 7459 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end();
          }
    break;

  case 1046:
#line 7465 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1047:
#line 7466 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1048:
#line 7467 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1049:
#line 7468 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1050:
#line 7469 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1051:
#line 7473 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1052:
#line 7474 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1053:
#line 7480 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_or*) (yyvsp[(1) - (3)].item);
              if (is_cond_or((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_or((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_or((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1054:
#line 7531 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = new (YYTHD->mem_root) Item_cond_xor((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1055:
#line 7538 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_and*) (yyvsp[(1) - (3)].item);
              if (is_cond_and((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_and((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_and((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1056:
#line 7581 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1057:
#line 7587 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_istrue((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1058:
#line 7593 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnottrue((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1059:
#line 7599 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isfalse((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1060:
#line 7605 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotfalse((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1061:
#line 7611 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1062:
#line 7617 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1064:
#line 7627 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1065:
#line 7633 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1066:
#line 7639 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_equal((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1067:
#line 7645 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= (*(yyvsp[(2) - (3)].boolfunc2creator))(0)->create((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1068:
#line 7651 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= all_any_subquery_creator((yyvsp[(1) - (6)].item), (yyvsp[(2) - (6)].boolfunc2creator), (yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1070:
#line 7661 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_in_subselect((yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1071:
#line 7667 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root) Item_in_subselect((yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].select_lex));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1072:
#line 7677 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1073:
#line 7683 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(4) - (7)].item));
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(1) - (7)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_func_in(*(yyvsp[(6) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1074:
#line 7691 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1075:
#line 7697 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(1) - (8)].item));
            Item_func_in *item = new (YYTHD->mem_root) Item_func_in(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1076:
#line 7707 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (5)].item),(yyvsp[(3) - (5)].item),(yyvsp[(5) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1077:
#line 7713 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item_func_between *item;
            item= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (6)].item),(yyvsp[(4) - (6)].item),(yyvsp[(6) - (6)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1078:
#line 7722 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item *item1= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(1) - (4)].item));
            Item *item4= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_eq(item1, item4);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1079:
#line 7732 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (4)].item),(yyvsp[(3) - (4)].item),(yyvsp[(4) - (4)].item),Lex->escape_used);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1080:
#line 7738 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].item),
                                                             Lex->escape_used);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_not(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1081:
#line 7748 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1082:
#line 7754 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (4)].item),(yyvsp[(4) - (4)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(YYTHD, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1084:
#line 7767 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_or((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1085:
#line 7773 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_and((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1086:
#line 7779 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_left((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1087:
#line 7785 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_right((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1088:
#line 7791 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_plus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1089:
#line 7797 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1090:
#line 7803 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1091:
#line 7809 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1092:
#line 7815 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mul((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1093:
#line 7821 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1094:
#line 7827 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1095:
#line 7833 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_int_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1096:
#line 7839 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1097:
#line 7845 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_xor((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1107:
#line 7874 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1108:
#line 7875 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1109:
#line 7876 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1110:
#line 7877 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1111:
#line 7878 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1112:
#line 7879 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1113:
#line 7883 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1114:
#line 7884 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1120:
#line 7894 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_string((yyvsp[(3) - (3)].lex_str).str,
                                                      (yyvsp[(3) - (3)].lex_str).length,
                                                      thd->charset());
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_set_collation((yyvsp[(1) - (3)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1125:
#line 7910 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_concat((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1126:
#line 7916 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1127:
#line 7920 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1128:
#line 7926 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1129:
#line 7932 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1130:
#line 7938 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            (yyval.item)= new (YYTHD->mem_root) Item_singlerow_subselect((yyvsp[(2) - (3)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1131:
#line 7944 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1132:
#line 7946 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyvsp[(4) - (5)].item_list)->push_front((yyvsp[(2) - (5)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(4) - (5)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1133:
#line 7953 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyvsp[(5) - (6)].item_list)->push_front((yyvsp[(3) - (6)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(5) - (6)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1134:
#line 7960 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_exists_subselect((yyvsp[(3) - (4)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1135:
#line 7966 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(3) - (4)].item); }
    break;

  case 1136:
#line 7968 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (7)].item_list)->push_front((yyvsp[(5) - (7)].item));
            Item_func_match *i1= new (YYTHD->mem_root) Item_func_match(*(yyvsp[(2) - (7)].item_list), (yyvsp[(6) - (7)].num));
            if (i1 == NULL)
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(i1);
            (yyval.item)= i1;
          }
    break;

  case 1137:
#line 7977 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, NULL, NULL,
                                 &my_charset_bin);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1138:
#line 7984 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), lex->length, lex->dec,
                                 lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1139:
#line 7992 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_case(* (yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1140:
#line 7998 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), Lex->length, Lex->dec,
                                 Lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1141:
#line 8005 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_conv_charset((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1142:
#line 8011 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (4)].item)->is_splocal())
            {
              Item_splocal *il= static_cast<Item_splocal *>((yyvsp[(3) - (4)].item));

              my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str);
              MYSQL_YYABORT;
            }
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context(),
                                                         (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1143:
#line 8025 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_insert_value(Lex->current_context(),
                                                        (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1144:
#line 8033 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(5) - (5)].item),(yyvsp[(2) - (5)].item),(yyvsp[(3) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1145:
#line 8048 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1146:
#line 8054 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (6)].item_list), (yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1147:
#line 8060 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_current_user(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1148:
#line 8068 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1149:
#line 8074 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_dayofmonth((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1150:
#line 8080 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_hour((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1151:
#line 8086 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_insert((yyvsp[(3) - (10)].item),(yyvsp[(5) - (10)].item),(yyvsp[(7) - (10)].item),(yyvsp[(9) - (10)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1152:
#line 8092 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (list == NULL)
              MYSQL_YYABORT;
            list->push_front((yyvsp[(5) - (6)].item));
            list->push_front((yyvsp[(3) - (6)].item));
            Item_row *item= new (thd->mem_root) Item_row(*list);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1153:
#line 8107 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(3) - (8)].item));
            Item_row *item= new (thd->mem_root) Item_row(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1154:
#line 8119 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_left((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1155:
#line 8125 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minute((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1156:
#line 8131 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_month((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1157:
#line 8137 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_right((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1158:
#line 8143 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_second((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1159:
#line 8149 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_time_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1160:
#line 8155 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_datetime_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1161:
#line 8161 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_add_time((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1162:
#line 8167 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1163:
#line 8173 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1164:
#line 8179 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1165:
#line 8185 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1166:
#line 8191 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1167:
#line 8197 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1168:
#line 8203 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1169:
#line 8209 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1170:
#line 8215 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_user();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1171:
#line 8223 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_year((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1172:
#line 8244 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1173:
#line 8251 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1174:
#line 8257 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1175:
#line 8264 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1176:
#line 8271 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_local((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1177:
#line 8279 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1178:
#line 8286 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1179:
#line 8292 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_extract( (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1180:
#line 8298 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_format((yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1181:
#line 8304 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1182:
#line 8311 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1183:
#line 8318 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_locate((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1184:
#line 8324 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1185:
#line 8331 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1186:
#line 8337 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1187:
#line 8343 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1188:
#line 8349 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1189:
#line 8355 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1190:
#line 8361 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (YYTHD->mem_root) Item_func_sysdate_local();
            else
              (yyval.item)= new (YYTHD->mem_root) Item_func_now_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1191:
#line 8379 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (YYTHD->mem_root) Item_func_sysdate_local((yyvsp[(3) - (4)].item));
            else
              (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1192:
#line 8389 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(7) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(3) - (8)].interval_time_st),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1193:
#line 8395 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_timestamp_diff((yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1194:
#line 8401 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_utc();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1195:
#line 8408 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_utc();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1196:
#line 8415 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_utc();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1197:
#line 8430 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ascii((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1198:
#line 8436 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_charset((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1199:
#line 8442 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_coalesce(* (yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1200:
#line 8448 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_collation((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1201:
#line 8454 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_database();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1202:
#line 8461 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_if((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1203:
#line 8467 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_microsecond((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1204:
#line 8473 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_mod((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1205:
#line 8479 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)=  new (YYTHD->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1206:
#line 8485 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item* i1;
            if (thd->variables.old_passwords)
              i1= new (thd->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            else
              i1= new (thd->mem_root) Item_func_password((yyvsp[(3) - (4)].item));
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
    break;

  case 1207:
#line 8497 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_quarter((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1208:
#line 8503 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_repeat((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1209:
#line 8509 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_replace((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1210:
#line 8515 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_round((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1211:
#line 8521 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_int((char*) "0",
                                           thd->variables.default_week_format,
                                                   1);
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_week((yyvsp[(3) - (4)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1212:
#line 8533 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_week((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1213:
#line 8539 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[(1) - (1)].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 1214:
#line 8555 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_rel((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                               Item_func::SP_CONTAINS_FUNC));
          }
    break;

  case 1215:
#line 8561 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
    break;

  case 1216:
#line 8568 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
    break;

  case 1217:
#line 8575 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
    break;

  case 1218:
#line 8582 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
    break;

  case 1219:
#line 8589 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
    break;

  case 1220:
#line 8596 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD, Item_func_point((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item)));
          }
    break;

  case 1221:
#line 8600 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
    break;

  case 1222:
#line 8619 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[(1) - (2)].lex_str).str, (yyvsp[(1) - (2)].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (lex->current_select->inc_in_sum_expr())
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
    break;

  case 1223:
#line 8638 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_func *builder;
            Item *item= NULL;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, (yyvsp[(1) - (5)].lex_str));
            if (builder)
            {
              item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[(3) - (5)].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[(4) - (5)].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
              }
            }

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1224:
#line 8687 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_qfunc *builder;
            Item *item= NULL;

            /*
              The following in practice calls:
              <code>Create_sp_func::create()</code>
              and builds a stored function.

              However, it's important to maintain the interface between the
              parser and the implementation in item_create.cc clean,
              since this will change with WL#2128 (SQL PATH):
              - INFORMATION_SCHEMA.version() is the SQL 99 syntax for the native
              function version(),
              - MySQL.version() is the SQL 2003 syntax for the native function
              version() (a vendor can specify any schema).
            */

            builder= find_qualified_function_builder(thd);
            DBUG_ASSERT(builder);
            item= builder->create(thd, (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), true, (yyvsp[(5) - (6)].item_list));

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1225:
#line 8719 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1226:
#line 8721 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= FT_BOOL; }
    break;

  case 1227:
#line 8725 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1228:
#line 8726 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1229:
#line 8730 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1230:
#line 8731 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1231:
#line 8735 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1232:
#line 8736 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1233:
#line 8741 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1234:
#line 8748 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1235:
#line 8756 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[(4) - (4)].lex_str).str)
            {
              (yyvsp[(2) - (4)].item)->is_autogenerated_name= FALSE;
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[(2) - (4)].item)->type() != Item::FIELD_ITEM)
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(1) - (4)].simple_string), (uint) ((yyvsp[(3) - (4)].simple_string) - (yyvsp[(1) - (4)].simple_string)), YYTHD->charset());
            (yyval.item)= (yyvsp[(2) - (4)].item);
          }
    break;

  case 1236:
#line 8782 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1237:
#line 8788 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1238:
#line 8794 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_and((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1239:
#line 8800 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_or((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1240:
#line 8806 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_xor((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1241:
#line 8812 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_int((int32) 0L,1);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1242:
#line 8821 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1243:
#line 8827 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1244:
#line 8829 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->in_sum_expr--; }
    break;

  case 1245:
#line 8831 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(* (yyvsp[(5) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1246:
#line 8837 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1247:
#line 8848 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1248:
#line 8854 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1249:
#line 8860 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1250:
#line 8866 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1251:
#line 8872 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1252:
#line 8878 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1253:
#line 8884 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1254:
#line 8890 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1255:
#line 8896 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1256:
#line 8902 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1257:
#line 8906 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (YYTHD->mem_root)
                  Item_func_group_concat(Lex->current_context(), (yyvsp[(3) - (8)].num), (yyvsp[(5) - (8)].item_list),
                                         sel->gorder_list, (yyvsp[(7) - (8)].string));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            (yyvsp[(5) - (8)].item_list)->empty();
          }
    break;

  case 1258:
#line 8920 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1259:
#line 8928 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1260:
#line 8935 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
            lex->set_var_list.push_back(item);
          }
    break;

  case 1261:
#line 8945 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(1) - (1)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
          }
    break;

  case 1262:
#line 8953 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* disallow "SELECT @@global.global.variable" */
            if ((yyvsp[(3) - (4)].lex_str).str && (yyvsp[(4) - (4)].lex_str).str && check_reserved_words(&(yyvsp[(3) - (4)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yyvsp[(4) - (4)].lex_str))))
              MYSQL_YYABORT;
            if (!((Item_func_get_system_var*) (yyval.item))->is_written_to_binlog())
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE);
          }
    break;

  case 1263:
#line 8968 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1264:
#line 8969 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1265:
#line 8974 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1266:
#line 8979 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1267:
#line 8984 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->gorder_list = NULL;
          }
    break;

  case 1268:
#line 8988 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->gorder_list= new (YYTHD->mem_root)
                                   SQL_I_List<ORDER>(select->order_list);
            if (select->gorder_list == NULL)
              MYSQL_YYABORT;
            select->order_list.empty();
          }
    break;

  case 1269:
#line 9000 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->current_select->inc_in_sum_expr())
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1270:
#line 9009 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1271:
#line 9017 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
    break;

  case 1272:
#line 9019 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
    break;

  case 1273:
#line 9021 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
    break;

  case 1274:
#line 9023 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1275:
#line 9025 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1276:
#line 9027 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1277:
#line 9029 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1278:
#line 9031 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1279:
#line 9033 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_TIME; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1280:
#line 9035 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1281:
#line 9037 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
    break;

  case 1282:
#line 9041 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1283:
#line 9042 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list);}
    break;

  case 1284:
#line 9047 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1285:
#line 9054 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1286:
#line 9061 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1287:
#line 9062 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(2) - (3)].item_list); }
    break;

  case 1288:
#line 9067 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1289:
#line 9074 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1290:
#line 9081 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1291:
#line 9082 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1292:
#line 9086 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1293:
#line 9087 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1294:
#line 9092 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1295:
#line 9100 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1296:
#line 9110 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1297:
#line 9112 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              MYSQL_YYABORT;
          }
    break;

  case 1298:
#line 9120 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[(1) - (1)].table_list)); }
    break;

  case 1299:
#line 9131 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1300:
#line 9132 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(3) - (4)].table_list); }
    break;

  case 1301:
#line 9138 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1302:
#line 9140 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list)));
          }
    break;

  case 1303:
#line 9160 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); }
    break;

  case 1304:
#line 9162 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); (yyvsp[(3) - (3)].table_list)->straight=1; }
    break;

  case 1305:
#line 9165 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1306:
#line 9173 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1307:
#line 9180 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1308:
#line 9188 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyvsp[(3) - (6)].table_list)->straight=1;
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1309:
#line 9196 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
          }
    break;

  case 1310:
#line 9200 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { add_join_natural((yyvsp[(1) - (8)].table_list),(yyvsp[(3) - (8)].table_list),(yyvsp[(7) - (8)].string_list),Select); (yyval.table_list)=(yyvsp[(3) - (8)].table_list); }
    break;

  case 1311:
#line 9202 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && ((yyval.table_list)=(yyvsp[(4) - (4)].table_list)));
            add_join_natural((yyvsp[(1) - (4)].table_list),(yyvsp[(4) - (4)].table_list),NULL,Select);
          }
    break;

  case 1312:
#line 9210 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1313:
#line 9218 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(5) - (8)].table_list),(yyvsp[(8) - (8)].item));
            Lex->pop_context();
            (yyvsp[(5) - (8)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(5) - (8)].table_list);
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1314:
#line 9226 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1315:
#line 9230 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            add_join_natural((yyvsp[(1) - (10)].table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select); 
            (yyvsp[(5) - (10)].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[(5) - (10)].table_list); 
          }
    break;

  case 1316:
#line 9236 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(1) - (6)].table_list),(yyvsp[(6) - (6)].table_list),NULL,Select);
            (yyvsp[(6) - (6)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(6) - (6)].table_list);
          }
    break;

  case 1317:
#line 9246 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1318:
#line 9254 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_on((yyval.table_list), (yyvsp[(8) - (8)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1319:
#line 9263 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1320:
#line 9267 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select);
          }
    break;

  case 1321:
#line 9274 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(6) - (6)].table_list),(yyvsp[(1) - (6)].table_list),NULL,Select);
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
          }
    break;

  case 1322:
#line 9284 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1323:
#line 9285 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1324:
#line 9286 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1325:
#line 9298 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
    break;

  case 1326:
#line 9303 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!((yyval.table_list)= Select->add_table_to_list(YYTHD, (yyvsp[(2) - (4)].table), (yyvsp[(3) - (4)].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints())))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
          }
    break;

  case 1327:
#line 9313 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if ((yyvsp[(1) - (3)].num))
            {
              if (sel->set_braces(1))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              /* select in braces, can't contain global parameters */
              if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if ((yyvsp[(2) - (3)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
    break;

  case 1328:
#line 9353 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[(3) - (5)].table_list) || (yyvsp[(5) - (5)].lex_str_ptr)) && (yyvsp[(2) - (5)].select_lex)->embedding &&
                !(yyvsp[(2) - (5)].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[(3) - (5)].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new Table_ident(unit);
              if (ti == NULL)
                MYSQL_YYABORT;
              if (!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                               new Table_ident(unit), (yyvsp[(5) - (5)].lex_str_ptr), 0,
                                               TL_READ, MDL_SHARED_READ)))

                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if (((yyvsp[(3) - (5)].table_list)->select_lex &&
                     (yyvsp[(3) - (5)].table_list)->select_lex->master_unit()->is_union()) || (yyvsp[(5) - (5)].lex_str_ptr))
            {
              /* simple nested joins cannot have aliases or unions */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[(3) - (5)].table_list);
            }
          }
    break;

  case 1330:
#line 9407 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(3) - (3)].num), FALSE))
              MYSQL_YYABORT;
          }
    break;

  case 1331:
#line 9412 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
             */
            Lex->pop_context();
          }
    break;

  case 1333:
#line 9425 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1334:
#line 9444 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1335:
#line 9452 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1337:
#line 9461 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(1) - (1)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
          }
    break;

  case 1338:
#line 9467 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[(1) - (3)].select_lex)->end_nested_join(lex->thd)) && (yyvsp[(3) - (3)].table_list))
              MYSQL_YYABORT;
            if (!(yyvsp[(3) - (3)].table_list) && (yyval.table_list))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1339:
#line 9483 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (!lex->expr_allows_subselect ||
                lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                mysql_new_select(lex, 1))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1340:
#line 9500 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1342:
#line 9507 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.select_lex)= Select; }
    break;

  case 1343:
#line 9512 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (! lex->parsing_options.allows_derived)
            {
              my_error(ER_VIEW_SELECT_DERIVED, MYF(0));
              MYSQL_YYABORT;
            }

            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
            {
              /* we are not in parentheses */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
    break;

  case 1344:
#line 9537 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1345:
#line 9538 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1346:
#line 9543 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
    break;

  case 1347:
#line 9546 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1348:
#line 9547 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1349:
#line 9548 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1350:
#line 9552 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1351:
#line 9553 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1352:
#line 9558 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type((yyvsp[(1) - (3)].index_hint), (yyvsp[(3) - (3)].num));
          }
    break;

  case 1354:
#line 9563 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[(3) - (3)].num));
          }
    break;

  case 1359:
#line 9576 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->alloc_index_hints(YYTHD); }
    break;

  case 1361:
#line 9580 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {  Select->clear_index_hints(); }
    break;

  case 1363:
#line 9585 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, NULL, 0); }
    break;

  case 1364:
#line 9586 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1365:
#line 9591 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length); }
    break;

  case 1366:
#line 9593 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (char *)"PRIMARY", 7); }
    break;

  case 1369:
#line 9603 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
    break;

  case 1370:
#line 9614 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(3) - (3)].lex_str).str,
                                                    (yyvsp[(3) - (3)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[(1) - (3)].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1371:
#line 9626 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1372:
#line 9627 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1373:
#line 9628 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1374:
#line 9629 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1375:
#line 9630 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1376:
#line 9631 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1377:
#line 9632 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1378:
#line 9633 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1379:
#line 9634 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1380:
#line 9635 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1381:
#line 9636 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1382:
#line 9637 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1383:
#line 9641 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1384:
#line 9642 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1385:
#line 9643 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1386:
#line 9644 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1387:
#line 9645 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1388:
#line 9646 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1389:
#line 9647 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1390:
#line 9648 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1391:
#line 9649 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1392:
#line 9653 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
    break;

  case 1393:
#line 9654 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
    break;

  case 1394:
#line 9655 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
    break;

  case 1395:
#line 9656 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
    break;

  case 1399:
#line 9666 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1400:
#line 9668 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1403:
#line 9681 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->where= 0; }
    break;

  case 1404:
#line 9683 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->parsing_place= IN_WHERE;
          }
    break;

  case 1405:
#line 9687 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->where= (yyvsp[(3) - (3)].item);
            select->parsing_place= NO_MATTER;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1407:
#line 9699 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->parsing_place= IN_HAVING;
          }
    break;

  case 1408:
#line 9703 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->having= (yyvsp[(3) - (3)].item);
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1409:
#line 9714 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1410:
#line 9719 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string("", 0, &my_charset_latin1) :
                 new (thd->mem_root) Item_string("\\", 1, &my_charset_latin1));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1413:
#line 9741 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1414:
#line 9743 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1415:
#line 9747 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1416:
#line 9749 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= CUBE_TYPE;
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
            MYSQL_YYABORT;
          }
    break;

  case 1417:
#line 9769 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= ROLLUP_TYPE;
          }
    break;

  case 1421:
#line 9803 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            bool ascending= ((yyvsp[(2) - (2)].num) == 1) ? true : false;
            if (add_order_to_list(thd, (yyvsp[(1) - (2)].item), ascending))
              MYSQL_YYABORT;
          }
    break;

  case 1424:
#line 9822 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE && !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been created
                yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (!unit->is_union() &&
                  (first_sl->order_list.elements || 
                   first_sl->select_limit) &&            
                  unit->add_fake_select_lex(lex->thd))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1426:
#line 9857 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1427:
#line 9859 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1428:
#line 9863 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1429:
#line 9864 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1430:
#line 9865 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1431:
#line 9870 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            sel->offset_limit= 0;
            sel->select_limit= 0;
          }
    break;

  case 1432:
#line 9876 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1433:
#line 9880 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1434:
#line 9881 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1435:
#line 9886 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
    break;

  case 1436:
#line 9893 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (1)].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
    break;

  case 1437:
#line 9900 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(3) - (3)].item);
            sel->offset_limit= (yyvsp[(1) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1438:
#line 9907 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (3)].item);
            sel->offset_limit= (yyvsp[(3) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1439:
#line 9917 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
          Item_splocal *splocal;
          THD *thd= YYTHD;
          LEX *lex= thd->lex;
          Lex_input_stream *lip= & thd->m_parser_state->m_lip;
          sp_variable_t *spv;
          sp_pcontext *spc = lex->spcont;
          if (spc && (spv = spc->find_variable(&(yyvsp[(1) - (1)].lex_str))))
          {
            splocal= new (thd->mem_root)
              Item_splocal((yyvsp[(1) - (1)].lex_str), spv->offset, spv->type,
                  lip->get_tok_start() - lex->sphead->m_tmp_query,
                  lip->get_ptr() - lip->get_tok_start());
            if (splocal == NULL)
              MYSQL_YYABORT;
#ifndef DBUG_OFF
            splocal->m_sp= lex->sphead;
#endif
            lex->safe_to_cache_query=0;
          }
          else
          {
            my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
            MYSQL_YYABORT;
          }
          if (splocal->type() != Item::INT_ITEM)
          {
            my_error(ER_WRONG_SPVAR_TYPE_IN_LIMIT, MYF(0));
            MYSQL_YYABORT;
          }
          splocal->limit_clause_param= TRUE;
          (yyval.item)= splocal;
        }
    break;

  case 1440:
#line 9950 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
          ((Item_param *) (yyvsp[(1) - (1)].item))->limit_clause_param= TRUE;
        }
    break;

  case 1441:
#line 9954 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1442:
#line 9960 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1443:
#line 9966 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1444:
#line 9975 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
    break;

  case 1445:
#line 9980 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(2) - (2)].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
    break;

  case 1446:
#line 9989 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1447:
#line 9990 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1448:
#line 9991 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1449:
#line 9992 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1450:
#line 9993 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1451:
#line 9994 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1452:
#line 9998 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1453:
#line 9999 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1454:
#line 10000 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1455:
#line 10001 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1456:
#line 10002 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1457:
#line 10006 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1458:
#line 10007 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1459:
#line 10008 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1460:
#line 10009 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1461:
#line 10010 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1462:
#line 10014 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1463:
#line 10015 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1464:
#line 10016 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1465:
#line 10017 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1466:
#line 10022 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { my_parse_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1470:
#line 10033 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (! lex->parsing_options.allows_select_procedure)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            if (&lex->select_lex != lex->current_select)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
              MYSQL_YYABORT;
            }
            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (YYTHD->mem_root)
                                Item_field(&lex->current_select->context,
                                           NULL, NULL, (yyvsp[(2) - (2)].lex_str).str);
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_proc_to_list(lex->thd, item))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1472:
#line 10063 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1473:
#line 10064 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1476:
#line 10074 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_proc_to_list(thd, (yyvsp[(2) - (3)].item)))
              MYSQL_YYABORT;
            if (!(yyvsp[(2) - (3)].item)->name)
              (yyvsp[(2) - (3)].item)->set_name((yyvsp[(1) - (3)].simple_string), (uint) ((yyvsp[(3) - (3)].simple_string) - (yyvsp[(1) - (3)].simple_string)), thd->charset());
          }
    break;

  case 1477:
#line 10085 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe && (!(lex->result= new select_dumpvar())))
              MYSQL_YYABORT;
          }
    break;

  case 1478:
#line 10091 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1480:
#line 10096 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1481:
#line 10101 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->result) 
            {
              my_var *var= new my_var((yyvsp[(2) - (2)].lex_str),0,0,(enum_field_types)0);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1482:
#line 10120 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            sp_variable_t *t;

            if (!lex->spcont || !(t=lex->spcont->find_variable(&(yyvsp[(1) - (1)].lex_str))))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (lex->result)
            {
              my_var *var= new my_var((yyvsp[(1) - (1)].lex_str),1,t->offset,t->type);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
#ifndef DBUG_OFF
              var->sp= lex->sphead;
#endif
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1483:
#line 10152 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_select_into)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "INTO");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1485:
#line 10164 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str, 0)) ||
                !(lex->result= new select_export(lex->exchange)))
              MYSQL_YYABORT;
          }
    break;

  case 1486:
#line 10172 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(4) - (4)].charset); }
    break;

  case 1488:
#line 10175 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str,1)))
                MYSQL_YYABORT;
              if (!(lex->result= new select_dump(lex->exchange)))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1489:
#line 10187 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1490:
#line 10198 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
    break;

  case 1491:
#line 10204 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->insert_list= (yyvsp[(3) - (3)].item_list);
          }
    break;

  case 1492:
#line 10215 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (4)].num);
            lex->drop_if_exists= (yyvsp[(4) - (4)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1493:
#line 10224 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1494:
#line 10225 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1495:
#line 10226 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 1496:
#line 10242 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1497:
#line 10249 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str && check_db_name(&(yyvsp[(4) - (6)].lex_str)))
            {
               my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(4) - (6)].lex_str).str);
               MYSQL_YYABORT;
            }
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name((yyvsp[(4) - (6)].lex_str), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1498:
#line 10272 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= {0, 0};
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(db, (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1499:
#line 10293 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1500:
#line 10305 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_USER;
          }
    break;

  case 1501:
#line 10309 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1502:
#line 10317 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1503:
#line 10319 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1504:
#line 10325 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1505:
#line 10332 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1506:
#line 10337 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1507:
#line 10342 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->server_options.server_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[(4) - (4)].lex_str).length;
          }
    break;

  case 1510:
#line 10357 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1513:
#line 10373 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1514:
#line 10383 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1515:
#line 10384 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1516:
#line 10388 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1517:
#line 10389 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1518:
#line 10397 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
    break;

  case 1519:
#line 10405 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (5)].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
    break;

  case 1520:
#line 10410 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1521:
#line 10415 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
    break;

  case 1522:
#line 10422 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (4)].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
    break;

  case 1523:
#line 10427 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1524:
#line 10432 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              If it is SP we do not allow insert optimisation whan result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
#else
            (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
#endif
          }
    break;

  case 1525:
#line 10444 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1526:
#line 10446 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
    break;

  case 1527:
#line 10453 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1528:
#line 10457 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1529:
#line 10459 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
    break;

  case 1530:
#line 10469 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1531:
#line 10470 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1532:
#line 10475 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
    break;

  case 1533:
#line 10483 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1534:
#line 10484 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1535:
#line 10485 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1536:
#line 10487 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!(lex->insert_list = new List_item) ||
                lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1538:
#line 10497 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1539:
#line 10498 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1540:
#line 10502 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1541:
#line 10503 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1542:
#line 10505 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 1543:
#line 10506 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1544:
#line 10508 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 1545:
#line 10509 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1550:
#line 10524 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->field_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1551:
#line 10533 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1552:
#line 10534 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1553:
#line 10538 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1554:
#line 10539 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1555:
#line 10544 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
              if (!(Lex->insert_list = new List_item))
                MYSQL_YYABORT;
          }
    break;

  case 1556:
#line 10549 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1557:
#line 10557 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1559:
#line 10563 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1560:
#line 10568 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1561:
#line 10575 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1562:
#line 10577 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1564:
#line 10586 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->duplicates= DUP_UPDATE; }
    break;

  case 1566:
#line 10594 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
    break;

  case 1567:
#line 10602 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->select_lex.table_list.elements > 1)
              lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (lex->select_lex.get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       lex->select_lex.get_table_list()->alias, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            Select->set_lock_for_tables((yyvsp[(3) - (7)].lock_type));
          }
    break;

  case 1568:
#line 10620 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1571:
#line 10630 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_item_to_list(YYTHD, (yyvsp[(1) - (3)].item)) || add_value_to_list(YYTHD, (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1574:
#line 10643 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->update_list.push_back((yyvsp[(1) - (3)].item)) || 
              lex->value_list.push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1575:
#line 10652 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1576:
#line 10653 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1577:
#line 10660 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
    break;

  case 1579:
#line 10675 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(2) - (2)].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1580:
#line 10684 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1581:
#line 10686 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1582:
#line 10692 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1583:
#line 10697 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1584:
#line 10703 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1587:
#line 10716 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1588:
#line 10729 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].lex_str), 0);
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1589:
#line 10744 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1590:
#line 10745 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1591:
#line 10749 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1592:
#line 10750 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1593:
#line 10754 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->options|= OPTION_QUICK; }
    break;

  case 1594:
#line 10755 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1595:
#line 10756 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1596:
#line 10761 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1597:
#line 10772 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_stmt);
            lex->m_stmt= new (thd->mem_root) Truncate_statement(lex);
            if (lex->m_stmt == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1604:
#line 10797 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1605:
#line 10801 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1606:
#line 10805 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1607:
#line 10809 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1608:
#line 10813 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1609:
#line 10817 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1610:
#line 10821 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1611:
#line 10825 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1612:
#line 10829 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1613:
#line 10836 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= 0;
    }
    break;

  case 1614:
#line 10840 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[(3) - (3)].lex_str).str);
    }
    break;

  case 1615:
#line 10849 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->wild=0;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            bzero((char*) &lex->create_info,sizeof(lex->create_info));
          }
    break;

  case 1616:
#line 10857 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1617:
#line 10862 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
    break;

  case 1618:
#line 10869 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
    break;

  case 1619:
#line 10877 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1620:
#line 10885 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1621:
#line 10893 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
    break;

  case 1622:
#line 10901 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1623:
#line 10909 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1624:
#line 10916 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[(2) - (3)].db_type); }
    break;

  case 1625:
#line 10918 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1626:
#line 10920 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1627:
#line 10929 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1628:
#line 10933 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1629:
#line 10937 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1631:
#line 10942 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1633:
#line 10947 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
    break;

  case 1634:
#line 10956 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1635:
#line 10963 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
    break;

  case 1636:
#line 10968 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
    break;

  case 1637:
#line 10973 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
    break;

  case 1638:
#line 10978 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (void) create_select_for_variable("warning_count"); }
    break;

  case 1639:
#line 10980 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (void) create_select_for_variable("error_count"); }
    break;

  case 1640:
#line 10982 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
    break;

  case 1641:
#line 10984 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
    break;

  case 1642:
#line 10986 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
    break;

  case 1643:
#line 10988 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1644:
#line 10995 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              MYSQL_YYABORT;
          }
    break;

  case 1645:
#line 11003 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1646:
#line 11005 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1647:
#line 11013 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
    break;

  case 1648:
#line 11020 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
    break;

  case 1649:
#line 11027 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            bzero(curr_user, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
    break;

  case 1650:
#line 11037 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
            lex->grant_user->password=null_lex_str;
          }
    break;

  case 1651:
#line 11044 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[(3) - (4)].num);
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1652:
#line 11050 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1653:
#line 11059 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1654:
#line 11067 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1655:
#line 11071 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1656:
#line 11075 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1657:
#line 11082 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1658:
#line 11089 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1659:
#line 11095 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1660:
#line 11102 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1661:
#line 11109 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1662:
#line 11114 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1663:
#line 11119 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1664:
#line 11127 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1665:
#line 11129 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1666:
#line 11131 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1671:
#line 11145 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1672:
#line 11146 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1673:
#line 11150 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1674:
#line 11151 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1677:
#line 11160 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1678:
#line 11161 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1679:
#line 11165 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1680:
#line 11166 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1682:
#line 11172 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1683:
#line 11179 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Select->where= (yyvsp[(2) - (2)].item);
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1684:
#line 11189 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= 0;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (2)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1685:
#line 11199 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1686:
#line 11201 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->describe|= DESCRIBE_NORMAL; }
    break;

  case 1687:
#line 11203 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->select_lex.options|= SELECT_DESCRIBE;
          }
    break;

  case 1690:
#line 11215 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1691:
#line 11216 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->describe|= DESCRIBE_EXTENDED; }
    break;

  case 1692:
#line 11217 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->describe|= DESCRIBE_PARTITIONS; }
    break;

  case 1693:
#line 11221 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1694:
#line 11222 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1695:
#line 11224 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1696:
#line 11238 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1697:
#line 11245 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1698:
#line 11250 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
    break;

  case 1699:
#line 11259 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1700:
#line 11260 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1702:
#line 11265 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1703:
#line 11267 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1705:
#line 11282 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1706:
#line 11287 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1707:
#line 11289 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1708:
#line 11291 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1709:
#line 11293 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1710:
#line 11295 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1711:
#line 11297 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1712:
#line 11299 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1713:
#line 11301 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1714:
#line 11303 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1715:
#line 11305 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1716:
#line 11307 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1717:
#line 11309 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1718:
#line 11311 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1719:
#line 11313 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1720:
#line 11315 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1721:
#line 11319 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1722:
#line 11320 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1723:
#line 11325 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1724:
#line 11330 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1727:
#line 11339 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1728:
#line 11340 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1729:
#line 11341 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1730:
#line 11346 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1731:
#line 11352 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1733:
#line 11361 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1734:
#line 11365 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1735:
#line 11377 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1736:
#line 11386 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1737:
#line 11387 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1738:
#line 11388 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1739:
#line 11395 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1740:
#line 11406 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1741:
#line 11418 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (7)].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (7)].lex_str).str, 0, (yyvsp[(2) - (7)].filetype))))
              MYSQL_YYABORT;
          }
    break;

  case 1742:
#line 11428 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(12) - (12)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (12)].lock_type), MDL_SHARED_WRITE))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
          }
    break;

  case 1743:
#line 11438 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(14) - (14)].charset); }
    break;

  case 1744:
#line 11442 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1745:
#line 11446 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1746:
#line 11447 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1747:
#line 11451 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1748:
#line 11452 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1749:
#line 11456 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1750:
#line 11458 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              Ignore this option in SP to avoid problem with query cache
            */
            if (Lex->sphead != 0)
              (yyval.lock_type)= TL_WRITE_DEFAULT;
            else
#endif
              (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
          }
    break;

  case 1751:
#line 11469 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1752:
#line 11473 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1753:
#line 11474 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1754:
#line 11475 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1759:
#line 11490 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1760:
#line 11495 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[(4) - (4)].string);
            lex->exchange->opt_enclosed= 1;
          }
    break;

  case 1761:
#line 11502 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1762:
#line 11507 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1767:
#line 11525 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1768:
#line 11530 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1769:
#line 11537 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { }
    break;

  case 1770:
#line 11539 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->exchange->line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1772:
#line 11544 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1773:
#line 11551 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { }
    break;

  case 1774:
#line 11553 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { }
    break;

  case 1775:
#line 11557 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1776:
#line 11558 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1777:
#line 11559 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1778:
#line 11564 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1779:
#line 11566 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1780:
#line 11570 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {(yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1781:
#line 11572 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1782:
#line 11580 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1783:
#line 11581 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1786:
#line 11591 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->update_list.push_back((yyvsp[(1) - (5)].item)) || 
                lex->value_list.push_back((yyvsp[(4) - (5)].item)))
                MYSQL_YYABORT;
            (yyvsp[(4) - (5)].item)->set_name((yyvsp[(3) - (5)].simple_string), (uint) ((yyvsp[(5) - (5)].simple_string) - (yyvsp[(3) - (5)].simple_string)), YYTHD->charset());
          }
    break;

  case 1787:
#line 11604 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX_STRING tmp;
            THD *thd= YYTHD;
            CHARSET_INFO *cs_con= thd->variables.collation_connection;
            CHARSET_INFO *cs_cli= thd->variables.character_set_client;
            uint repertoire= thd->lex->text_string_is_7bit &&
                             my_charset_is_ascii_based(cs_cli) ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            if (thd->charset_is_collation_connection ||
                (repertoire == MY_REPERTOIRE_ASCII &&
                 my_charset_is_ascii_based(cs_con)))
              tmp= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&tmp, cs_con, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, cs_cli))
                MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_string(tmp.str, tmp.length, cs_con,
                                                DERIVATION_COERCIBLE,
                                                repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1788:
#line 11628 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            uint repertoire= Lex->text_string_is_7bit ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            DBUG_ASSERT(my_charset_is_ascii_based(national_charset_info));
            (yyval.item)= new (YYTHD->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                  national_charset_info,
                                                  DERIVATION_COERCIBLE,
                                                  repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1789:
#line 11640 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item_string *str= new (YYTHD->mem_root) Item_string((yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length, (yyvsp[(1) - (2)].charset));
            if (str == NULL)
              MYSQL_YYABORT;
            str->set_repertoire_from_value();
            str->set_cs_specified(TRUE);

            (yyval.item)= str;
          }
    break;

  case 1790:
#line 11651 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item_string* item= (Item_string*) (yyvsp[(1) - (2)].item);
            item->append((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (!(item->collation.repertoire & MY_REPERTOIRE_EXTENDED))
            {
              /*
                 If the string has been pure ASCII so far,
                 check the new part.
              */
              CHARSET_INFO *cs= YYTHD->variables.collation_connection;
              item->collation.repertoire|= my_string_repertoire(cs,
                                                                (yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length);
            }
          }
    break;

  case 1791:
#line 11670 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1792:
#line 11678 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1793:
#line 11690 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1794:
#line 11705 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            Item_param *item;
            if (! lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
            item= new (thd->mem_root) Item_param((uint) (lip->get_tok_start() - thd->query()));
            if (!((yyval.item)= item) || lex->param_list.push_back(item))
            {
              my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1795:
#line 11725 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1796:
#line 11726 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item_num); }
    break;

  case 1797:
#line 11728 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].item_num)->max_length++;
            (yyval.item)= (yyvsp[(2) - (2)].item_num)->neg();
          }
    break;

  case 1798:
#line 11735 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1799:
#line 11736 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item_num); }
    break;

  case 1800:
#line 11738 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_null();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1801:
#line 11745 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int((char*) "FALSE",0,1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1802:
#line 11751 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int((char*) "TRUE",1,1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1803:
#line 11757 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1804:
#line 11763 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1805:
#line 11769 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(NULL, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_repertoire_from_value();
            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1806:
#line 11798 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(NULL, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1807:
#line 11825 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item); }
    break;

  case 1808:
#line 11826 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item); }
    break;

  case 1809:
#line 11827 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item); }
    break;

  case 1810:
#line 11832 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1811:
#line 11842 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1812:
#line 11852 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1813:
#line 11858 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_decimal((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                   YYTHD->charset());
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1814:
#line 11867 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_float((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1815:
#line 11881 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1816:
#line 11882 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1817:
#line 11887 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            (yyval.item)= new (YYTHD->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, "*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1818:
#line 11896 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel= Select;
            const char* schema= thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                  NullS : (yyvsp[(1) - (5)].lex_str).str;
            (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str,"*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1819:
#line 11911 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1820:
#line 11916 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_variable_t *spv;
            sp_pcontext *spc = lex->spcont;
            if (spc && (spv = spc->find_variable(&(yyvsp[(1) - (1)].lex_str))))
            {
              /* We're compiling a stored procedure and found a variable */
              if (! lex->parsing_options.allows_variable)
              {
                my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
                MYSQL_YYABORT;
              }

              Item_splocal *splocal;
              splocal= new (thd->mem_root)
                         Item_splocal((yyvsp[(1) - (1)].lex_str), spv->offset, spv->type,
                                      lip->get_tok_start_prev() - lex->sphead->m_tmp_query,
                                      lip->get_tok_end() - lip->get_tok_start_prev());
              if (splocal == NULL)
                MYSQL_YYABORT;
#ifndef DBUG_OFF
              splocal->m_sp= lex->sphead;
#endif
              (yyval.item)= splocal;
              lex->safe_to_cache_query=0;
            }
            else
            {
              SELECT_LEX *sel=Select;
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1821:
#line 11962 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1822:
#line 11967 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel=Select;
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1823:
#line 11984 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1824:
#line 11989 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              FIXME This will work ok in simple_ident_nospvar case because
              we can't meet simple_ident_nospvar in trigger now. But it
              should be changed in future.
            */
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              Item_trigger_field *trg_fld;
              bool new_row= ((yyvsp[(1) - (3)].lex_str).str[0]=='N' || (yyvsp[(1) - (3)].lex_str).str[0]=='n');

              if (lex->trg_chistics.event == TRG_EVENT_INSERT &&
                  !new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
                MYSQL_YYABORT;
              }

              if (lex->trg_chistics.event == TRG_EVENT_DELETE &&
                  new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
                MYSQL_YYABORT;
              }

              DBUG_ASSERT(!new_row ||
                          (lex->trg_chistics.event == TRG_EVENT_INSERT ||
                           lex->trg_chistics.event == TRG_EVENT_UPDATE));
              const bool read_only=
                !(new_row && lex->trg_chistics.action_time == TRG_ACTION_BEFORE);
              trg_fld= new (thd->mem_root)
                         Item_trigger_field(Lex->current_context(),
                                            new_row ?
                                              Item_trigger_field::NEW_ROW:
                                              Item_trigger_field::OLD_ROW,
                                            (yyvsp[(3) - (3)].lex_str).str,
                                            SELECT_ACL,
                                            read_only);
              if (trg_fld == NULL)
                MYSQL_YYABORT;

              /*
                Let us add this item to list of all Item_trigger_field objects
                in trigger.
              */
              lex->trg_table_fields.link_in_list(trg_fld,
                                                 &trg_fld->next_trg_field);

              (yyval.item)= trg_fld;
            }
            else
            {
              SELECT_LEX *sel= lex->current_select;
              if (sel->no_table_names_allowed)
              {
                my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                         MYF(0), (yyvsp[(1) - (3)].lex_str).str, thd->where);
              }
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1825:
#line 12068 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(2) - (4)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);

            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1826:
#line 12093 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            const char* schema= (thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                 NullS : (yyvsp[(1) - (5)].lex_str).str);
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(3) - (5)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 schema,
                                                 (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1827:
#line 12123 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1828:
#line 12125 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (5)].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[(3) - (5)].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 1829:
#line 12141 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (3)].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 1830:
#line 12150 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str);}
    break;

  case 1831:
#line 12155 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (1)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1832:
#line 12161 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (3)].lex_str),(yyvsp[(3) - (3)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1833:
#line 12167 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= new Table_ident((yyvsp[(2) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1834:
#line 12177 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1835:
#line 12183 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str),(yyvsp[(3) - (4)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1836:
#line 12192 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX_STRING db={(char*) any_db,3};
            (yyval.table)= new Table_ident(YYTHD, db,(yyvsp[(1) - (1)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1837:
#line 12201 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1838:
#line 12203 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                   (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                   (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1839:
#line 12233 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1840:
#line 12249 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            } 
          }
    break;

  case 1841:
#line 12265 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1842:
#line 12281 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1843:
#line 12283 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1844:
#line 12293 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1845:
#line 12295 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1846:
#line 12305 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1847:
#line 12306 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1848:
#line 12307 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1849:
#line 12312 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[(1) - (1)].lex_str);
            (yyval.lex_user)->host.str= (char *) "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
    break;

  case 1850:
#line 12329 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[(1) - (3)].lex_str); (yyval.lex_user)->host=(yyvsp[(3) - (3)].lex_str);
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name(&(yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyval.lex_user)->host.str);
          }
    break;

  case 1851:
#line 12351 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /* 
              empty LEX_USER means current_user and 
              will be handled in the  get_current_user() function
              later
            */
            bzero((yyval.lex_user), sizeof(LEX_USER));
          }
    break;

  case 1852:
#line 12365 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1853:
#line 12366 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1854:
#line 12367 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1855:
#line 12368 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1856:
#line 12369 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1857:
#line 12370 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1858:
#line 12371 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1859:
#line 12372 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1860:
#line 12373 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1861:
#line 12374 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1862:
#line 12375 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1863:
#line 12376 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1864:
#line 12377 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1865:
#line 12378 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1866:
#line 12379 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1867:
#line 12380 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1868:
#line 12381 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1869:
#line 12382 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1870:
#line 12383 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1871:
#line 12384 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1872:
#line 12385 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1873:
#line 12386 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1874:
#line 12387 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1875:
#line 12388 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1876:
#line 12389 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1877:
#line 12390 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1878:
#line 12391 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1879:
#line 12392 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1880:
#line 12393 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1881:
#line 12394 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1882:
#line 12395 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1883:
#line 12396 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1884:
#line 12397 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1885:
#line 12398 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1886:
#line 12399 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1887:
#line 12400 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1888:
#line 12401 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1889:
#line 12402 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1890:
#line 12403 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1891:
#line 12404 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1892:
#line 12405 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1893:
#line 12406 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1894:
#line 12407 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1895:
#line 12408 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1896:
#line 12409 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1897:
#line 12410 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1898:
#line 12411 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1899:
#line 12412 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1900:
#line 12413 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1901:
#line 12414 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1902:
#line 12424 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1903:
#line 12425 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1904:
#line 12426 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1905:
#line 12427 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1906:
#line 12428 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1907:
#line 12429 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1908:
#line 12430 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1909:
#line 12431 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1910:
#line 12432 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1911:
#line 12433 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1912:
#line 12434 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1913:
#line 12435 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1914:
#line 12436 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1915:
#line 12437 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1916:
#line 12438 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1917:
#line 12439 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1918:
#line 12440 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1919:
#line 12441 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1920:
#line 12442 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1921:
#line 12443 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1922:
#line 12444 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1923:
#line 12445 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1924:
#line 12446 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1925:
#line 12447 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1926:
#line 12448 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1927:
#line 12449 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1928:
#line 12450 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1929:
#line 12451 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1930:
#line 12452 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1931:
#line 12453 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1932:
#line 12454 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1933:
#line 12455 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1934:
#line 12456 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1935:
#line 12457 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1936:
#line 12458 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1937:
#line 12459 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1938:
#line 12460 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1939:
#line 12461 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1940:
#line 12462 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1941:
#line 12463 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1942:
#line 12464 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1943:
#line 12465 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1944:
#line 12466 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1945:
#line 12467 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1946:
#line 12468 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1947:
#line 12469 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1948:
#line 12470 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1949:
#line 12471 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1950:
#line 12472 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1951:
#line 12473 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1952:
#line 12474 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1953:
#line 12475 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1954:
#line 12476 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1955:
#line 12477 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1956:
#line 12478 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1957:
#line 12479 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1958:
#line 12480 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1959:
#line 12481 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1960:
#line 12482 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1961:
#line 12483 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1962:
#line 12484 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1963:
#line 12485 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1964:
#line 12486 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1965:
#line 12487 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1966:
#line 12488 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1967:
#line 12489 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1968:
#line 12490 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1969:
#line 12491 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1970:
#line 12492 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1971:
#line 12493 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1972:
#line 12494 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1973:
#line 12495 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1974:
#line 12496 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1975:
#line 12497 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1976:
#line 12498 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1977:
#line 12499 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1978:
#line 12500 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1979:
#line 12501 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1980:
#line 12502 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1981:
#line 12503 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1982:
#line 12504 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1983:
#line 12505 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1984:
#line 12506 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1985:
#line 12507 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1986:
#line 12508 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1987:
#line 12509 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1988:
#line 12510 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1989:
#line 12511 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1990:
#line 12512 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1991:
#line 12513 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1992:
#line 12514 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1993:
#line 12515 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1994:
#line 12516 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1995:
#line 12517 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1996:
#line 12518 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1997:
#line 12519 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1998:
#line 12520 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 1999:
#line 12521 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2000:
#line 12522 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2001:
#line 12523 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2002:
#line 12524 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2003:
#line 12525 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2004:
#line 12526 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2005:
#line 12527 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2006:
#line 12528 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2007:
#line 12529 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2008:
#line 12530 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2009:
#line 12531 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2010:
#line 12532 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2011:
#line 12533 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2012:
#line 12534 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2013:
#line 12535 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2014:
#line 12536 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2015:
#line 12537 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2016:
#line 12538 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2017:
#line 12539 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2018:
#line 12540 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2019:
#line 12541 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2020:
#line 12542 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2021:
#line 12543 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2022:
#line 12544 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2023:
#line 12545 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2024:
#line 12546 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2025:
#line 12547 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2026:
#line 12548 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2027:
#line 12549 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2028:
#line 12550 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2029:
#line 12551 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2030:
#line 12552 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2031:
#line 12553 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2032:
#line 12554 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2033:
#line 12555 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2034:
#line 12556 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2035:
#line 12557 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2036:
#line 12558 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2037:
#line 12559 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2038:
#line 12560 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2039:
#line 12561 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2040:
#line 12562 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2041:
#line 12563 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2042:
#line 12564 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2043:
#line 12565 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2044:
#line 12566 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2045:
#line 12567 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2046:
#line 12568 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2047:
#line 12569 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2048:
#line 12570 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2049:
#line 12571 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2050:
#line 12572 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2051:
#line 12573 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2052:
#line 12574 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2053:
#line 12575 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2054:
#line 12576 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2055:
#line 12577 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2056:
#line 12578 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2057:
#line 12579 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2058:
#line 12580 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2059:
#line 12581 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2060:
#line 12582 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2061:
#line 12583 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2062:
#line 12584 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2063:
#line 12585 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2064:
#line 12586 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2065:
#line 12587 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2066:
#line 12588 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2067:
#line 12589 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2068:
#line 12590 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2069:
#line 12591 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2070:
#line 12592 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2071:
#line 12593 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2072:
#line 12594 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2073:
#line 12595 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2074:
#line 12596 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2075:
#line 12597 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2076:
#line 12598 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2077:
#line 12599 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2078:
#line 12600 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2079:
#line 12601 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2080:
#line 12602 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2081:
#line 12603 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2082:
#line 12604 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2083:
#line 12605 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2084:
#line 12606 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2085:
#line 12607 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2086:
#line 12608 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2087:
#line 12609 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2088:
#line 12610 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2089:
#line 12611 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2090:
#line 12612 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2091:
#line 12613 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2092:
#line 12614 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2093:
#line 12615 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2094:
#line 12616 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2095:
#line 12617 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2096:
#line 12618 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2097:
#line 12619 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2098:
#line 12620 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2099:
#line 12621 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2100:
#line 12622 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2101:
#line 12623 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2102:
#line 12624 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2103:
#line 12625 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2104:
#line 12626 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2105:
#line 12627 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2106:
#line 12628 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2107:
#line 12629 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2108:
#line 12630 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2109:
#line 12631 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2110:
#line 12632 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2111:
#line 12633 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2112:
#line 12634 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2113:
#line 12635 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2114:
#line 12636 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2115:
#line 12637 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2116:
#line 12638 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2117:
#line 12639 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2118:
#line 12640 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2119:
#line 12641 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2120:
#line 12642 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2121:
#line 12643 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2122:
#line 12644 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2123:
#line 12645 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2124:
#line 12646 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2125:
#line 12647 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2126:
#line 12648 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2127:
#line 12649 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2128:
#line 12650 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2129:
#line 12651 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2130:
#line 12652 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2131:
#line 12653 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2132:
#line 12654 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2133:
#line 12655 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2134:
#line 12656 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2135:
#line 12657 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2136:
#line 12658 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2137:
#line 12659 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2138:
#line 12660 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2139:
#line 12661 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2140:
#line 12662 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2141:
#line 12663 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2142:
#line 12664 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2143:
#line 12665 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2144:
#line 12666 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2145:
#line 12667 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2146:
#line 12668 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2147:
#line 12669 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2148:
#line 12670 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2149:
#line 12671 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2150:
#line 12672 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2151:
#line 12673 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2152:
#line 12674 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2153:
#line 12675 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2154:
#line 12676 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2155:
#line 12677 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2156:
#line 12678 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2157:
#line 12679 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2158:
#line 12680 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2159:
#line 12681 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2160:
#line 12682 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2161:
#line 12683 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2162:
#line 12684 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2163:
#line 12685 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2164:
#line 12686 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2165:
#line 12687 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2166:
#line 12688 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2167:
#line 12689 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2168:
#line 12690 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2169:
#line 12691 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2170:
#line 12692 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2171:
#line 12693 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2172:
#line 12694 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2173:
#line 12695 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2174:
#line 12696 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2175:
#line 12697 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2176:
#line 12698 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2177:
#line 12699 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2178:
#line 12700 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2179:
#line 12701 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2180:
#line 12708 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SET_OPTION;
            mysql_init_select(lex);
            lex->option_type=OPT_SESSION;
            lex->var_list.empty();
            lex->one_shot_set= 0;
            lex->autocommit= 0;
          }
    break;

  case 2181:
#line 12718 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2182:
#line 12722 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2183:
#line 12723 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2186:
#line 12732 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (lex->sphead)
            {
              /*
                If we are in SP we want have own LEX for each assignment.
                This is mostly because it is hard for several sp_instr_set
                and sp_instr_set_trigger instructions share one LEX.
                (Well, it is theoretically possible but adds some extra
                overhead on preparation for execution stage and IMO less
                robust).

                QQ: May be we should simply prohibit group assignments in SP?
              */
              lex->sphead->reset_lex(thd);
              lex= thd->lex;

              /* Set new LEX as if we at start of set rule. */
              lex->sql_command= SQLCOM_SET_OPTION;
              mysql_init_select(lex);
              lex->option_type=OPT_SESSION;
              lex->var_list.empty();
              lex->one_shot_set= 0;
              lex->autocommit= 0;
              lex->sphead->m_tmp_query= lip->get_tok_start();
            }
          }
    break;

  case 2187:
#line 12763 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (lex->sphead)
            {
              sp_head *sp= lex->sphead;

              if (!lex->var_list.is_empty())
              {
                /*
                  We have assignment to user or system variable or
                  option setting, so we should construct sp_instr_stmt
                  for it.
                */
                LEX_STRING qbuff;
                sp_instr_stmt *i;

                if (!(i= new sp_instr_stmt(sp->instructions(), lex->spcont,
                                           lex)))
                  MYSQL_YYABORT;

                /*
                  Extract the query statement from the tokenizer.  The
                  end is either lip->ptr, if there was no lookahead,
                  lip->tok_end otherwise.
                */
                if (yychar == YYEMPTY)
                  qbuff.length= lip->get_ptr() - sp->m_tmp_query;
                else
                  qbuff.length= lip->get_tok_end() - sp->m_tmp_query;

                if (!(qbuff.str= (char*) alloc_root(thd->mem_root,
                                                    qbuff.length + 5)))
                  MYSQL_YYABORT;

                strmake(strmake(qbuff.str, "SET ", 4), sp->m_tmp_query,
                        qbuff.length);
                qbuff.length+= 4;
                i->m_query= qbuff;
                if (sp->add_instr(i))
                  MYSQL_YYABORT;
              }
              if (lex->sphead->restore_lex(thd))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2188:
#line 12814 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2189:
#line 12815 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2190:
#line 12816 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2191:
#line 12817 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2192:
#line 12821 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= OPT_DEFAULT; }
    break;

  case 2193:
#line 12822 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->one_shot_set= 1; (yyval.num)= OPT_SESSION; }
    break;

  case 2194:
#line 12826 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2195:
#line 12827 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2196:
#line 12828 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2197:
#line 12829 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2198:
#line 12833 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2199:
#line 12834 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2200:
#line 12835 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2201:
#line 12836 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2204:
#line 12846 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            LEX_STRING *name= &(yyvsp[(2) - (4)].variable).base_name;

            if ((yyvsp[(2) - (4)].variable).var == trg_new_row_fake_var)
            {
              /* We are in trigger and assigning value to field of new row */
              if ((yyvsp[(1) - (4)].var_type))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              if (set_trigger_new_row(YYTHD, name, (yyvsp[(4) - (4)].item)))
                MYSQL_YYABORT;
            }
            else if ((yyvsp[(2) - (4)].variable).var)
            {
              if ((yyvsp[(1) - (4)].var_type))
                lex->option_type= (yyvsp[(1) - (4)].var_type);

              /* It is a system variable. */
              if (set_system_variable(thd, &(yyvsp[(2) - (4)].variable), lex->option_type, (yyvsp[(4) - (4)].item)))
                MYSQL_YYABORT;
            }
            else
            {
              sp_pcontext *spc= lex->spcont;
              sp_variable_t *spv= spc->find_variable(name);

              if ((yyvsp[(1) - (4)].var_type))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }

              /* It is a local variable. */
              if (set_local_variable(thd, spv, (yyvsp[(4) - (4)].item)))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2205:
#line 12888 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            lex->option_type= (yyvsp[(1) - (5)].var_type);
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[(5) - (5)].tx_isolation));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_isolation"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2206:
#line 12907 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var_user *var= new set_var_user(item);
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
          }
    break;

  case 2207:
#line 12918 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            struct sys_var_with_base tmp= (yyvsp[(4) - (6)].variable);
            /* Lookup if necessary: must be a system variable. */
            if (tmp.var == NULL)
            {
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;
            }
            if (set_system_variable(thd, &tmp, (yyvsp[(3) - (6)].var_type), (yyvsp[(6) - (6)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 2208:
#line 12931 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[(2) - (2)].charset) ? (yyvsp[(2) - (2)].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= new set_var_collation_client(cs2,
                                              thd->variables.collation_database,
                                              cs2);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2209:
#line 12945 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_STRING names;

            names.str= (char *)"names";
            names.length= 5;
            if (spc && spc->find_variable(&names))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              my_parse_error(ER(ER_SYNTAX_ERROR));

            MYSQL_YYABORT;
          }
    break;

  case 2210:
#line 12960 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[(2) - (3)].charset) ? (yyvsp[(2) - (3)].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[(3) - (3)].charset) ? (yyvsp[(3) - (3)].charset) : cs2;
            if (!my_charset_same(cs2, cs3))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new set_var_collation_client(cs3, cs3, cs3);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2211:
#line 12979 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_USER *user;
            sp_pcontext *spc= lex->spcont;
            LEX_STRING pw;

            pw.str= (char *)"password";
            pw.length= 8;
            if (spc && spc->find_variable(&pw))
            {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
              MYSQL_YYABORT;
            }
            if (!(user=(LEX_USER*) thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            user->host=null_lex_str;
            user->user.str=thd->security_ctx->user;
            set_var_password *var= new set_var_password(user, (yyvsp[(3) - (3)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            thd->lex->var_list.push_back(var);
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
    break;

  case 2212:
#line 13006 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            set_var_password *var= new set_var_password((yyvsp[(3) - (5)].lex_user),(yyvsp[(5) - (5)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
            Lex->autocommit= TRUE;
            if (Lex->sphead)
              Lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
    break;

  case 2213:
#line 13019 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            sp_pcontext *spc= thd->lex->spcont;
            sp_variable_t *spv;

            /* Best effort lookup for system variable. */
            if (!spc || !(spv = spc->find_variable(&(yyvsp[(1) - (1)].lex_str))))
            {
              struct sys_var_with_base tmp= {NULL, (yyvsp[(1) - (1)].lex_str)};

              /* Not an SP local variable */
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;

              (yyval.variable)= tmp;
            }
            else
            {
              /*
                Possibly an SP local variable (or a shadowed sysvar).
                Will depend on the context of the SET statement.
              */
              (yyval.variable).var= NULL;
              (yyval.variable).base_name= (yyvsp[(1) - (1)].lex_str);
            }
          }
    break;

  case 2214:
#line 13046 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (check_reserved_words(&(yyvsp[(1) - (3)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") || 
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              if ((yyvsp[(1) - (3)].lex_str).str[0]=='O' || (yyvsp[(1) - (3)].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                MYSQL_YYABORT;
              }
              if (lex->trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                MYSQL_YYABORT;
              }
              if (lex->trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                MYSQL_YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[(3) - (3)].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
              if (!tmp)
                MYSQL_YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[(1) - (3)].lex_str);
            }
          }
    break;

  case 2215:
#line 13089 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            if (!tmp)
              MYSQL_YYABORT;
            if (!tmp->is_struct())
              my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
            (yyval.variable).var= tmp;
            (yyval.variable).base_name.str=    (char*) "default";
            (yyval.variable).base_name.length= 7;
          }
    break;

  case 2216:
#line 13102 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2217:
#line 13103 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2218:
#line 13104 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2219:
#line 13105 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2220:
#line 13109 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;}
    break;

  case 2221:
#line 13111 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).length ? YYTHD->variables.old_passwords ?
              Item_func_old_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length) :
              Item_func_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length) :
              (yyvsp[(3) - (4)].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2222:
#line 13120 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).length ? Item_func_old_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str,
                                                          (yyvsp[(3) - (4)].lex_str).length) :
              (yyvsp[(3) - (4)].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2223:
#line 13131 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 2224:
#line 13132 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.item)=0; }
    break;

  case 2225:
#line 13134 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ON",  2, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2226:
#line 13140 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ALL", 3, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2227:
#line 13146 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("binary", 6, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2228:
#line 13157 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2229:
#line 13168 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2234:
#line 13183 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           (lock_for_write ?
                                            MDL_SHARED_NO_READ_WRITE :
                                            MDL_SHARED_READ)))
              MYSQL_YYABORT;
          }
    break;

  case 2235:
#line 13195 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2236:
#line 13196 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2237:
#line 13197 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 2238:
#line 13198 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2239:
#line 13203 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2240:
#line 13214 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2241:
#line 13223 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
          }
    break;

  case 2242:
#line 13235 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2243:
#line 13247 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2244:
#line 13266 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (Lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
    break;

  case 2245:
#line 13279 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; }
    break;

  case 2246:
#line 13280 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); }
    break;

  case 2247:
#line 13284 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ha_read_mode = RFIRST; }
    break;

  case 2248:
#line 13285 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ha_read_mode = RNEXT;  }
    break;

  case 2249:
#line 13289 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ha_read_mode = RFIRST; }
    break;

  case 2250:
#line 13290 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ha_read_mode = RNEXT;  }
    break;

  case 2251:
#line 13291 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ha_read_mode = RPREV;  }
    break;

  case 2252:
#line 13292 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->ha_read_mode = RLAST;  }
    break;

  case 2253:
#line 13294 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[(1) - (1)].ha_rkey_mode);
            if (!(lex->insert_list = new List_item))
              MYSQL_YYABORT;
          }
    break;

  case 2254:
#line 13302 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2255:
#line 13306 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2256:
#line 13307 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2257:
#line 13308 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2258:
#line 13309 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2259:
#line 13310 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2260:
#line 13317 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2261:
#line 13322 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
    break;

  case 2262:
#line 13328 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2263:
#line 13339 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2264:
#line 13350 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
    break;

  case 2265:
#line 13354 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2266:
#line 13364 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2267:
#line 13370 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
    break;

  case 2268:
#line 13377 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2269:
#line 13389 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2270:
#line 13400 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2273:
#line 13414 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2274:
#line 13416 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2279:
#line 13434 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2280:
#line 13435 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2281:
#line 13437 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2282:
#line 13438 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2283:
#line 13440 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2284:
#line 13441 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2285:
#line 13443 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2286:
#line 13444 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2287:
#line 13445 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2288:
#line 13446 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2289:
#line 13447 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2290:
#line 13448 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2291:
#line 13449 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2292:
#line 13450 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2293:
#line 13451 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2294:
#line 13452 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2295:
#line 13453 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2296:
#line 13454 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2297:
#line 13455 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2298:
#line 13456 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2299:
#line 13457 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2300:
#line 13458 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2301:
#line 13459 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2302:
#line 13460 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2303:
#line 13461 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2304:
#line 13462 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2305:
#line 13463 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2306:
#line 13464 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2307:
#line 13465 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2308:
#line 13466 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2309:
#line 13467 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2310:
#line 13468 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2311:
#line 13469 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2312:
#line 13470 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2313:
#line 13474 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2314:
#line 13475 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2317:
#line 13485 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2318:
#line 13495 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2319:
#line 13505 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2320:
#line 13518 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2321:
#line 13533 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2322:
#line 13546 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2323:
#line 13559 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2324:
#line 13571 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2325:
#line 13576 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2326:
#line 13584 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2327:
#line 13589 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2328:
#line 13597 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user); (yyvsp[(1) - (4)].lex_user)->password=(yyvsp[(4) - (4)].lex_str);
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            if ((yyvsp[(4) - (4)].lex_str).length)
            {
              if (YYTHD->variables.old_passwords)
              {
                char *buff= 
                  (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH_323+1);
                if (buff == NULL)
                  MYSQL_YYABORT;
                my_make_scrambled_password_323(buff, (yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length);
                (yyvsp[(1) - (4)].lex_user)->password.str= buff;
                (yyvsp[(1) - (4)].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
              }
              else
              {
                char *buff= 
                  (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH+1);
                if (buff == NULL)
                  MYSQL_YYABORT;
                my_make_scrambled_password(buff, (yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length);
                (yyvsp[(1) - (4)].lex_user)->password.str= buff;
                (yyvsp[(1) - (4)].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH;
              }
            }
          }
    break;

  case 2329:
#line 13626 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user); 
            (yyvsp[(1) - (5)].lex_user)->password= (yyvsp[(5) - (5)].lex_str); 
          }
    break;

  case 2330:
#line 13633 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin= (yyvsp[(4) - (4)].lex_str);
            (yyvsp[(1) - (4)].lex_user)->auth= empty_lex_str;
          }
    break;

  case 2331:
#line 13641 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin= (yyvsp[(4) - (6)].lex_str);
            (yyvsp[(1) - (6)].lex_user)->auth= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 2332:
#line 13649 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user); (yyvsp[(1) - (1)].lex_user)->password= null_lex_str; }
    break;

  case 2333:
#line 13654 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2337:
#line 13668 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,(yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2339:
#line 13697 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2340:
#line 13701 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2341:
#line 13705 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2342:
#line 13709 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2343:
#line 13715 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2345:
#line 13720 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2346:
#line 13721 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2347:
#line 13725 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2348:
#line 13726 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2349:
#line 13730 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2350:
#line 13732 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2351:
#line 13738 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2352:
#line 13744 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2353:
#line 13750 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2354:
#line 13759 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2355:
#line 13764 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2356:
#line 13768 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2357:
#line 13769 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2358:
#line 13774 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2359:
#line 13775 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2360:
#line 13776 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2361:
#line 13781 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2362:
#line 13782 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2363:
#line 13783 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2364:
#line 13787 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2365:
#line 13788 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2366:
#line 13793 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2367:
#line 13805 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2368:
#line 13815 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2369:
#line 13824 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2370:
#line 13833 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2371:
#line 13846 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2373:
#line 13852 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(2) - (2)].num), TRUE))
              MYSQL_YYABORT;
          }
    break;

  case 2374:
#line 13857 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
    break;

  case 2375:
#line 13867 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 2376:
#line 13868 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2377:
#line 13869 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2380:
#line 13878 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              unit->global_parameters= fake;
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
    break;

  case 2381:
#line 13894 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
    break;

  case 2384:
#line 13907 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2385:
#line 13908 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2386:
#line 13909 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2387:
#line 13914 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
    break;

  case 2388:
#line 13918 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
    break;

  case 2390:
#line 13927 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(3) - (3)].num), FALSE))
              MYSQL_YYABORT;
          }
    break;

  case 2391:
#line 13933 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->pop_context();
            (yyval.select_lex)= (yyvsp[(1) - (6)].select_lex);
          }
    break;

  case 2392:
#line 13942 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= (yyvsp[(2) - (3)].select_lex);
          }
    break;

  case 2393:
#line 13948 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->expr_allows_subselect ||
               lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (mysql_new_select(Lex, 1))
              MYSQL_YYABORT;
          }
    break;

  case 2394:
#line 13969 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->return_after_parsing();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;
            /*
              A subselect can add fields to an outer select. Reserve space for
              them.
            */
            lex->current_select->select_n_where_fields+=
            child->select_n_where_fields;
          }
    break;

  case 2399:
#line 13997 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->options|= SELECT_STRAIGHT_JOIN; }
    break;

  case 2400:
#line 13999 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
    break;

  case 2401:
#line 14006 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 2402:
#line 14007 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->options|= SELECT_SMALL_RESULT; }
    break;

  case 2403:
#line 14008 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->options|= SELECT_BIG_RESULT; }
    break;

  case 2404:
#line 14010 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
    break;

  case 2405:
#line 14016 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
    break;

  case 2406:
#line 14021 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Select->options|= SELECT_ALL; }
    break;

  case 2407:
#line 14032 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2408:
#line 14034 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2409:
#line 14036 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2423:
#line 14069 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2424:
#line 14083 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2425:
#line 14096 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2426:
#line 14098 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2427:
#line 14100 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2428:
#line 14105 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2429:
#line 14110 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2430:
#line 14112 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2431:
#line 14114 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
    break;

  case 2432:
#line 14119 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2433:
#line 14121 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2434:
#line 14123 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2435:
#line 14128 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_IGNORE,
                                                   MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2437:
#line 14145 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2439:
#line 14151 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2440:
#line 14156 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2441:
#line 14163 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
            lex->parsing_options.allows_derived= FALSE;
            lex->create_view_select.str= (char *) YYLIP->get_cpp_ptr();
          }
    break;

  case 2442:
#line 14172 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            uint len= YYLIP->get_cpp_ptr() - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
            lex->parsing_options.allows_derived= TRUE;
          }
    break;

  case 2445:
#line 14194 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2446:
#line 14196 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2447:
#line 14198 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2448:
#line 14200 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2449:
#line 14217 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* $8 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
    break;

  case 2450:
#line 14223 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* $12 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
    break;

  case 2451:
#line 14228 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* $15 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            if (!(sp= new sp_head()))
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(thd);
            sp->init(lex);
            sp->m_type= TYPE_ENUM_TRIGGER;
            sp->init_sp_name(thd, (yyvsp[(3) - (14)].spname));
            lex->stmt_definition_begin= (yyvsp[(2) - (14)].simple_string);
            lex->ident.str= (yyvsp[(7) - (14)].simple_string);
            lex->ident.length= (yyvsp[(11) - (14)].simple_string) - (yyvsp[(7) - (14)].simple_string);

            lex->sphead= sp;
            lex->spname= (yyvsp[(3) - (14)].spname);

            bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
    break;

  case 2452:
#line 14258 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* $17 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(YYTHD);
            sp->restore_thd_mem_root(YYTHD);

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(9) - (16)].table),
                                                   (LEX_STRING*) 0,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 2453:
#line 14292 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(4) - (8)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(4) - (8)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yyvsp[(2) - (8)].simple_string);
            lex->udf.name = (yyvsp[(4) - (8)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(6) - (8)].num);
            lex->udf.dl=(yyvsp[(8) - (8)].lex_str).str;
          }
    break;

  case 2454:
#line 14310 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yyvsp[(1) - (7)].simple_string);
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2455:
#line 14333 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp;
            const char* tmp_param_begin;

            lex->stmt_definition_begin= (yyvsp[(1) - (4)].simple_string);
            lex->spname= (yyvsp[(3) - (4)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            /* Order is important here: new - reset - init */
            sp= new sp_head();
            if (sp == NULL)
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(thd);
            sp->init(lex);
            sp->init_sp_name(thd, lex->spname);

            sp->m_type= TYPE_ENUM_FUNCTION;
            lex->sphead= sp;

            tmp_param_begin= lip->get_cpp_tok_start();
            tmp_param_begin++;
            lex->sphead->m_param_begin= tmp_param_begin;
          }
    break;

  case 2456:
#line 14365 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* $8 */
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
    break;

  case 2457:
#line 14369 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* $10 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
          }
    break;

  case 2458:
#line 14377 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[(11) - (11)].num) == MYSQL_TYPE_STRING || (yyvsp[(11) - (11)].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->fill_field_definition(YYTHD, lex,
                                          (enum enum_field_types) (yyvsp[(11) - (11)].num),
                                          &sp->m_return_field_def))
              MYSQL_YYABORT;

            bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 2459:
#line 14400 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
    break;

  case 2460:
#line 14409 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            sp->set_stmt_end(thd);
            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }
            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  MYSQL_ERROR::WARN_LEVEL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
            sp->restore_thd_mem_root(thd);
          }
    break;

  case 2461:
#line 14465 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yyvsp[(2) - (3)].simple_string);

            /* Order is important here: new - reset - init */
            sp= new sp_head();
            if (sp == NULL)
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(YYTHD);
            sp->init(lex);
            sp->m_type= TYPE_ENUM_PROCEDURE;
            sp->init_sp_name(YYTHD, (yyvsp[(3) - (3)].spname));

            lex->sphead= sp;
          }
    break;

  case 2462:
#line 14489 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            const char* tmp_param_begin;

            tmp_param_begin= YYLIP->get_cpp_tok_start();
            tmp_param_begin++;
            Lex->sphead->m_param_begin= tmp_param_begin;
          }
    break;

  case 2463:
#line 14498 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
            bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 2464:
#line 14506 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
    break;

  case 2465:
#line 14514 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->set_stmt_end(YYTHD);
            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp->restore_thd_mem_root(YYTHD);
          }
    break;

  case 2466:
#line 14528 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
    break;

  case 2467:
#line 14532 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
    break;

  case 2468:
#line 14536 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
    break;

  case 2469:
#line 14540 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
    break;

  case 2470:
#line 14544 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
    break;

  case 2471:
#line 14548 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
          }
    break;

  case 2472:
#line 14555 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
          }
    break;

  case 2473:
#line 14562 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
          }
    break;

  case 2474:
#line 14569 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
          }
    break;

  case 2475:
#line 14578 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2476:
#line 14579 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2477:
#line 14583 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2478:
#line 14584 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_JOIN;        }
    break;

  case 2479:
#line 14585 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_RESUME;      }
    break;

  case 2480:
#line 14589 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2481:
#line 14590 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_ONE_PHASE;   }
    break;

  case 2482:
#line 14595 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2483:
#line 14597 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_SUSPEND;     }
    break;

  case 2485:
#line 14602 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {}
    break;

  case 2486:
#line 14603 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_FOR_MIGRATE; }
    break;

  case 2487:
#line 14608 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (5)].lex_str);
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2488:
#line 14618 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/mysql-5.5.15-release-export-2403707/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (3)].lex_str);
          }
    break;


/* Line 1267 of yacc.c.  */
#line 33968 "/export/home2/pb2/build/sb_0-3619090-1310583407.97/dist/sql/sql_yacc.cc"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;


  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (yymsg);
	  }
	else
	  {
	    yyerror (YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;


      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}



